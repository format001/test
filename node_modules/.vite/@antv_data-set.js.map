{
  "version": 3,
  "sources": ["../d3-geo/src/adder.js", "../d3-geo/src/math.js", "../d3-geo/src/noop.js", "../d3-geo/src/stream.js", "../d3-geo/src/area.js", "../d3-geo/src/cartesian.js", "../d3-geo/src/bounds.js", "../d3-geo/src/centroid.js", "../d3-geo/src/constant.js", "../d3-geo/src/compose.js", "../d3-geo/src/rotation.js", "../d3-geo/src/circle.js", "../d3-geo/src/clip/buffer.js", "../d3-geo/src/clip/line.js", "../d3-geo/src/pointEqual.js", "../d3-geo/src/clip/polygon.js", "../d3-array/src/ascending.js", "../d3-array/src/bisector.js", "../d3-array/src/bisect.js", "../d3-array/src/pairs.js", "../d3-array/src/cross.js", "../d3-array/src/descending.js", "../d3-array/src/number.js", "../d3-array/src/variance.js", "../d3-array/src/deviation.js", "../d3-array/src/extent.js", "../d3-array/src/array.js", "../d3-array/src/constant.js", "../d3-array/src/identity.js", "../d3-array/src/range.js", "../d3-array/src/ticks.js", "../d3-array/src/threshold/sturges.js", "../d3-array/src/histogram.js", "../d3-array/src/quantile.js", "../d3-array/src/threshold/freedmanDiaconis.js", "../d3-array/src/threshold/scott.js", "../d3-array/src/max.js", "../d3-array/src/mean.js", "../d3-array/src/median.js", "../d3-array/src/merge.js", "../d3-array/src/min.js", "../d3-array/src/permute.js", "../d3-array/src/scan.js", "../d3-array/src/shuffle.js", "../d3-array/src/sum.js", "../d3-array/src/transpose.js", "../d3-array/src/zip.js", "../d3-array/src/index.js", "../d3-geo/src/clip/extent.js", "../d3-geo/src/polygonContains.js", "../d3-geo/src/length.js", "../d3-geo/src/distance.js", "../d3-geo/src/contains.js", "../d3-geo/src/graticule.js", "../d3-geo/src/interpolate.js", "../d3-geo/src/identity.js", "../d3-geo/src/path/area.js", "../d3-geo/src/path/bounds.js", "../d3-geo/src/path/centroid.js", "../d3-geo/src/path/context.js", "../d3-geo/src/path/measure.js", "../d3-geo/src/path/string.js", "../d3-geo/src/path/index.js", "../d3-geo/src/clip/index.js", "../d3-geo/src/clip/antimeridian.js", "../d3-geo/src/clip/circle.js", "../d3-geo/src/transform.js", "../d3-geo/src/projection/fit.js", "../d3-geo/src/projection/resample.js", "../d3-geo/src/projection/index.js", "../d3-geo/src/projection/conic.js", "../d3-geo/src/projection/cylindricalEqualArea.js", "../d3-geo/src/projection/conicEqualArea.js", "../d3-geo/src/projection/albers.js", "../d3-geo/src/projection/albersUsa.js", "../d3-geo/src/projection/azimuthal.js", "../d3-geo/src/projection/azimuthalEqualArea.js", "../d3-geo/src/projection/azimuthalEquidistant.js", "../d3-geo/src/projection/mercator.js", "../d3-geo/src/projection/conicConformal.js", "../d3-geo/src/projection/equirectangular.js", "../d3-geo/src/projection/conicEquidistant.js", "../d3-geo/src/projection/gnomonic.js", "../d3-geo/src/projection/identity.js", "../d3-geo/src/projection/orthographic.js", "../d3-geo/src/projection/stereographic.js", "../d3-geo/src/projection/transverseMercator.js", "../d3-geo/index.js", "../d3-geo-projection/node_modules/d3-geo/src/adder.js", "../d3-geo-projection/node_modules/d3-geo/src/math.js", "../d3-geo-projection/node_modules/d3-geo/src/noop.js", "../d3-geo-projection/node_modules/d3-geo/src/stream.js", "../d3-geo-projection/node_modules/d3-geo/src/area.js", "../d3-geo-projection/node_modules/d3-geo/src/cartesian.js", "../d3-geo-projection/node_modules/d3-geo/src/bounds.js", "../d3-geo-projection/node_modules/d3-geo/src/centroid.js", "../d3-geo-projection/node_modules/d3-geo/src/constant.js", "../d3-geo-projection/node_modules/d3-geo/src/compose.js", "../d3-geo-projection/node_modules/d3-geo/src/rotation.js", "../d3-geo-projection/node_modules/d3-geo/src/circle.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/buffer.js", "../d3-geo-projection/node_modules/d3-geo/src/pointEqual.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/rejoin.js", "../d3-geo-projection/node_modules/d3-geo/src/polygonContains.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/index.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/antimeridian.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/circle.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/line.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/rectangle.js", "../d3-geo-projection/node_modules/d3-geo/src/clip/extent.js", "../d3-geo-projection/node_modules/d3-geo/src/length.js", "../d3-geo-projection/node_modules/d3-geo/src/distance.js", "../d3-geo-projection/node_modules/d3-geo/src/contains.js", "../d3-geo-projection/node_modules/d3-geo/src/graticule.js", "../d3-geo-projection/node_modules/d3-geo/src/interpolate.js", "../d3-geo-projection/node_modules/d3-geo/src/identity.js", "../d3-geo-projection/node_modules/d3-geo/src/path/area.js", "../d3-geo-projection/node_modules/d3-geo/src/path/bounds.js", "../d3-geo-projection/node_modules/d3-geo/src/path/centroid.js", "../d3-geo-projection/node_modules/d3-geo/src/path/context.js", "../d3-geo-projection/node_modules/d3-geo/src/path/measure.js", "../d3-geo-projection/node_modules/d3-geo/src/path/string.js", "../d3-geo-projection/node_modules/d3-geo/src/path/index.js", "../d3-geo-projection/node_modules/d3-geo/src/transform.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/fit.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/resample.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/index.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/conic.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/cylindricalEqualArea.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/conicEqualArea.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/albers.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/albersUsa.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/azimuthal.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEqualArea.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/azimuthalEquidistant.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/mercator.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/conicConformal.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/equirectangular.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/conicEquidistant.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/equalEarth.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/gnomonic.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/identity.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/naturalEarth1.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/orthographic.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/stereographic.js", "../d3-geo-projection/node_modules/d3-geo/src/projection/transverseMercator.js", "../d3-geo-projection/node_modules/d3-geo/src/index.js", "../d3-geo-projection/src/math.js", "../d3-geo-projection/src/airy.js", "../d3-geo-projection/src/aitoff.js", "../d3-geo-projection/src/armadillo.js", "../d3-geo-projection/src/august.js", "../d3-geo-projection/src/baker.js", "../d3-geo-projection/src/berghaus.js", "../d3-geo-projection/src/mollweide.js", "../d3-geo-projection/src/boggs.js", "../d3-geo-projection/src/parallel1.js", "../d3-geo-projection/src/sinusoidal.js", "../d3-geo-projection/src/bonne.js", "../d3-geo-projection/src/bottomley.js", "../d3-geo-projection/src/bromley.js", "../d3-geo-projection/src/chamberlin.js", "../d3-geo-projection/src/collignon.js", "../d3-geo-projection/src/craig.js", "../d3-geo-projection/src/craster.js", "../d3-geo-projection/src/cylindricalEqualArea.js", "../d3-geo-projection/src/cylindricalStereographic.js", "../d3-geo-projection/src/eckert1.js", "../d3-geo-projection/src/eckert2.js", "../d3-geo-projection/src/eckert3.js", "../d3-geo-projection/src/eckert4.js", "../d3-geo-projection/src/eckert5.js", "../d3-geo-projection/src/eckert6.js", "../d3-geo-projection/src/eisenlohr.js", "../d3-geo-projection/src/fahey.js", "../d3-geo-projection/src/foucaut.js", "../d3-geo-projection/src/gilbert.js", "../d3-geo-projection/src/gingery.js", "../d3-geo-projection/src/ginzburgPolyconic.js", "../d3-geo-projection/src/ginzburg4.js", "../d3-geo-projection/src/ginzburg5.js", "../d3-geo-projection/src/ginzburg6.js", "../d3-geo-projection/src/ginzburg8.js", "../d3-geo-projection/src/ginzburg9.js", "../d3-geo-projection/src/square.js", "../d3-geo-projection/src/gringorten.js", "../d3-geo-projection/src/elliptic.js", "../d3-geo-projection/src/guyou.js", "../d3-geo-projection/src/hammer.js", "../d3-geo-projection/src/hammerRetroazimuthal.js", "../d3-geo-projection/src/healpix.js", "../d3-geo-projection/src/hill.js", "../d3-geo-projection/src/sinuMollweide.js", "../d3-geo-projection/src/homolosine.js", "../d3-geo-projection/src/interrupted/index.js", "../d3-geo-projection/src/interrupted/boggs.js", "../d3-geo-projection/src/interrupted/homolosine.js", "../d3-geo-projection/src/interrupted/mollweide.js", "../d3-geo-projection/src/interrupted/mollweideHemispheres.js", "../d3-geo-projection/src/interrupted/sinuMollweide.js", "../d3-geo-projection/src/interrupted/sinusoidal.js", "../d3-geo-projection/src/kavrayskiy7.js", "../d3-geo-projection/src/lagrange.js", "../d3-geo-projection/src/larrivee.js", "../d3-geo-projection/src/laskowski.js", "../d3-geo-projection/src/littrow.js", "../d3-geo-projection/src/loximuthal.js", "../d3-geo-projection/src/miller.js", "../d3-geo-projection/src/modifiedStereographic.js", "../d3-geo-projection/src/mtFlatPolarParabolic.js", "../d3-geo-projection/src/mtFlatPolarQuartic.js", "../d3-geo-projection/src/mtFlatPolarSinusoidal.js", "../d3-geo-projection/src/naturalEarth.js", "../d3-geo-projection/src/naturalEarth2.js", "../d3-geo-projection/src/nellHammer.js", "../d3-geo-projection/src/patterson.js", "../d3-geo-projection/src/polyconic.js", "../d3-geo-projection/src/polyhedral/matrix.js", "../d3-geo-projection/src/polyhedral/index.js", "../d3-geo-projection/src/polyhedral/octahedron.js", "../d3-geo-projection/src/polyhedral/butterfly.js", "../d3-geo-projection/src/polyhedral/collignon.js", "../d3-geo-projection/src/polyhedral/waterman.js", "../d3-geo-projection/src/noop.js", "../d3-geo-projection/src/project/clockwise.js", "../d3-geo-projection/src/project/contains.js", "../d3-geo-projection/src/project/index.js", "../d3-geo-projection/src/quincuncial/index.js", "../d3-geo-projection/src/quincuncial/gringorten.js", "../d3-geo-projection/src/quincuncial/peirce.js", "../d3-geo-projection/src/quantize.js", "../d3-geo-projection/src/rectangularPolyconic.js", "../d3-geo-projection/src/robinson.js", "../d3-geo-projection/src/satellite.js", "../d3-geo-projection/src/stitch.js", "../d3-geo-projection/src/times.js", "../d3-geo-projection/src/twoPoint.js", "../d3-geo-projection/src/twoPointAzimuthal.js", "../d3-geo-projection/src/twoPointEquidistant.js", "../d3-geo-projection/src/vanDerGrinten.js", "../d3-geo-projection/src/vanDerGrinten2.js", "../d3-geo-projection/src/vanDerGrinten3.js", "../d3-geo-projection/src/vanDerGrinten4.js", "../d3-geo-projection/src/wagner4.js", "../d3-geo-projection/src/wagner6.js", "../d3-geo-projection/src/wagner7.js", "../d3-geo-projection/src/wiechel.js", "../d3-geo-projection/src/winkel3.js", "../d3-geo-projection/index.js", "../wolfy87-eventemitter/EventEmitter.js", "../@antv/data-set/lib/view.js", "../d3-composite-projections/src/math.js", "../d3-composite-projections/node_modules/d3-array/src/ascending.js", "../d3-composite-projections/node_modules/d3-array/src/bisector.js", "../d3-composite-projections/node_modules/d3-array/src/number.js", "../d3-composite-projections/node_modules/d3-array/src/bisect.js", "../d3-composite-projections/node_modules/d3-array/src/count.js", "../d3-composite-projections/node_modules/d3-array/src/cross.js", "../d3-composite-projections/node_modules/d3-array/src/cumsum.js", "../d3-composite-projections/node_modules/d3-array/src/descending.js", "../d3-composite-projections/node_modules/d3-array/src/variance.js", "../d3-composite-projections/node_modules/d3-array/src/deviation.js", "../d3-composite-projections/node_modules/d3-array/src/extent.js", "../d3-composite-projections/node_modules/d3-array/src/fsum.js", "../internmap/src/index.js", "../d3-composite-projections/node_modules/d3-array/src/identity.js", "../d3-composite-projections/node_modules/d3-array/src/group.js", "../d3-composite-projections/node_modules/d3-array/src/permute.js", "../d3-composite-projections/node_modules/d3-array/src/sort.js", "../d3-composite-projections/node_modules/d3-array/src/groupSort.js", "../d3-composite-projections/node_modules/d3-array/src/array.js", "../d3-composite-projections/node_modules/d3-array/src/constant.js", "../d3-composite-projections/node_modules/d3-array/src/ticks.js", "../d3-composite-projections/node_modules/d3-array/src/nice.js", "../d3-composite-projections/node_modules/d3-array/src/threshold/sturges.js", "../d3-composite-projections/node_modules/d3-array/src/bin.js", "../d3-composite-projections/node_modules/d3-array/src/max.js", "../d3-composite-projections/node_modules/d3-array/src/min.js", "../d3-composite-projections/node_modules/d3-array/src/quickselect.js", "../d3-composite-projections/node_modules/d3-array/src/quantile.js", "../d3-composite-projections/node_modules/d3-array/src/threshold/freedmanDiaconis.js", "../d3-composite-projections/node_modules/d3-array/src/threshold/scott.js", "../d3-composite-projections/node_modules/d3-array/src/maxIndex.js", "../d3-composite-projections/node_modules/d3-array/src/mean.js", "../d3-composite-projections/node_modules/d3-array/src/median.js", "../d3-composite-projections/node_modules/d3-array/src/merge.js", "../d3-composite-projections/node_modules/d3-array/src/minIndex.js", "../d3-composite-projections/node_modules/d3-array/src/pairs.js", "../d3-composite-projections/node_modules/d3-array/src/range.js", "../d3-composite-projections/node_modules/d3-array/src/least.js", "../d3-composite-projections/node_modules/d3-array/src/leastIndex.js", "../d3-composite-projections/node_modules/d3-array/src/greatest.js", "../d3-composite-projections/node_modules/d3-array/src/greatestIndex.js", "../d3-composite-projections/node_modules/d3-array/src/scan.js", "../d3-composite-projections/node_modules/d3-array/src/shuffle.js", "../d3-composite-projections/node_modules/d3-array/src/sum.js", "../d3-composite-projections/node_modules/d3-array/src/transpose.js", "../d3-composite-projections/node_modules/d3-array/src/zip.js", "../d3-composite-projections/node_modules/d3-array/src/every.js", "../d3-composite-projections/node_modules/d3-array/src/some.js", "../d3-composite-projections/node_modules/d3-array/src/filter.js", "../d3-composite-projections/node_modules/d3-array/src/map.js", "../d3-composite-projections/node_modules/d3-array/src/reduce.js", "../d3-composite-projections/node_modules/d3-array/src/reverse.js", "../d3-composite-projections/node_modules/d3-array/src/difference.js", "../d3-composite-projections/node_modules/d3-array/src/disjoint.js", "../d3-composite-projections/node_modules/d3-array/src/set.js", "../d3-composite-projections/node_modules/d3-array/src/intersection.js", "../d3-composite-projections/node_modules/d3-array/src/superset.js", "../d3-composite-projections/node_modules/d3-array/src/subset.js", "../d3-composite-projections/node_modules/d3-array/src/union.js", "../d3-composite-projections/node_modules/d3-array/src/index.js", "../d3-composite-projections/node_modules/d3-geo/src/math.js", "../d3-composite-projections/node_modules/d3-geo/src/noop.js", "../d3-composite-projections/node_modules/d3-geo/src/stream.js", "../d3-composite-projections/node_modules/d3-geo/src/area.js", "../d3-composite-projections/node_modules/d3-geo/src/cartesian.js", "../d3-composite-projections/node_modules/d3-geo/src/bounds.js", "../d3-composite-projections/node_modules/d3-geo/src/centroid.js", "../d3-composite-projections/node_modules/d3-geo/src/constant.js", "../d3-composite-projections/node_modules/d3-geo/src/compose.js", "../d3-composite-projections/node_modules/d3-geo/src/rotation.js", "../d3-composite-projections/node_modules/d3-geo/src/circle.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/buffer.js", "../d3-composite-projections/node_modules/d3-geo/src/pointEqual.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/rejoin.js", "../d3-composite-projections/node_modules/d3-geo/src/polygonContains.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/index.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/antimeridian.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/circle.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/line.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/rectangle.js", "../d3-composite-projections/node_modules/d3-geo/src/clip/extent.js", "../d3-composite-projections/node_modules/d3-geo/src/length.js", "../d3-composite-projections/node_modules/d3-geo/src/distance.js", "../d3-composite-projections/node_modules/d3-geo/src/contains.js", "../d3-composite-projections/node_modules/d3-geo/src/graticule.js", "../d3-composite-projections/node_modules/d3-geo/src/interpolate.js", "../d3-composite-projections/node_modules/d3-geo/src/identity.js", "../d3-composite-projections/node_modules/d3-geo/src/path/area.js", "../d3-composite-projections/node_modules/d3-geo/src/path/bounds.js", "../d3-composite-projections/node_modules/d3-geo/src/path/centroid.js", "../d3-composite-projections/node_modules/d3-geo/src/path/context.js", "../d3-composite-projections/node_modules/d3-geo/src/path/measure.js", "../d3-composite-projections/node_modules/d3-geo/src/path/string.js", "../d3-composite-projections/node_modules/d3-geo/src/path/index.js", "../d3-composite-projections/node_modules/d3-geo/src/transform.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/fit.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/resample.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/index.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/conic.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/cylindricalEqualArea.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/conicEqualArea.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/albers.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/albersUsa.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/azimuthal.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/azimuthalEqualArea.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/azimuthalEquidistant.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/mercator.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/conicConformal.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/equirectangular.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/conicEquidistant.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/equalEarth.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/gnomonic.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/identity.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/naturalEarth1.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/orthographic.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/stereographic.js", "../d3-composite-projections/node_modules/d3-geo/src/projection/transverseMercator.js", "../d3-composite-projections/node_modules/d3-geo/src/index.js", "../d3-composite-projections/src/bounds.js", "../d3-composite-projections/src/fit.js", "../d3-path/src/path.js", "../d3-path/src/index.js", "../d3-composite-projections/src/albersUsa.js", "../d3-composite-projections/src/albersUsaTerritories.js", "../d3-composite-projections/src/conicConformalSpain.js", "../d3-composite-projections/src/conicConformalPortugal.js", "../d3-composite-projections/src/mercatorEcuador.js", "../d3-composite-projections/src/transverseMercatorChile.js", "../d3-composite-projections/src/conicEquidistantJapan.js", "../d3-composite-projections/src/conicConformalFrance.js", "../d3-composite-projections/src/conicConformalEurope.js", "../d3-composite-projections/src/conicConformalNetherlands.js", "../d3-composite-projections/src/mercatorMalaysia.js", "../d3-composite-projections/src/mercatorEquatorialGuinea.js", "../d3-composite-projections/src/albersUk.js", "../d3-composite-projections/index.js", "../@antv/data-set/lib/util/get-geo-projection.js", "../@antv/data-set/lib/api/geo.js", "../@antv/data-set/lib/api/hierarchy.js", "../@antv/data-set/lib/util/simple-sort-by.js", "../@antv/data-set/lib/util/partition.js", "../@antv/data-set/lib/api/partition.js", "../simple-statistics/dist/simple-statistics.mjs", "../@antv/data-set/lib/util/p-by-fraction.js", "../@antv/data-set/lib/constants.js", "../@antv/data-set/lib/api/statistics.js", "../@antv/data-set/lib/data-set.js", "../@antv/data-set/lib/connector/default.js", "../d3-dsv/src/dsv.js", "../d3-dsv/src/csv.js", "../d3-dsv/src/tsv.js", "../d3-dsv/src/autoType.js", "../d3-dsv/src/index.js", "../@antv/data-set/lib/connector/dsv.js", "../@antv/data-set/lib/connector/geo-graticule.js", "../parse-svg-path/index.js", "../abs-svg-path/index.js", "../point-at-length/index.js", "../@antv/data-set/lib/connector/geojson.js", "../@antv/data-set/lib/connector/graph.js", "../d3-hexjson/src/render.js", "../d3-hexjson/index.js", "../@antv/data-set/lib/connector/hexjson.js", "../d3-hierarchy/src/cluster.js", "../d3-hierarchy/src/hierarchy/count.js", "../d3-hierarchy/src/hierarchy/each.js", "../d3-hierarchy/src/hierarchy/eachBefore.js", "../d3-hierarchy/src/hierarchy/eachAfter.js", "../d3-hierarchy/src/hierarchy/sum.js", "../d3-hierarchy/src/hierarchy/sort.js", "../d3-hierarchy/src/hierarchy/path.js", "../d3-hierarchy/src/hierarchy/ancestors.js", "../d3-hierarchy/src/hierarchy/descendants.js", "../d3-hierarchy/src/hierarchy/leaves.js", "../d3-hierarchy/src/hierarchy/links.js", "../d3-hierarchy/src/hierarchy/index.js", "../d3-hierarchy/src/array.js", "../d3-hierarchy/src/pack/enclose.js", "../d3-hierarchy/src/pack/siblings.js", "../d3-hierarchy/src/accessors.js", "../d3-hierarchy/src/constant.js", "../d3-hierarchy/src/pack/index.js", "../d3-hierarchy/src/treemap/round.js", "../d3-hierarchy/src/treemap/dice.js", "../d3-hierarchy/src/partition.js", "../d3-hierarchy/src/stratify.js", "../d3-hierarchy/src/tree.js", "../d3-hierarchy/src/treemap/slice.js", "../d3-hierarchy/src/treemap/squarify.js", "../d3-hierarchy/src/treemap/index.js", "../d3-hierarchy/src/treemap/binary.js", "../d3-hierarchy/src/treemap/sliceDice.js", "../d3-hierarchy/src/treemap/resquarify.js", "../d3-hierarchy/src/index.js", "../@antv/data-set/lib/connector/hierarchy.js", "../topojson-client/src/identity.js", "../topojson-client/src/transform.js", "../topojson-client/src/bbox.js", "../topojson-client/src/reverse.js", "../topojson-client/src/feature.js", "../topojson-client/src/stitch.js", "../topojson-client/src/mesh.js", "../topojson-client/src/merge.js", "../topojson-client/src/bisect.js", "../topojson-client/src/neighbors.js", "../topojson-client/src/untransform.js", "../topojson-client/src/quantize.js", "../topojson-client/src/index.js", "../@antv/data-set/lib/connector/topojson.js", "../@antv/data-set/lib/transform/default.js", "../@antv/data-set/lib/transform/filter.js", "../@antv/data-set/lib/util/option-parser.js", "../@antv/data-set/lib/transform/fold.js", "../@antv/data-set/lib/transform/map.js", "../@antv/data-set/lib/transform/partition.js", "../@antv/data-set/lib/transform/percent.js", "../@antv/data-set/lib/transform/pick.js", "../@antv/data-set/lib/transform/proportion.js", "../@antv/data-set/lib/transform/rename.js", "../@antv/data-set/lib/transform/reverse.js", "../@antv/data-set/lib/transform/sort.js", "../@antv/data-set/lib/transform/sort-by.js", "../@antv/data-set/lib/transform/subset.js", "../@antv/data-set/lib/transform/fill-rows.js", "../@antv/data-set/lib/transform/impute.js", "../@antv/data-set/lib/transform/aggregate.js", "../regression/dist/regression.js", "../@antv/data-set/lib/util/get-series-values.js", "../@antv/data-set/lib/util/bandwidth.js", "../@antv/data-set/lib/transform/regression.js", "../@antv/data-set/lib/util/kernel.js", "../@antv/data-set/lib/transform/kde.js", "../@antv/data-set/lib/transform/bin/hexagon.js", "../@antv/data-set/lib/transform/bin/histogram.js", "../@antv/data-set/lib/transform/bin/quantile.js", "../@antv/data-set/lib/transform/bin/rectangle.js", "../@antv/data-set/lib/transform/geo/centroid.js", "../@antv/data-set/lib/transform/geo/projection.js", "../@antv/data-set/lib/transform/geo/region.js", "../@antv/data-set/lib/transform/diagram/arc.js", "../lodash/clone.js", "../lodash/forEach.js", "../lodash/each.js", "../lodash/_baseFilter.js", "../lodash/filter.js", "../lodash/isEmpty.js", "../lodash/isUndefined.js", "../lodash/_arrayReduce.js", "../lodash/_baseReduce.js", "../lodash/reduce.js", "../lodash/_asciiSize.js", "../lodash/_hasUnicode.js", "../lodash/_unicodeSize.js", "../lodash/_stringSize.js", "../lodash/size.js", "../lodash/transform.js", "../lodash/_baseFindIndex.js", "../lodash/_baseIsNaN.js", "../lodash/_strictIndexOf.js", "../lodash/_baseIndexOf.js", "../lodash/_arrayIncludes.js", "../lodash/_arrayIncludesWith.js", "../lodash/noop.js", "../lodash/_createSet.js", "../lodash/_baseUniq.js", "../lodash/union.js", "../lodash/_baseValues.js", "../lodash/values.js", "../graphlib/lib/lodash.js", "../graphlib/lib/graph.js", "../graphlib/lib/version.js", "../graphlib/lib/index.js", "../graphlib/lib/json.js", "../graphlib/lib/alg/components.js", "../graphlib/lib/data/priority-queue.js", "../graphlib/lib/alg/dijkstra.js", "../graphlib/lib/alg/dijkstra-all.js", "../graphlib/lib/alg/tarjan.js", "../graphlib/lib/alg/find-cycles.js", "../graphlib/lib/alg/floyd-warshall.js", "../graphlib/lib/alg/topsort.js", "../graphlib/lib/alg/is-acyclic.js", "../graphlib/lib/alg/dfs.js", "../graphlib/lib/alg/postorder.js", "../graphlib/lib/alg/preorder.js", "../graphlib/lib/alg/prim.js", "../graphlib/lib/alg/index.js", "../graphlib/index.js", "../dagre/lib/graphlib.js", "../lodash/defaults.js", "../lodash/_createFind.js", "../lodash/toFinite.js", "../lodash/toInteger.js", "../lodash/findIndex.js", "../lodash/find.js", "../lodash/forIn.js", "../lodash/mapValues.js", "../lodash/_baseExtremum.js", "../lodash/_baseGt.js", "../lodash/max.js", "../lodash/_baseLt.js", "../lodash/min.js", "../lodash/minBy.js", "../lodash/_basePickBy.js", "../lodash/_basePick.js", "../lodash/pick.js", "../lodash/_baseRange.js", "../lodash/_createRange.js", "../lodash/range.js", "../lodash/_baseSortBy.js", "../lodash/_compareAscending.js", "../lodash/_compareMultiple.js", "../lodash/_baseOrderBy.js", "../lodash/sortBy.js", "../lodash/uniqueId.js", "../lodash/_baseZipObject.js", "../lodash/zipObject.js", "../dagre/lib/lodash.js", "../dagre/lib/data/list.js", "../dagre/lib/greedy-fas.js", "../dagre/lib/acyclic.js", "../dagre/lib/util.js", "../dagre/lib/normalize.js", "../dagre/lib/rank/util.js", "../dagre/lib/rank/feasible-tree.js", "../dagre/lib/rank/network-simplex.js", "../dagre/lib/rank/index.js", "../dagre/lib/parent-dummy-chains.js", "../dagre/lib/nesting-graph.js", "../dagre/lib/add-border-segments.js", "../dagre/lib/coordinate-system.js", "../dagre/lib/order/init-order.js", "../dagre/lib/order/cross-count.js", "../dagre/lib/order/barycenter.js", "../dagre/lib/order/resolve-conflicts.js", "../dagre/lib/order/sort.js", "../dagre/lib/order/sort-subgraph.js", "../dagre/lib/order/build-layer-graph.js", "../dagre/lib/order/add-subgraph-constraints.js", "../dagre/lib/order/index.js", "../dagre/lib/position/bk.js", "../dagre/lib/position/index.js", "../dagre/lib/layout.js", "../dagre/lib/debug.js", "../dagre/lib/version.js", "../dagre/index.js", "../@antv/data-set/lib/transform/diagram/dagre.js", "../d3-collection/src/map.js", "../d3-collection/src/nest.js", "../d3-collection/src/set.js", "../d3-collection/src/keys.js", "../d3-collection/src/values.js", "../d3-collection/src/entries.js", "../d3-collection/src/index.js", "../d3-sankey/src/align.js", "../d3-sankey/src/constant.js", "../d3-sankey/src/sankey.js", "../d3-shape/node_modules/d3-path/src/path.js", "../d3-shape/node_modules/d3-path/src/index.js", "../d3-shape/src/constant.js", "../d3-shape/src/math.js", "../d3-shape/src/arc.js", "../d3-shape/src/curve/linear.js", "../d3-shape/src/point.js", "../d3-shape/src/line.js", "../d3-shape/src/area.js", "../d3-shape/src/descending.js", "../d3-shape/src/identity.js", "../d3-shape/src/pie.js", "../d3-shape/src/curve/radial.js", "../d3-shape/src/lineRadial.js", "../d3-shape/src/areaRadial.js", "../d3-shape/src/pointRadial.js", "../d3-shape/src/array.js", "../d3-shape/src/link/index.js", "../d3-shape/src/symbol/circle.js", "../d3-shape/src/symbol/cross.js", "../d3-shape/src/symbol/diamond.js", "../d3-shape/src/symbol/star.js", "../d3-shape/src/symbol/square.js", "../d3-shape/src/symbol/triangle.js", "../d3-shape/src/symbol/wye.js", "../d3-shape/src/symbol.js", "../d3-shape/src/noop.js", "../d3-shape/src/curve/basis.js", "../d3-shape/src/curve/basisClosed.js", "../d3-shape/src/curve/basisOpen.js", "../d3-shape/src/curve/bundle.js", "../d3-shape/src/curve/cardinal.js", "../d3-shape/src/curve/cardinalClosed.js", "../d3-shape/src/curve/cardinalOpen.js", "../d3-shape/src/curve/catmullRom.js", "../d3-shape/src/curve/catmullRomClosed.js", "../d3-shape/src/curve/catmullRomOpen.js", "../d3-shape/src/curve/linearClosed.js", "../d3-shape/src/curve/monotone.js", "../d3-shape/src/curve/natural.js", "../d3-shape/src/curve/step.js", "../d3-shape/src/offset/none.js", "../d3-shape/src/order/none.js", "../d3-shape/src/stack.js", "../d3-shape/src/offset/expand.js", "../d3-shape/src/offset/diverging.js", "../d3-shape/src/offset/silhouette.js", "../d3-shape/src/offset/wiggle.js", "../d3-shape/src/order/appearance.js", "../d3-shape/src/order/ascending.js", "../d3-shape/src/order/descending.js", "../d3-shape/src/order/insideOut.js", "../d3-shape/src/order/reverse.js", "../d3-shape/src/index.js", "../d3-sankey/src/sankeyLinkHorizontal.js", "../d3-sankey/src/index.js", "../@antv/data-set/lib/transform/diagram/sankey.js", "../d3-voronoi/src/constant.js", "../d3-voronoi/src/point.js", "../d3-voronoi/src/RedBlackTree.js", "../d3-voronoi/src/Edge.js", "../d3-voronoi/src/Cell.js", "../d3-voronoi/src/Circle.js", "../d3-voronoi/src/Beach.js", "../d3-voronoi/src/Diagram.js", "../d3-voronoi/src/voronoi.js", "../d3-voronoi/src/index.js", "../@antv/data-set/lib/transform/diagram/voronoi.js", "../@antv/data-set/lib/transform/hierarchy/cluster.js", "../@antv/hierarchy/lib/util.js", "../@antv/hierarchy/lib/layout/hierarchy.js", "../@antv/hierarchy/lib/layout/base.js", "../@antv/hierarchy/lib/layout/non-layered-tidy.js", "../@antv/hierarchy/lib/layout/separate-root.js", "../@antv/hierarchy/lib/layout/do-layout.js", "../@antv/hierarchy/lib/compact-box.js", "../@antv/hierarchy/lib/layout/dendrogram.js", "../@antv/hierarchy/lib/dendrogram.js", "../@antv/hierarchy/lib/layout/indented.js", "../@antv/hierarchy/lib/indented.js", "../@antv/hierarchy/lib/layout/mindmap.js", "../@antv/hierarchy/lib/mindmap.js", "../@antv/hierarchy/lib/index.js", "../@antv/data-set/lib/transform/hierarchy/compact-box.js", "../@antv/data-set/lib/transform/hierarchy/dendrogram.js", "../@antv/data-set/lib/transform/hierarchy/indented.js", "../@antv/data-set/lib/transform/hierarchy/pack.js", "../@antv/data-set/lib/transform/hierarchy/partition.js", "../@antv/data-set/lib/transform/hierarchy/tree.js", "../@antv/data-set/lib/transform/hierarchy/treemap.js", "../@antv/data-set/lib/util/tag-cloud.js", "../@antv/data-set/lib/transform/tag-cloud.js", "../@antv/data-set/lib/transform/waffle.js", "../@antv/data-set/lib/transform/kernel-smooth/density.js", "../@antv/data-set/lib/transform/kernel-smooth/regression.js", "../@antv/data-set/lib/index.js", "dep:@antv_data-set"],
  "sourcesContent": ["// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305\u2013363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360\u00B0) % 360\u00B0, except that we want\n// the distance between \u00B1180\u00B0 to be 360\u00B0.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n", "import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n", "import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0\u00B0, 0\u00B0], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n", "import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n", "import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n", "import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n", "export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n", "import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n", "export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n", "export default function(x) {\n  return x === null ? NaN : +x;\n}\n", "import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n", "import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n", "export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(x) {\n  return x;\n}\n", "export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n", "import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n", "import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n", "import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n", "import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n", "export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n", "import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n", "import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n", "export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n", "export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n", "export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n", "import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n", "export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n", "export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n", "import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n", "import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n", "export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n", "import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipPolygon from \"./polygon\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport function clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n", "import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n", "import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n", "import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n", "import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n", "import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n", "import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n", "export default function(x) {\n  return x;\n}\n", "import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n", "import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n", "import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n", "import clipBuffer from \"./buffer\";\nimport clipPolygon from \"./polygon\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius, delta) {\n  var cr = cos(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2A2F n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n", "import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport {clipExtent} from \"../clip/extent\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {degrees, radians, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n", "import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n", "import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n", "import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n", "import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960\u00D7500. The projection also works quite well at 960\u00D7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n", "import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n", "import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import {clipExtent} from \"../clip/extent\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n}\n", "import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "export {default as geoArea} from \"./src/area\";\nexport {default as geoBounds} from \"./src/bounds\";\nexport {default as geoCentroid} from \"./src/centroid\";\nexport {default as geoCircle} from \"./src/circle\";\nexport {default as geoClipExtent} from \"./src/clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(\u2026).\nexport {default as geoContains} from \"./src/contains\";\nexport {default as geoDistance} from \"./src/distance\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./src/graticule\";\nexport {default as geoInterpolate} from \"./src/interpolate\";\nexport {default as geoLength} from \"./src/length\";\nexport {default as geoPath} from \"./src/path/index\";\nexport {default as geoAlbers} from \"./src/projection/albers\";\nexport {default as geoAlbersUsa} from \"./src/projection/albersUsa\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./src/projection/azimuthalEqualArea\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./src/projection/azimuthalEquidistant\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./src/projection/conicConformal\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./src/projection/conicEqualArea\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./src/projection/conicEquidistant\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./src/projection/equirectangular\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./src/projection/gnomonic\";\nexport {default as geoIdentity} from \"./src/projection/identity\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./src/projection/index\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./src/projection/mercator\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./src/projection/orthographic\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./src/projection/stereographic\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./src/projection/transverseMercator\";\nexport {default as geoRotation} from \"./src/rotation\";\nexport {default as geoStream} from \"./src/stream\";\nexport {default as geoTransform} from \"./src/transform\";\n", "// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305\u2013363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import adder from \"./adder.js\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import adder from \"./adder.js\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360\u00B0) % 360\u00B0, except that we want\n// the distance between \u00B1180\u00B0 to be 360\u00B0.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n", "import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n", "import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0\u00B0, 0\u00B0], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n", "import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "import adder from \"./adder.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n", "import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2A2F n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n", "export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n", "import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n", "import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n", "import adder from \"./adder.js\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n", "import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n", "import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n", "import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n", "import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n", "export default function(x) {\n  return x;\n}\n", "import adder from \"../adder.js\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n", "import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import adder from \"../adder.js\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n", "import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n", "import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n", "import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n", "import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n", "import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n", "import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960\u00D7500. The projection also works quite well at 960\u00D7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n", "import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n", "import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n", "import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n", "import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "export {default as geoArea} from \"./area.js\";\nexport {default as geoBounds} from \"./bounds.js\";\nexport {default as geoCentroid} from \"./centroid.js\";\nexport {default as geoCircle} from \"./circle.js\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian.js\";\nexport {default as geoClipCircle} from \"./clip/circle.js\";\nexport {default as geoClipExtent} from \"./clip/extent.js\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(\u2026).\nexport {default as geoClipRectangle} from \"./clip/rectangle.js\";\nexport {default as geoContains} from \"./contains.js\";\nexport {default as geoDistance} from \"./distance.js\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule.js\";\nexport {default as geoInterpolate} from \"./interpolate.js\";\nexport {default as geoLength} from \"./length.js\";\nexport {default as geoPath} from \"./path/index.js\";\nexport {default as geoAlbers} from \"./projection/albers.js\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa.js\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea.js\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant.js\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal.js\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea.js\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant.js\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth.js\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular.js\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic.js\";\nexport {default as geoIdentity} from \"./projection/identity.js\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index.js\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator.js\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1.js\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic.js\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic.js\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator.js\";\nexport {default as geoRotation} from \"./rotation.js\";\nexport {default as geoStream} from \"./stream.js\";\nexport {default as geoTransform} from \"./transform.js\";\n", "export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n", "import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan} from \"./math\";\n\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50, delta;\n    if (!r) return [0, 0];\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = tan(z_2),\n          lnsecz_2 = log(1 / cosz_2);\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2));\n    } while (abs(delta) > epsilon && --i > 0);\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function(_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p\n      .scale(179.976)\n      .clipAngle(147);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, pi, sin, sinci, sqrt} from \"./math\";\n\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y), sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n}\n\n// Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\naitoffRaw.invert = function(x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x, y1 = y, i = 25;\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n  return [x1, y1];\n};\n\nexport default function() {\n  return projection(aitoffRaw)\n      .scale(152.63);\n}\n", "import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, atan2, cos, degrees, epsilon, radians, sin, tan} from \"./math\";\n\nexport function armadilloRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      k = (1 + sinPhi0 - cosPhi0) / 2;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        cosLambda = cos(lambda /= 2);\n    return [\n      (1 + cosPhi) * sin(lambda),\n      (sPhi0 * phi > -atan2(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + sin(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda = 0,\n        phi = 0,\n        i = 50;\n    do {\n      var cosLambda = cos(lambda),\n          sinLambda = sin(lambda),\n          cosPhi = cos(phi),\n          sinPhi = sin(phi),\n          A = 1 + cosPhi,\n          fx = A * sinLambda - x,\n          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,\n          dxdLambda = A * cosLambda / 2,\n          dxdPhi = -sinLambda * sinPhi,\n          dydLambda = sinPhi0 * A * sinLambda / 2,\n          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,\n          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,\n          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,\n          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;\n      lambda -= dLambda, phi -= dPhi;\n    } while ((abs(dLambda) > epsilon || abs(dPhi) > epsilon) && --i > 0);\n    return sPhi0 * phi > -atan2(cos(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var phi0 = 20 * radians,\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      m = projectionMutator(armadilloRaw),\n      p = m(phi0),\n      stream_ = p.stream;\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    tanPhi0 = tan((sPhi0 = (phi0 = _ * radians) >= 0 ? 1 : -1) * phi0);\n    return m(phi0);\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90) sphereStream.point(lambda, sPhi0 * 90);\n      while (sPhi0 * (lambda -= phi0) >= -180) { // TODO precision?\n        sphereStream.point(lambda, sPhi0 * -atan2(cos(lambda * radians / 2), tanPhi0) * degrees);\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .scale(218.695)\n      .center([0, 28.0974]);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan} from \"./math\";\n\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [\n    4 / 3 * x * (3 + x2 - 3 * y2),\n    4 / 3 * y * (3 + 3 * x2 - y2)\n  ];\n}\n\naugustRaw.invert = function(x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [\n    sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d),\n    sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)\n  ];\n};\n\nexport default function() {\n  return projection(augustRaw)\n      .scale(66.1603);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan} from \"./math\";\n\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\n\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi\n      ? [lambda, log(tan(quarterPi + phi / 2))]\n      : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function(x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi, i = 25, delta, y0;\n  do {\n    var cosPhi_2 = cos(phi / 2), tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function() {\n  return projection(bakerRaw)\n      .scale(112.314);\n}\n", "import {geoProjectionMutator as projectionMutator, geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {abs, acos, asin, atan, atan2, cos, degrees, halfPi, pi, radians, round, sin, sqrt, tan} from \"./math\";\n\nexport function berghausRaw(lobes) {\n  var k = 2 * pi / lobes;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi);\n    if (abs(lambda) > halfPi) { // back hemisphere\n      var theta = atan2(p[1], p[0]),\n          r = sqrt(p[0] * p[0] + p[1] * p[1]),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          alpha = atan2(sin(theta -= theta0), 2 - cos(theta)); // angle relative to lobe end\n      theta = theta0 + asin(pi / r * sin(alpha)) - alpha;\n      p[0] = r * cos(theta);\n      p[1] = r * sin(theta);\n    }\n    return p;\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y);\n    if (r > halfPi) {\n      var theta = atan2(y, x),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          s = theta > theta0 ? -1 : 1,\n          A = r * cos(theta0 - theta),\n          cotAlpha = 1 / tan(s * acos((A - pi) / sqrt(pi * (pi - 2 * A) + r * r)));\n      theta = theta0 + 2 * atan((cotAlpha + s * sqrt(cotAlpha * cotAlpha - 3)) / 3);\n      x = r * cos(theta), y = r * sin(theta);\n    }\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var lobes = 5,\n      m = projectionMutator(berghausRaw),\n      p = m(lobes),\n      projectionStream = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.lobes = function(_) {\n    return arguments.length ? m(lobes = +_) : lobes;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = projectionStream(stream),\n        sphereStream = (p.rotate([0, 0]), projectionStream(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var i = 0, delta = 360 / lobes, delta0 = 2 * pi / lobes, phi = 90 - 180 / lobes, phi0 = halfPi; i < lobes; ++i, phi -= delta, phi0 -= delta0) {\n        sphereStream.point(atan2(sr * cos(phi0), cr) * degrees, asin(sr * sin(phi0)) * degrees);\n        if (phi < -90) {\n          sphereStream.point(-90, -180 - phi - epsilon);\n          sphereStream.point(-90, -180 - phi + epsilon);\n        } else {\n          sphereStream.point(90, phi + epsilon);\n          sphereStream.point(90, phi - epsilon);\n        }\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .scale(87.8076)\n      .center([0, 17.1875])\n      .clipAngle(180 - 1e-3);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideBromleyTheta} from \"./mollweide\";\nimport {abs, cos, epsilon, pi, quarterPi, sin, sqrt2} from \"./math\";\n\nvar k = 2.00276,\n    w = 1.11072;\n\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function(x, y) {\n  var ky = k * y, theta = y < 0 ? -quarterPi : quarterPi, i = 25, delta, phi;\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function() {\n  return projection(boggsRaw)\n      .scale(160.857);\n}\n", "import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {degrees, radians} from \"./math\";\n\nexport default function(projectAt) {\n  var phi0 = 0,\n      m = projectionMutator(projectAt),\n      p = m(phi0);\n\n  p.parallel = function(_) {\n    return arguments.length ? m(phi0 = _ * radians) : phi0 * degrees;\n  };\n\n  return p;\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {cos} from \"./math\";\n\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function(x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function() {\n  return projection(sinusoidalRaw)\n      .scale(152.63);\n}\n", "import parallel1 from \"./parallel1\";\nimport {atan2, cos, sin, sqrt, tan} from \"./math\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\n\nexport function bonneRaw(phi0) {\n  if (!phi0) return sinusoidalRaw;\n  var cotPhi0 = 1 / tan(phi0);\n\n  function forward(lambda, phi) {\n    var rho = cotPhi0 + phi0 - phi,\n        e = rho ? lambda * cos(phi) / rho : rho;\n    return [rho * sin(e), cotPhi0 - rho * cos(e)];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + (y = cotPhi0 - y) * y),\n        phi = cotPhi0 + phi0 - rho;\n    return [rho / cos(phi) * atan2(x, y), phi];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(bonneRaw)\n      .scale(123.082)\n      .center([0, 26.1441])\n      .parallel(45);\n}\n", "import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {atan2, cos, halfPi, sin, sqrt} from \"./math\";\n\nexport function bottomleyRaw(sinPsi) {\n\n  function forward(lambda, phi) {\n    var rho = halfPi - phi,\n        eta = rho ? lambda * sinPsi * sin(rho) / rho : rho;\n    return [rho * sin(eta) / sinPsi, halfPi - rho * cos(eta)];\n  }\n\n  forward.invert = function(x, y) {\n    var x1 = x * sinPsi,\n        y1 = halfPi - y,\n        rho = sqrt(x1 * x1 + y1 * y1),\n        eta = atan2(x1, y1);\n    return [(rho ? rho / sin(rho) : 1) * eta / sinPsi, halfPi - rho];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var sinPsi = 0.5,\n      m = projectionMutator(bottomleyRaw),\n      p = m(sinPsi);\n\n  p.fraction = function(_) {\n    return arguments.length ? m(sinPsi = +_) : sinPsi;\n  };\n\n  return p\n      .scale(158.837);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {pi} from \"./math\";\nimport {mollweideBromleyRaw} from \"./mollweide\";\n\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\n\nexport default function() {\n  return projection(bromleyRaw)\n      .scale(152.63);\n}\n", "import {geoCentroid as centroid, geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon, floor, pi, radians, sin, sqrt} from \"./math\";\n\n// Azimuthal distance.\nfunction distance(dPhi, c1, s1, c2, s2, dLambda) {\n  var cosdLambda = cos(dLambda), r;\n  if (abs(dPhi) > 1 || abs(dLambda) > 1) {\n    r = acos(s1 * s2 + c1 * c2 * cosdLambda);\n  } else {\n    var sindPhi = sin(dPhi / 2), sindLambda = sin(dLambda / 2);\n    r = 2 * asin(sqrt(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));\n  }\n  return abs(r) > epsilon ? [r, atan2(c2 * sin(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];\n}\n\n// Angle opposite a, and contained between sides of lengths b and c.\nfunction angle(b, c, a) {\n  return acos((b * b + c * c - a * a) / (2 * b * c));\n}\n\n// Normalize longitude.\nfunction longitude(lambda) {\n  return lambda - 2 * pi * floor((lambda + pi) / (2 * pi));\n}\n\nexport function chamberlinRaw(p0, p1, p2) {\n  var points = [\n    [p0[0], p0[1], sin(p0[1]), cos(p0[1])],\n    [p1[0], p1[1], sin(p1[1]), cos(p1[1])],\n    [p2[0], p2[1], sin(p2[1]), cos(p2[1])]\n  ];\n\n  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\n    b = points[i];\n    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\n    a.point = [0, 0];\n  }\n\n  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),\n      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),\n      beta2 = pi - beta0;\n\n  points[2].point[1] = 0;\n  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);\n\n  var mean = [\n    points[2].point[0] = points[0].point[0] + points[2].v[0] * cos(beta0),\n    2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * sin(beta0))\n  ];\n\n  function forward(lambda, phi) {\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        v = new Array(3), i;\n\n    // Compute distance and azimuth from control points.\n    for (i = 0; i < 3; ++i) {\n      var p = points[i];\n      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);\n      if (!v[i][0]) return p.point;\n      v[i][1] = longitude(v[i][1] - p.v[1]);\n    }\n\n    // Arithmetic mean of interception points.\n    var point = mean.slice();\n    for (i = 0; i < 3; ++i) {\n      var j = i == 2 ? 0 : i + 1;\n      var a = angle(points[i].v[0], v[i][0], v[j][0]);\n      if (v[i][1] < 0) a = -a;\n\n      if (!i) {\n        point[0] += v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else if (i == 1) {\n        a = beta1 - a;\n        point[0] -= v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else {\n        a = beta2 - a;\n        point[0] += v[i][0] * cos(a);\n        point[1] += v[i][0] * sin(a);\n      }\n    }\n\n    point[0] /= 3, point[1] /= 3;\n    return point;\n  }\n\n  return forward;\n}\n\nfunction pointRadians(p) {\n  return p[0] *= radians, p[1] *= radians, p;\n}\n\nexport function chamberlinAfrica() {\n  return chamberlin([0, 22], [45, 22], [22.5, -22])\n      .scale(380)\n      .center([22.5, 2]);\n}\n\nexport default function chamberlin(p0, p1, p2) { // TODO order matters!\n  var c = centroid({type: \"MultiPoint\", coordinates: [p0, p1, p2]}),\n      R = [-c[0], -c[1]],\n      r = rotation(R),\n      p = projection(chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)))).rotate(R),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p\n      .clipAngle(90);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {asin, pi, sin, sqrt, sqrtPi} from \"./math\";\n\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [(2 / sqrtPi) * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function(x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function() {\n  return projection(collignonRaw)\n      .scale(95.6464)\n      .center([0, 30]);\n}\n", "import {asin, atan2, cos, sin, sqrt, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function(x, y) {\n    if (x) y *= sin(x) / x;\n    var cosLambda = cos(x);\n    return [x, 2 * atan2(sqrt(cosLambda * cosLambda + tanPhi0 * tanPhi0 - y * y) - cosLambda, tanPhi0 - y)];\n  } : function(x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(craigRaw)\n      .scale(249.828)\n      .clipAngle(90);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt, sqrtPi} from \"./math\";\n\nvar sqrt3 = sqrt(3);\n\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function(x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function() {\n  return projection(crasterRaw)\n      .scale(156.19);\n}\n", "import {asin, cos, sin} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalEqualAreaRaw)\n      .parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n      .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}\n", "import {atan, cos, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalStereographicRaw)\n      .scale(124.75);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, pi, sqrt} from \"./math\";\n\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [\n    alpha * lambda * (1 - abs(phi) / pi),\n    alpha * phi\n  ];\n}\n\neckert1Raw.invert = function(x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [\n    x / (alpha * (1 - abs(phi) / pi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert1Raw)\n      .scale(165.664);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, pi, sign, sin, sqrt} from \"./math\";\n\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [\n    2 / sqrt(6 * pi) * lambda * alpha,\n    sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)\n  ];\n}\n\neckert2Raw.invert = function(x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [\n    x * sqrt(6 * pi) / (2 * alpha),\n    sign(y) * asin((4 - alpha * alpha) / 3)\n  ];\n};\n\nexport default function() {\n  return projection(eckert2Raw)\n      .scale(165.664);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math\";\n\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [\n    2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))),\n    4 / k * phi\n  ];\n}\n\neckert3Raw.invert = function(x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [\n    x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))),\n    y * k / 2\n  ];\n};\n\nexport default function() {\n  return projection(eckert3Raw)\n      .scale(180.739);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n  return [\n    2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)),\n    2 * sqrt(pi / (4 + pi)) * sin(phi)\n  ];\n}\n\neckert4Raw.invert = function(x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [\n    x / (2 / sqrt(pi * (4 + pi)) * (1 + c)),\n    asin((k + A * (c + 2)) / (2 + halfPi))\n  ];\n};\n\nexport default function() {\n  return projection(eckert4Raw)\n      .scale(180.739);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {cos, pi, sqrt} from \"./math\";\n\nexport function eckert5Raw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / sqrt(2 + pi),\n    2 * phi / sqrt(2 + pi)\n  ];\n}\n\neckert5Raw.invert = function(x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [\n    k * x / (1 + cos(phi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert5Raw)\n      .scale(173.044);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n  k = sqrt(2 + pi);\n  return [\n    lambda * (1 + cos(phi)) / k,\n    2 * phi / k\n  ];\n}\n\neckert6Raw.invert = function(x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [\n    x * 2 * k / (1 + cos(y *= k)),\n    asin((y + sin(y)) / j)\n  ];\n};\n\nexport default function() {\n  return projection(eckert6Raw)\n      .scale(173.044);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {augustRaw} from \"./august\";\nimport {abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2} from \"./math\";\n\nvar eisenlohrK = 3 + 2 * sqrt2;\n\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [\n    eisenlohrK * (c * (v - 1 / v) - 2 * log(v)),\n    eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))\n  ];\n}\n\neisenlohrRaw.invert = function(x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0], phi = p[1], i = 20, p;\n  x /= eisenlohrK, y /= eisenlohrK;\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = (sqrt2 * c1 + (c0 + s0) * k),\n        v1 = (sqrt2 * c1 + (c0 - s0) * k),\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(eisenlohrRaw)\n      .scale(62.5271);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, radians, sqrt, tan} from \"./math\";\n\nvar faheyK = cos(35 * radians);\n\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function(x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function() {\n  return projection(faheyRaw)\n      .scale(137.152);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, sqrtPi, tan} from \"./math\";\n\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2, cosk = cos(k);\n  return [ 2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function(x, y) {\n  var k = atan(y / sqrtPi), cosk = cos(k), phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function() {\n  return projection(foucautRaw)\n      .scale(135.264);\n}\n", "import {geoEquirectangular, geoOrthographic} from \"d3-geo\";\nimport {asin, atan, degrees, radians, sin, tan} from \"./math\";\n\nfunction gilbertForward(point) {\n  return [point[0] / 2, asin(tan(point[1] / 2 * radians)) * degrees];\n}\n\nfunction gilbertInvert(point) {\n  return [point[0] * 2, 2 * atan(sin(point[1] * radians)) * degrees];\n}\n\nexport default function(projectionType) {\n  if (projectionType == null) projectionType = geoOrthographic;\n  var projection = projectionType(),\n      equirectangular = geoEquirectangular().scale(degrees).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting\n\n  function gilbert(point) {\n    return projection(gilbertForward(point));\n  }\n\n  if (projection.invert) gilbert.invert = function(point) {\n    return gilbertInvert(projection.invert(point));\n  };\n\n  gilbert.stream = function(stream) {\n    var s1 = projection.stream(stream), s0 = equirectangular.stream({\n      point: function(lambda, phi) { s1.point(lambda / 2, asin(tan(-phi / 2 * radians)) * degrees); },\n      lineStart: function() { s1.lineStart(); },\n      lineEnd: function() { s1.lineEnd(); },\n      polygonStart: function() { s1.polygonStart(); },\n      polygonEnd: function() { s1.polygonEnd(); }\n    });\n    s0.sphere = s1.sphere;\n    return s0;\n  };\n\n  function property(name) {\n    gilbert[name] = function(_) {\n      return arguments.length ? (projection[name](_), gilbert) : projection[name]();\n    };\n  }\n\n  gilbert.rotate = function(_) {\n    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();\n  };\n\n  gilbert.center = function(_) {\n    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());\n  };\n\n  property(\"clipAngle\");\n  property(\"clipExtent\");\n  property(\"scale\");\n  property(\"translate\");\n  property(\"precision\");\n\n  return gilbert\n      .scale(249.5);\n}\n", "import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt} from \"./math\";\n\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n\n      x = r;\n      var i = 50, delta;\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n    return p;\n  }\n\n  forward.invert = function(x, y) {\n    var r2 = x * x + y * y;\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n\n        if (abs(delta) < epsilon2 || !--i) break;\n\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (\n          sinx - x_halfPi * 2 * (\n            halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) -\n            rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)\n          ) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function(x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n}\n\n// Numerical integration: trapezoidal rule.\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n  for (var i = 1, x = a; i < n; ++i) s += 2 * f(x += h);\n  return s * 0.5 * h;\n}\n\nexport default function() {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function(_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function(_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .rotate([90, -40])\n      .scale(91.7095)\n      .clipAngle(180 - 1e-3);\n}\n", "import {abs, asin, cos, epsilon, pi, sin, sqrt} from \"./math\";\n\nexport default function(a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda, deltaPhi, i = 50;\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = ((lambda / pi) * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi)) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n    return [lambda, phi];\n  };\n\n  return forward;\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\n\nexport default function() {\n  return projection(ginzburg4Raw)\n      .scale(149.995);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435,0.082742);\n\nexport default function() {\n  return projection(ginzburg5Raw)\n      .scale(153.93);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nimport {pi} from \"./math\";\n\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\n\nexport default function() {\n  return projection(ginzburg6Raw)\n      .scale(130.945);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [\n    lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2),\n    phi * (1 + phi2 / 12)\n  ];\n}\n\nginzburg8Raw.invert = function(x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50, delta;\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n  i = 50;\n  x /= 1 -0.162388 * phi2;\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(ginzburg8Raw)\n      .scale(131.747);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965,0.031762);\n\nexport default function() {\n  return projection(ginzburg9Raw)\n      .scale(131.087);\n}\n", "import {halfPi, pi} from \"./math\";\n\nexport default function(project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectSquare(lambda, phi) {\n    var s = lambda > 0 ? -0.5 : 0.5,\n        point = project(lambda + s * pi, phi);\n    point[0] -= s * dx;\n    return point;\n  }\n\n  if (project.invert) projectSquare.invert = function(x, y) {\n    var s = x > 0 ? -0.5 : 0.5,\n        location = project.invert(x + s * dx, y),\n        lambda = location[0] - s * pi;\n    if (lambda < -pi) lambda += 2 * pi;\n    else if (lambda > pi) lambda -= 2 * pi;\n    location[0] = lambda;\n    return location;\n  };\n\n  return projectSquare;\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt} from \"./math\";\nimport squareRaw from \"./square\";\n\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return (point[0] *= sLambda, point[1] *= -sPhi, point);\n}\n\ngringortenRaw.invert = function(x, y) {\n  if (abs(x) > 1) x = sign(x) * 2 - x;\n  if (abs(y) > 1) y = sign(y) * 2 - y;\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n\n  if (lambda === 0) return [0, -(h + r * a)];\n\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = (0.5 * dp2dPhi) / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta;\n\n  // Slower but accurate bisection method.\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x, x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n    do {\n      var g = sqrt(a2 - x * x),\n          f = (x * (zeta + mu * g) + nu * asin(x / a)) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;\n      else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  }\n\n  // Newton-Raphson.\n  else {\n    x = epsilon, i = 25;\n    do {\n      var x2 = x * x,\n          g2 = sqrt(a2 - x2),\n          zetaMug = zeta + mu * g2,\n          f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n          df = zetaMug + (nu - mu * x2) / g2;\n      x -= delta = g2 ? f2 / df : 0;\n    } while (abs(delta) > epsilon && --i > 0);\n  }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = (1 - r2) + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;\n    else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function() {\n  return projection(squareRaw(gringortenRaw))\n      .scale(239.75);\n}\n", "import {abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh} from \"./math\";\n\n// Returns [sn, cn, dn](u + iv|m).\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [\n      [0, b[0] / b[1]],\n      [1 / b[1], 0],\n      [b[2] / b[1], 0]\n    ];\n  }\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [\n    [a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c],\n    [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c],\n    [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]\n  ];\n}\n\n// Returns [sn, cn, dn, ph](u|m).\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [\n      t - ai * b,\n      b + ai * t,\n      1 - m * t * t / 2,\n      u - ai\n    ];\n  }\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [\n      t + ai * (twon - u) / (b * b),\n      phi - ai * t * phi * (twon - u),\n      phi + ai * t * phi * (twon + u),\n      2 * atan(exp(u)) - halfPi + ai * (twon - u) / b\n    ];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n}\n\n// Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [\n      ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi),\n      ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)\n    ];\n  }\n  return [\n    0,\n    ellipticF(atan(sinhPsi), 1 - m) * sign(psi)\n  ];\n}\n\n// Calculate F(phi|m) where m = k\u00B2 = sin\u00B2\u03B1.\n// See Abramowitz and Stegun, 17.6.7.\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n  return phi / (pow(2, i) * a);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {ellipticF, ellipticFi, ellipticJi} from \"./elliptic\";\nimport {abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan} from \"./math\";\nimport squareRaw from \"./square\";\n\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [\n   0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)),\n    -0.25 * log(t * t + 4 * x2) +0.5 * log(y_1 * y_1 + x2)\n  ];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [\n    (a[0] * b[0] + a[1] * b[1]) / denominator,\n    (a[1] * b[0] - a[0] * b[1]) / denominator\n  ];\n}\n\nguyouRaw.invert = function(x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [\n    lambda,\n    2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi\n  ];\n};\n\nexport default function() {\n  return projection(squareRaw(guyouRaw))\n      .scale(151.496);\n}\n", "import {geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {asin, cos, sin} from \"./math\";\n\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [\n    lambda * cos(phi) / cos(phi /= 2),\n    2 * sin(phi)\n  ];\n}\n\nhammerQuarticAuthalicRaw.invert = function(x, y) {\n  var phi = 2 * asin(y / 2);\n  return [\n    x * cos(phi / 2) / cos(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function(_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p\n    .scale(169.529);\n}\n", "import {geoProjectionMutator as projectionMutator, geoCircle} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin} from \"./math\";\n\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [\n      K * cosPhi0 * sin(lambda),\n      (abs(lambda) > halfPi ? K : -K) // rotate for back hemisphere\n        * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n}\n\n// Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n\n  return function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [\n      atan2(y, x * cosPhi0 - z * sinPhi0),\n      asin(z * cosPhi0 + x * sinPhi0)\n    ];\n  };\n}\n\nexport default function() {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  };\n\n  // Temporary hack; see hammerRetroazimuthalRotation.\n  p.rotate = function(_) {\n    if (!arguments.length) return (_ = rotate_.call(p), _[1] += phi0 * degrees, _);\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function(stream) {\n    stream = stream_(stream);\n    stream.sphere = function() {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n      while (++i < n) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n      while (--i >= 0) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n    return stream;\n  };\n\n  return p\n      .scale(79.4187)\n      .parallel(45)\n      .clipAngle(180 - 1e-3);\n}\n", "import {range} from \"d3-array\";\nimport {geoStream, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {collignonRaw} from \"./collignon\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\nimport {abs, floor, max, min, pi, radians, sqrtPi, tau} from \"./math\";\n\nvar healpixParallel = 41 + 48 / 36 + 37 / 3600, // for K=3; TODO automate\n    healpixLambert = cylindricalEqualAreaRaw(0);\n\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + (dy1 * dy1 * 4) / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function(x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphere(step) {\n  return {\n    type: \"Polygon\",\n    coordinates: [\n      range(-180, 180 + step / 2, step).map(function(x, i) { return [x, i & 1 ? 90 - 1e-6 : healpixParallel]; })\n      .concat(range(180, -180 - step / 2, -step).map(function(x, i) { return [x, i & 1 ? -90 + 1e-6 : -healpixParallel]; }))\n    ]\n  };\n}\n\nexport default function() {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function(_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere(180 / H), sphereStream); };\n    return rotateStream;\n  };\n\n  return p\n      .scale(239.75);\n}\n", "import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n    if (t && t < 2) {\n      var theta = halfPi - phi, i = 25, delta;\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 -0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n    return [\n      rho * sin(omega),\n      rho0 - rho * cos(omega)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [\n      asin(x / sqrt(rho2)) * pi / Bt_Bt1,\n      asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function(_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p\n      .scale(167.774)\n      .center([0, 18.67]);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideRaw} from \"./mollweide\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\n\nexport var sinuMollweidePhi = 0.7109889596207567;\n\nexport var sinuMollweideY = 0.0528035274542;\n\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function(x, y) {\n  return y > -sinuMollweidePhi\n      ? mollweideRaw.invert(x, y - sinuMollweideY)\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(sinuMollweideRaw)\n      .rotate([-20, -55])\n      .scale(164.263)\n      .center([0, -5.4036]);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs} from \"./math\";\nimport {mollweideRaw} from \"./mollweide\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\nimport {sinuMollweidePhi, sinuMollweideY} from \"./sinuMollweide\";\n\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function(x, y) {\n  return abs(y) > sinuMollweidePhi\n      ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY))\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(homolosineRaw)\n      .scale(152.63);\n}\n", "import {merge} from \"d3-array\";\nimport {geoStream, geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, radians} from \"../math\";\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction interpolateLine(coordinates, m) {\n  var i = -1,\n      n = coordinates.length,\n      p0 = coordinates[0],\n      p1,\n      dx,\n      dy,\n      resampled = [];\n  while (++i < n) {\n    p1 = coordinates[i];\n    dx = (p1[0] - p0[0]) / m;\n    dy = (p1[1] - p0[1]) / m;\n    for (var j = 0; j < m; ++j) resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n    p0 = p1;\n  }\n  resampled.push(p1);\n  return resampled;\n}\n\nfunction interpolateSphere(lobes) {\n  var coordinates = [],\n      lobe,\n      lambda0, phi0, phi1,\n      lambda2, phi2,\n      i, n = lobes[0].length;\n\n  // Northern Hemisphere\n  for (i = 0; i < n; ++i) {\n    lobe = lobes[0][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([\n      [lambda0 + epsilon, phi0 + epsilon],\n      [lambda0 + epsilon, phi1 - epsilon],\n      [lambda2 - epsilon, phi1 - epsilon],\n      [lambda2 - epsilon, phi2 + epsilon]\n    ], 30));\n  }\n\n  // Southern Hemisphere\n  for (i = lobes[1].length - 1; i >= 0; --i) {\n    lobe = lobes[1][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([\n      [lambda2 - epsilon, phi2 - epsilon],\n      [lambda2 - epsilon, phi1 + epsilon],\n      [lambda0 + epsilon, phi1 + epsilon],\n      [lambda0 + epsilon, phi0 - epsilon]\n    ], 30));\n  }\n\n  return {\n    type: \"Polygon\",\n    coordinates: [merge(coordinates)]\n  };\n}\n\nexport default function(project, lobes) {\n  var sphere = interpolateSphere(lobes);\n\n  lobes = lobes.map(function(lobe) {\n    return lobe.map(function(l) {\n      return [\n        [l[0][0] * radians, l[0][1] * radians],\n        [l[1][0] * radians, l[1][1] * radians],\n        [l[2][0] * radians, l[2][1] * radians]\n      ];\n    });\n  });\n\n  var bounds = lobes.map(function(lobe) {\n    return lobe.map(function(l) {\n      var x0 = project(l[0][0], l[0][1])[0],\n          x1 = project(l[2][0], l[2][1])[0],\n          y0 = project(l[1][0], l[0][1])[1],\n          y1 = project(l[1][0], l[1][1])[1],\n          t;\n      if (y0 > y1) t = y0, y0 = y1, y1 = t;\n      return [[x0, y0], [x1, y1]];\n    });\n  });\n\n  function forward(lambda, phi) {\n    var sign = phi < 0 ? -1 : +1, lobe = lobes[+(phi < 0)];\n    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i);\n    var p = project(lambda - lobe[i][1][0], phi);\n    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];\n    return p;\n  }\n\n  // Assumes mutually exclusive bounding boxes for lobes.\n  if (project.invert) forward.invert = function(x, y) {\n    var bound = bounds[+(y < 0)], lobe = lobes[+(y < 0)];\n    for (var i = 0, n = bound.length; i < n; ++i) {\n      var b = bound[i];\n      if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n        var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);\n        p[0] += lobe[i][1][0];\n        return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;\n      }\n    }\n  };\n\n  var p = projection(forward),\n      stream_ = p.stream;\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere, sphereStream); };\n    return rotateStream;\n  };\n\n  return p;\n}\n", "import {boggsRaw} from \"../boggs\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(boggsRaw, lobes)\n      .scale(160.857);\n}\n", "import {homolosineRaw} from \"../homolosine\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(homolosineRaw, lobes)\n      .scale(152.63);\n}\n", "import {mollweideRaw} from \"../mollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(mollweideRaw, lobes)\n      .scale(169.529);\n}\n", "import {mollweideRaw} from \"../mollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [ -90,  90], [   0,   0]],\n  [[   0,   0], [  90,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [ -90, -90], [   0,   0]],\n  [[   0,   0], [  90, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(mollweideRaw, lobes)\n      .scale(169.529)\n      .rotate([20, 0]);\n}\n", "import {sinuMollweideRaw} from \"../sinuMollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,  35], [ -30,  90], [   0,  35]],\n  [[   0,  35], [  30,  90], [ 180,  35]]\n], [ // southern hemisphere\n  [[-180, -10], [-102, -90], [ -65, -10]],\n  [[ -65, -10], [   5, -90], [  77, -10]],\n  [[  77, -10], [ 103, -90], [ 180, -10]]\n]];\n\nexport default function() {\n  return interrupt(sinuMollweideRaw, lobes)\n      .rotate([-20, -55])\n      .scale(164.263)\n      .center([0, -5.4036]);\n}\n", "import {sinusoidalRaw} from \"../sinusoidal\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-110,  90], [ -40,   0]],\n  [[ -40,   0], [   0,  90], [  40,   0]],\n  [[  40,   0], [ 110,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-110, -90], [ -40,   0]],\n  [[ -40,   0], [   0, -90], [  40,   0]],\n  [[  40,   0], [ 110, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(sinusoidalRaw, lobes)\n      .scale(152.63)\n      .rotate([-20, 0]);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt, tau} from \"./math\";\n\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function(x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function() {\n  return projection(kavrayskiy7Raw)\n      .scale(158.837);\n}\n", "import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin} from \"./math\";\n\nexport function lagrangeRaw(n) {\n\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [\n      2 * sin(lambda) / c,\n      (v - 1 / v) / c\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [\n      atan2(2 * x, 1 - x2 - y2) / n,\n      asin((t - 1) / (t + 1))\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function(_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p\n      .scale(124.75);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2} from \"./math\";\n\nvar pi_sqrt2 = pi / sqrt2;\n\nexport function larriveeRaw(lambda, phi) {\n  return [\n    lambda * (1 + sqrt(cos(phi))) / 2,\n    phi / (cos(phi / 2) * cos(lambda / 6))\n  ];\n}\n\nlarriveeRaw.invert = function(x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;\n  else lambda += 6 * acos(pi_sqrt2 / y0);\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 +0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function() {\n  return projection(larriveeRaw)\n      .scale(97.2672);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, pi, sign} from \"./math\";\n\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda, phi2 = phi * phi;\n  return [\n    lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)),\n    phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))\n  ];\n}\n\nlaskowskiRaw.invert = function(x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(laskowskiRaw)\n      .scale(139.98);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2} from \"./math\";\n\nexport function littrowRaw(lambda, phi) {\n  return [\n    sin(lambda) / cos(phi),\n    tan(phi) * cos(lambda)\n  ];\n}\n\nlittrowRaw.invert = function(x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      cosPhi = x\n          ? sqrt1_2 * sqrt((y2_1 - sqrt(x2 * x2 + 2 * x2 * (y2 - 1) + y2_1 * y2_1)) / x2 + 1)\n          : 1 / sqrt(y2_1);\n  return [\n    asin(x * cosPhi),\n    sign(y) * acos(cosPhi)\n  ];\n};\n\nexport default function() {\n  return projection(littrowRaw)\n      .scale(144.049)\n      .clipAngle(90 - 1e-3);\n}\n", "import parallel1 from \"./parallel1\";\nimport {abs, cos, epsilon, halfPi, log, quarterPi, tan} from \"./math\";\n\nexport function loximuthalRaw(phi0) {\n  var cosPhi0 = cos(phi0),\n      tanPhi0 = tan(quarterPi + phi0 / 2);\n\n  function forward(lambda, phi) {\n    var y = phi - phi0,\n        x = abs(y) < epsilon ? lambda * cosPhi0\n            : abs(x = quarterPi + phi / 2) < epsilon || abs(abs(x) - halfPi) < epsilon\n            ? 0 : lambda * y / log(tan(x) / tanPhi0);\n    return [x, y];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda,\n        phi = y + phi0;\n    return [\n      abs(y) < epsilon ? x / cosPhi0\n          : (abs(lambda = quarterPi + phi / 2) < epsilon || abs(abs(lambda) - halfPi) < epsilon) ? 0\n          : x * log(tan(lambda) / tanPhi0) / y,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(loximuthalRaw)\n      .parallel(40)\n      .scale(158.837);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n", "import {geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {abs, asin, atan, atan2, cos, epsilon, sin, sqrt} from \"./math\";\n\nexport function modifiedStereographicRaw(C) {\n  var m = C.length - 1;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = 2 / (1 + cosPhi * cos(lambda)),\n        zr = k * cosPhi * sin(lambda),\n        zi = k * sin(phi),\n        i = m,\n        w = C[i],\n        ar = w[0],\n        ai = w[1],\n        t;\n    while (--i >= 0) {\n      w = C[i];\n      ar = w[0] + zr * (t = ar) - zi * ai;\n      ai = w[1] + zr * ai + zi * t;\n    }\n    ar = zr * (t = ar) - zi * ai;\n    ai = zr * ai + zi * t;\n    return [ar, ai];\n  }\n\n  forward.invert = function(x, y) {\n    var i = 20,\n        zr = x,\n        zi = y;\n    do {\n      var j = m,\n          w = C[j],\n          ar = w[0],\n          ai = w[1],\n          br = 0,\n          bi = 0,\n          t;\n\n      while (--j >= 0) {\n        w = C[j];\n        br = ar + zr * (t = br) - zi * bi;\n        bi = ai + zr * bi + zi * t;\n        ar = w[0] + zr * (t = ar) - zi * ai;\n        ai = w[1] + zr * ai + zi * t;\n      }\n      br = ar + zr * (t = br) - zi * bi;\n      bi = ai + zr * bi + zi * t;\n      ar = zr * (t = ar) - zi * ai - x;\n      ai = zr * ai + zi * t - y;\n\n      var denominator = br * br + bi * bi, deltar, deltai;\n      zr -= deltar = (ar * br + ai * bi) / denominator;\n      zi -= deltai = (ai * br - ar * bi) / denominator;\n    } while (abs(deltar) + abs(deltai) > epsilon * epsilon && --i > 0);\n\n    if (i) {\n      var rho = sqrt(zr * zr + zi * zi),\n          c = 2 * atan(rho * 0.5),\n          sinc = sin(c);\n      return [atan2(zr * sinc, rho * cos(c)), rho ? asin(zi * sinc / rho) : 0];\n    }\n  };\n\n  return forward;\n}\n\nvar alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],\n    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],\n    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],\n    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],\n    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];\n\nexport function modifiedStereographicAlaska() {\n  return modifiedStereographic(alaska, [152, -64])\n      .scale(1500)\n      .center([-160.908, 62.4864])\n      .clipAngle(25);\n}\n\nexport function modifiedStereographicGs48() {\n  return modifiedStereographic(gs48, [95, -38])\n      .scale(1000)\n      .clipAngle(55)\n      .center([-96.5563, 38.8675]);\n}\n\nexport function modifiedStereographicGs50() {\n  return modifiedStereographic(gs50, [120, -45])\n      .scale(359.513)\n      .clipAngle(55)\n      .center([-117.474, 53.0628]);\n}\n\nexport function modifiedStereographicMiller() {\n  return modifiedStereographic(miller, [-20, -18])\n      .scale(209.091)\n      .center([20, 16.7214])\n      .clipAngle(82);\n}\n\nexport function modifiedStereographicLee() {\n  return modifiedStereographic(lee, [165, 10])\n      .scale(250)\n      .clipAngle(130)\n      .center([-165, -10]);\n}\n\nexport default function modifiedStereographic(coefficients, rotate) {\n  var p = projection(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),\n      r = rotation(rotate),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p;\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt} from \"./math\";\n\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\n\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [\n    sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7,\n    9 * sin(theta / 3) / sqrt7\n  ];\n}\n\nmtFlatPolarParabolicRaw.invert = function(x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [\n    x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)),\n    asin(sin(theta) * 3 * sqrt6 / 7)\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarParabolicRaw)\n      .scale(164.859);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2} from \"./math\";\n\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2),\n    2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)\n  ];\n}\n\nmtFlatPolarQuarticRaw.invert = function(x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [\n    3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)),\n    asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarQuarticRaw)\n      .scale(188.209);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    A * (0.5 + cos(theta)) * lambda / 1.5,\n    A * theta\n  ];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function(x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [\n    1.5 * x / (A * (0.5 + cos(theta))),\n    asin((theta / 2 + sin(theta)) / (1 + pi / 4))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarSinusoidalRaw)\n      .scale(166.518);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\nexport function naturalEarthRaw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarthRaw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarthRaw)\n      .scale(175.295);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon2} from \"./math\";\n\nexport function naturalEarth2Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2, phi6 = phi2 * phi4;\n  return [\n    lambda * (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))\n  ];\n}\n\nnaturalEarth2Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta, phi2, phi4, phi6;\n  do {\n    phi2 = phi * phi; phi4 = phi2 * phi2;\n    phi -= delta = ((phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))) - y) /\n      (1.01183 + phi4 * phi4 * ((9 * -0.02625) + (11 * 0.01926) * phi2 + (13 * -0.00396) * phi4));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  phi2 = phi * phi; phi4 = phi2 * phi2; phi6 = phi2 * phi4;\n  return [\n    x / (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth2Raw)\n      .scale(175.295);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, epsilon, tan} from \"./math\";\n\nexport function nellHammerRaw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / 2,\n    2 * (phi - tan(phi / 2))\n  ];\n}\n\nnellHammerRaw.invert = function(x, y) {\n  var p = y / 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n  return [\n    2 * x / (1 + cos(y)),\n    y\n  ];\n};\n\nexport default function() {\n  return projection(nellHammerRaw)\n      .scale(152.63);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\n// Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\n\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [\n    lambda,\n    phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))\n  ];\n}\n\npattersonRaw.invert = function(x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;\n  else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y, delta;\n\n  do { // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = ((yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2)))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function() {\n  return projection(pattersonRaw)\n      .scale(139.319);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan} from \"./math\";\n\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [\n    sin(k) / tanPhi,\n    phi + (1 - cos(k)) / tanPhi\n  ];\n}\n\npolyconicRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10, delta;\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n  tanPhi = tan(phi);\n  return [\n    (abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(polyconicRaw)\n      .scale(103.74);\n}\n", "import {atan2, cos, sin, sqrt} from \"../math\";\n\n// Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n\n// Transform matrix for [a0, a1] -> [b0, b1].\nexport default function(a, b) {\n  var u = subtract(a[1], a[0]),\n      v = subtract(b[1], b[0]),\n      phi = angle(u, v),\n      s = length(u) / length(v);\n\n  return multiply([\n    1, 0, a[0][0],\n    0, 1, a[0][1]\n  ], multiply([\n    s, 0, 0,\n    0, s, 0\n  ], multiply([\n    cos(phi), sin(phi), 0,\n    -sin(phi), cos(phi), 0\n  ], [\n    1, 0, -b[0][0],\n    0, 1, -b[0][1]\n  ])));\n}\n\n// Inverts a transform matrix.\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [\n    k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]),\n    -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])\n  ];\n}\n\n// Multiplies two 3x2 matrices.\nexport function multiply(a, b) {\n  return [\n    a[0] * b[0] + a[1] * b[3],\n    a[0] * b[1] + a[1] * b[4],\n    a[0] * b[2] + a[1] * b[5] + a[2],\n    a[3] * b[0] + a[4] * b[3],\n    a[3] * b[1] + a[4] * b[4],\n    a[3] * b[2] + a[4] * b[5] + a[5]\n  ];\n}\n\n// Subtracts 2D vectors.\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n}\n\n// Magnitude of a 2D vector.\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n\n// Angle between two 2D vectors.\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}\n", "import {geoBounds as bounds, geoCentroid as centroid, geoInterpolate as interpolate, geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, degrees, epsilon, pi, radians, sin} from \"../math\";\nimport {default as matrix, multiply, inverse} from \"./matrix\";\n\n// Creates a polyhedral projection.\n//  * root: a spanning tree of polygon faces.  Nodes are automatically\n//    augmented with a transform matrix.\n//  * face: a function that returns the appropriate node for a given {lambda, phi}\n//    point (radians).\n//  * r: rotation angle for final polyhedral net.  Defaults to -pi / 6 (for\n//    butterflies).\nexport default function(root, face, r) {\n\n  r = r == null ? -pi / 6 : r; // TODO automate\n\n  recurse(root, {transform: [\n    cos(r), sin(r), 0,\n    -sin(r), cos(r), 0\n  ]});\n\n  function recurse(node, parent) {\n    node.edges = faceEdges(node.face);\n    // Find shared edge.\n    if (parent.face) {\n      var shared = node.shared = sharedEdge(node.face, parent.face),\n          m = matrix(shared.map(parent.project), shared.map(node.project));\n      node.transform = parent.transform ? multiply(parent.transform, m) : m;\n      // Replace shared edge in parent edges array.\n      var edges = parent.edges;\n      for (var i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;\n      }\n      edges = node.edges;\n      for (i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;\n      }\n    } else {\n      node.transform = parent.transform;\n    }\n    if (node.children) {\n      node.children.forEach(function(child) {\n        recurse(child, node);\n      });\n    }\n    return node;\n  }\n\n  function forward(lambda, phi) {\n    var node = face(lambda, phi),\n        point = node.project([lambda * degrees, phi * degrees]),\n        t;\n    if (t = node.transform) {\n      return [\n        t[0] * point[0] + t[1] * point[1] + t[2],\n        -(t[3] * point[0] + t[4] * point[1] + t[5])\n      ];\n    }\n    point[1] = -point[1];\n    return point;\n  }\n\n  // Naive inverse!  A faster solution would use bounding boxes, or even a\n  // polygonal quadtree.\n  if (hasInverse(root)) forward.invert = function(x, y) {\n    var coordinates = faceInvert(root, [x, -y]);\n    return coordinates && (coordinates[0] *= radians, coordinates[1] *= radians, coordinates);\n  };\n\n  function faceInvert(node, coordinates) {\n    var invert = node.project.invert,\n        t = node.transform,\n        point = coordinates;\n    if (t) {\n      t = inverse(t);\n      point = [\n        t[0] * point[0] + t[1] * point[1] + t[2],\n        (t[3] * point[0] + t[4] * point[1] + t[5])\n      ];\n    }\n    if (invert && node === faceDegrees(p = invert(point))) return p;\n    var p,\n        children = node.children;\n    for (var i = 0, n = children && children.length; i < n; ++i) {\n      if (p = faceInvert(children[i], coordinates)) return p;\n    }\n  }\n\n  function faceDegrees(coordinates) {\n    return face(coordinates[0] * radians, coordinates[1] * radians);\n  }\n\n  var proj = projection(forward),\n      stream_ = proj.stream;\n\n  proj.stream = function(stream) {\n    var rotate = proj.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (proj.rotate([0, 0]), stream_(stream));\n    proj.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart();\n      sphereStream.lineStart();\n      outline(sphereStream, root);\n      sphereStream.lineEnd();\n      sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return proj;\n}\n\nfunction outline(stream, node, parent) {\n  var point,\n      edges = node.edges,\n      n = edges.length,\n      edge,\n      multiPoint = {type: \"MultiPoint\", coordinates: node.face},\n      notPoles = node.face.filter(function(d) { return abs(d[1]) !== 90; }),\n      b = bounds({type: \"MultiPoint\", coordinates: notPoles}),\n      inside = false,\n      j = -1,\n      dx = b[1][0] - b[0][0];\n  // TODO\n  var c = dx === 180 || dx === 360\n      ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2]\n      : centroid(multiPoint);\n  // First find the shared edge\u2026\n  if (parent) while (++j < n) {\n    if (edges[j] === parent) break;\n  }\n  ++j;\n  for (var i = 0; i < n; ++i) {\n    edge = edges[(i + j) % n];\n    if (Array.isArray(edge)) {\n      if (!inside) {\n        stream.point((point = interpolate(edge[0], c)(epsilon))[0], point[1]);\n        inside = true;\n      }\n      stream.point((point = interpolate(edge[1], c)(epsilon))[0], point[1]);\n    } else {\n      inside = false;\n      if (edge !== parent) outline(stream, edge, node);\n    }\n  }\n}\n\n// Tests equality of two spherical points.\nfunction pointEqual(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\n\n// Finds a shared edge given two clockwise polygons.\nfunction sharedEdge(a, b) {\n  var x, y, n = a.length, found = null;\n  for (var i = 0; i < n; ++i) {\n    x = a[i];\n    for (var j = b.length; --j >= 0;) {\n      y = b[j];\n      if (x[0] === y[0] && x[1] === y[1]) {\n        if (found) return [found, x];\n        found = x;\n      }\n    }\n  }\n}\n\n// Converts an array of n face vertices to an array of n + 1 edges.\nfunction faceEdges(face) {\n  var n = face.length,\n      edges = [];\n  for (var a = face[n - 1], i = 0; i < n; ++i) edges.push([a, a = face[i]]);\n  return edges;\n}\n\nfunction hasInverse(node) {\n  return node.project.invert || node.children && node.children.some(hasInverse);\n}\n", "// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [\n  [0, 90],\n  [-90, 0], [0, 0], [90, 0], [180, 0],\n  [0, -90]\n];\n\nexport default [\n  [0, 2, 1],\n  [0, 3, 2],\n  [5, 1, 2],\n  [5, 2, 3],\n  [0, 1, 4],\n  [0, 4, 3],\n  [5, 4, 1],\n  [5, 3, 4]\n].map(function(face) {\n  return face.map(function(i) {\n    return octahedron[i];\n  });\n});\n", "import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {pi} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .scale(101.858)\n      .center([0, 45]);\n}\n", "import {geoCentroid as centroid, geoProjection as projection} from \"d3-geo\";\nimport {collignonRaw} from \"../collignon\";\nimport {pi, sqrt} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function(x,y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .scale(121.906)\n      .center([0, 48.5904]);\n}\n", "import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {asin, atan2, cos, degrees, max, min, pi, radians, sin} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = face.length === 6 ? centroid({type: \"MultiPoint\", coordinates: face}) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function(face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([\n        a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794,\n        a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794,\n        a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794\n      ]), spherical([\n        b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794,\n        b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794,\n        b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794\n      ]));\n      a = b;\n    }\n    return hexagon;\n  });\n\n  var cornerNormals = [];\n\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n\n  w5.forEach(function(hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n    for (var i = 0; i < n; ++i) {\n      w5.push([\n        face[i],\n        hexagon[(i * 2 + 2) % (2 * n)],\n        hexagon[(i * 2 + 1) % (2 * n)]\n      ]);\n      parents.push(j);\n      normals.push(cross(\n        cartesian(hexagon[(i * 2 + 2) % (2 * n)]),\n        cartesian(hexagon[(i * 2 + 1) % (2 * n)])\n      ));\n    }\n  });\n\n  var faces = w5.map(function(face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n\n  parents.forEach(function(d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4\n        : lambda < 0 ? phi < 0 ? 2 : 0\n        : lambda < pi / 2 ? phi < 0 ? 3 : 1\n        : phi < 0 ? 7 : 5;\n\n    var n = cornerNormals[hexagon];\n\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon\n        : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1\n        : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2\n        : hexagon];\n  }\n\n  return polyhedral(faces[0], face)\n      .scale(110.625)\n      .center([0,45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) s += a[i] * b[i];\n  return s;\n}\n\nfunction cross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0]\n  ];\n}\n\n// Converts 3D Cartesian to spherical coordinates (degrees).\nfunction spherical(cartesian) {\n  return [\n    atan2(cartesian[1], cartesian[0]) * degrees,\n    asin(max(-1, min(1, cartesian[2]))) * degrees\n  ];\n}\n\n// Converts spherical coordinates (degrees) to 3D Cartesian.\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [\n    cosphi * cos(lambda),\n    cosphi * sin(lambda),\n    sin(phi)\n  ];\n}\n", "export default function() {}\n", "export default function(ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0,\n      n,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area <= 0;\n}\n", "export default function(ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = false;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1],\n        pj = ring[j], xj = pj[0], yj = pj[1];\n    if (((yi > y) ^ (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)) contains = !contains;\n  }\n  return contains;\n}\n", "import {geoStream} from \"d3-geo\";\nimport noop from \"../noop\";\nimport clockwise from \"./clockwise\";\nimport contains from \"./contains\";\n\nexport default function(object, projection) {\n  var stream = projection.stream, project;\n  if (!stream) throw new Error(\"invalid projection\");\n  switch (object && object.type) {\n    case \"Feature\": project = projectFeature; break;\n    case \"FeatureCollection\": project = projectFeatureCollection; break;\n    default: project = projectGeometry; break;\n  }\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function(f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function(o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n  switch (o.type) {\n    case \"Point\": sink = sinkPoint; break;\n    case \"MultiPoint\": sink = sinkPoint; break;\n    case \"LineString\": sink = sinkLine; break;\n    case \"MultiLineString\": sink = sinkLine; break;\n    case \"Polygon\": sink = sinkPolygon; break;\n    case \"MultiPolygon\": sink = sinkPolygon; break;\n    case \"Sphere\": sink = sinkPolygon; break;\n    default: return null;\n  }\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\n\nvar sinkPoint = {\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  result: function() {\n    var result = !points.length ? null\n        : points.length < 2 ? {type: \"Point\", coordinates: points[0]}\n        : {type: \"MultiPoint\", coordinates: points};\n    points = [];\n    return result;\n  }\n};\n\nvar sinkLine = {\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function() {\n    var result = !lines.length ? null\n        : lines.length < 2 ? {type: \"LineString\", coordinates: lines[0]}\n        : {type: \"MultiLineString\", coordinates: lines};\n    lines = [];\n    return result;\n  }\n};\n\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    var n = points.length;\n    if (n) {\n      do points.push(points[0].slice()); while (++n < 4);\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = [];\n\n    // https://github.com/d3/d3/issues/1558\n    lines.forEach(function(ring) {\n      if (clockwise(ring)) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      var point = hole[0];\n      polygons.some(function(polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n\n    lines = [];\n\n    return !polygons.length ? null\n        : polygons.length > 1 ? {type: \"MultiPolygon\", coordinates: polygons}\n        : {type: \"Polygon\", coordinates: polygons[0]};\n  }\n};\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, halfPi, pi, sign, sqrt1_2} from \"../math\";\n\nexport default function(project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function(x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * x0 + (y > 0 ? 1 : -1) * d,\n          y1 = -s * y0 + (x > 0 ? 1 : -1) * d;\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n\n  return projection(projectQuincuncial)\n      .rotate([-90, -90, 45])\n      .clipAngle(180 - 1e-3);\n}\n", "import {gringortenRaw} from \"../gringorten\";\nimport quincuncial from \"./index\";\n\nexport default function() {\n  return quincuncial(gringortenRaw)\n      .scale(176.423);\n}\n", "import {guyouRaw} from \"../guyou\";\nimport quincuncial from \"./index\";\n\nexport default function() {\n  return quincuncial(guyouRaw)\n      .scale(111.48);\n}\n", "export default function(input, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(input) {\n    var n = input.length, i = 2, output = new Array(n);\n    output[0] = +input[0].toFixed(digits);\n    output[1] = +input[1].toFixed(digits);\n    while (i < n) output[i] = input[i], ++i;\n    return output;\n  }\n\n  function quantizePoints(input) {\n    return input.map(quantizePoint);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizePoints);\n  }\n\n  function quantizeGeometry(input) {\n    if (input == null) return input;\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": case \"LineString\": output = {type: input.type, coordinates: quantizePoints(input.coordinates)}; break;\n      case \"MultiLineString\": case \"Polygon\": output = {type: input.type, coordinates: quantizePolygon(input.coordinates)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", coordinates: input.coordinates.map(quantizePolygon)}; break;\n      default: return input;\n    }\n    if (input.bbox != null) output.bbox = input.bbox;\n    return output;\n  }\n\n  function quantizeFeature(input) {\n    var output = {type: \"Feature\", properties: input.properties, geometry: quantizeGeometry(input.geometry)};\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    return output;\n  }\n\n  if (input != null) switch (input.type) {\n    case \"Feature\": return quantizeFeature(input);\n    case \"FeatureCollection\": {\n      var output = {type: \"FeatureCollection\", features: input.features.map(quantizeFeature)};\n      if (input.bbox != null) output.bbox = input.bbox;\n      return output;\n    }\n    default: return quantizeGeometry(input);\n  }\n\n  return input;\n}\n", "import {abs, acos, asin, atan, cos, epsilon, pi, sin, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [\n      sin(E) * cotPhi,\n      phi + (1 - cos(E)) * cotPhi - phi0\n    ];\n  }\n\n  // TODO return null for points outside outline.\n  forward.invert = function(x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10, delta;\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [\n      sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(rectangularPolyconicRaw)\n      .scale(131.215);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians} from \"./math\";\n\nvar K = [\n  [0.9986, -0.062],\n  [1.0000, 0.0000],\n  [0.9986, 0.0620],\n  [0.9954, 0.1240],\n  [0.9900, 0.1860],\n  [0.9822, 0.2480],\n  [0.9730, 0.3100],\n  [0.9600, 0.3720],\n  [0.9427, 0.4340],\n  [0.9216, 0.4958],\n  [0.8962, 0.5571],\n  [0.8679, 0.6176],\n  [0.8350, 0.6769],\n  [0.7986, 0.7346],\n  [0.7597, 0.7903],\n  [0.7186, 0.8435],\n  [0.6732, 0.8936],\n  [0.6213, 0.9394],\n  [0.5722, 0.9761],\n  [0.5322, 1.0000]\n];\n\nK.forEach(function(d) {\n  d[1] *= 1.0144;\n});\n\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [\n    lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)\n  ];\n}\n\nrobinsonRaw.invert = function(x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50, delta;\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n      break;\n    }\n  } while (--i0 >= 0);\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [\n    x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    phi * radians\n  ];\n};\n\nexport default function() {\n  return projection(robinsonRaw)\n      .scale(152.63);\n}\n", "import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {acos, asin, atan2, cos, degrees, radians, sin, sqrt} from \"./math\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [\n      k * cosPhi * sin(lambda),\n      k * sin(phi)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [\n      atan2(x * sinc, rho * sqrt(1 - sinc * sinc)),\n      rho ? asin(y * sinc / rho) : 0\n    ];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [\n      coordinates[0] * cosOmega / A,\n      y / A\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega);\n\n  // As a multiple of radius.\n  p.distance = function(_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function(_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p\n      .scale(432.147)\n      .clipAngle(acos(1 / distance) * degrees - 1e-6);\n}\n", "var epsilon = 1e-4,\n    epsilonInverse = 1e4,\n    x0 = -180, x0e = x0 + epsilon,\n    x1 = 180, x1e = x1 - epsilon,\n    y0 = -90, y0e = y0 + epsilon,\n    y1 = 90, y1e = y1 - epsilon;\n\nfunction nonempty(coordinates) {\n  return coordinates.length > 0;\n}\n\nfunction quantize(x) {\n  return Math.floor(x * epsilonInverse) / epsilonInverse;\n}\n\nfunction normalizePoint(y) {\n  return y === y0 || y === y1 ? [0, y] : [x0, quantize(y)]; // pole or antimeridian?\n}\n\nfunction clampPoint(p) {\n  var x = p[0], y = p[1], clamped = false;\n  if (x <= x0e) x = x0, clamped = true;\n  else if (x >= x1e) x = x1, clamped = true;\n  if (y <= y0e) y = y0, clamped = true;\n  else if (y >= y1e) y = y1, clamped = true;\n  return clamped ? [x, y] : p;\n}\n\nfunction clampPoints(points) {\n  return points.map(clampPoint);\n}\n\n// For each ring, detect where it crosses the antimeridian or pole.\nfunction extractFragments(rings, polygon, fragments) {\n  for (var j = 0, m = rings.length; j < m; ++j) {\n    var ring = rings[j].slice();\n\n    // By default, assume that this ring doesn\u2019t need any stitching.\n    fragments.push({index: -1, polygon: polygon, ring: ring});\n\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      var point = ring[i],\n          x = point[0],\n          y = point[1];\n\n      // If this is an antimeridian or polar point\u2026\n      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n        ring[i] = clampPoint(point);\n\n        // Advance through any antimeridian or polar points\u2026\n        for (var k = i + 1; k < n; ++k) {\n          var pointk = ring[k],\n              xk = pointk[0],\n              yk = pointk[1];\n          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n        }\n\n        // If this was just a single antimeridian or polar point,\n        // we don\u2019t need to cut this ring into a fragment;\n        // we can just leave it as-is.\n        if (k === i + 1) continue;\n\n        // Otherwise, if this is not the first point in the ring,\n        // cut the current fragment so that it ends at the current point.\n        // The current point is also normalized for later joining.\n        if (i) {\n          var fragmentBefore = {index: -1, polygon: polygon, ring: ring.slice(0, i + 1)};\n          fragmentBefore.ring[fragmentBefore.ring.length - 1] = normalizePoint(y);\n          fragments[fragments.length - 1] = fragmentBefore;\n        }\n\n        // If the ring started with an antimeridian fragment,\n        // we can ignore that fragment entirely.\n        else fragments.pop();\n\n        // If the remainder of the ring is an antimeridian fragment,\n        // move on to the next ring.\n        if (k >= n) break;\n\n        // Otherwise, add the remaining ring fragment and continue.\n        fragments.push({index: -1, polygon: polygon, ring: ring = ring.slice(k - 1)});\n        ring[0] = normalizePoint(ring[0][1]);\n        i = -1;\n        n = ring.length;\n      }\n    }\n  }\n}\n\n// Now stitch the fragments back together into rings.\nfunction stitchFragments(fragments) {\n  var i, n = fragments.length;\n\n  // To connect the fragments start-to-end, create a simple index by end.\n  var fragmentByStart = {},\n      fragmentByEnd = {},\n      fragment,\n      start,\n      startFragment,\n      end,\n      endFragment;\n\n  // For each fragment\u2026\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    start = fragment.ring[0];\n    end = fragment.ring[fragment.ring.length - 1];\n\n    // If this fragment is closed, add it as a standalone ring.\n    if (start[0] === end[0] && start[1] === end[1]) {\n      fragment.polygon.push(fragment.ring);\n      fragments[i] = null;\n      continue;\n    }\n\n    fragment.index = i;\n    fragmentByStart[start] = fragmentByEnd[end] = fragment;\n  }\n\n  // For each open fragment\u2026\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    if (fragment) {\n      start = fragment.ring[0];\n      end = fragment.ring[fragment.ring.length - 1];\n      startFragment = fragmentByEnd[start];\n      endFragment = fragmentByStart[end];\n\n      delete fragmentByStart[start];\n      delete fragmentByEnd[end];\n\n      // If this fragment is closed, add it as a standalone ring.\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment.ring);\n        continue;\n      }\n\n      if (startFragment) {\n        delete fragmentByEnd[start];\n        delete fragmentByStart[startFragment.ring[0]];\n        startFragment.ring.pop(); // drop the shared coordinate\n        fragments[startFragment.index] = null;\n        fragment = {index: -1, polygon: startFragment.polygon, ring: startFragment.ring.concat(fragment.ring)};\n\n        if (startFragment === endFragment) {\n          // Connect both ends to this single fragment to create a ring.\n          fragment.polygon.push(fragment.ring);\n        } else {\n          fragment.index = n++;\n          fragments.push(fragmentByStart[fragment.ring[0]] = fragmentByEnd[fragment.ring[fragment.ring.length - 1]] = fragment);\n        }\n      } else if (endFragment) {\n        delete fragmentByStart[end];\n        delete fragmentByEnd[endFragment.ring[endFragment.ring.length - 1]];\n        fragment.ring.pop(); // drop the shared coordinate\n        fragment = {index: n++, polygon: endFragment.polygon, ring: fragment.ring.concat(endFragment.ring)};\n        fragments[endFragment.index] = null;\n        fragments.push(fragmentByStart[fragment.ring[0]] = fragmentByEnd[fragment.ring[fragment.ring.length - 1]] = fragment);\n      } else {\n        fragment.ring.push(fragment.ring[0]); // close ring\n        fragment.polygon.push(fragment.ring);\n      }\n    }\n  }\n}\n\nfunction stitchFeature(input) {\n  var output = {type: \"Feature\", geometry: stitchGeometry(input.geometry)};\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  if (input.properties != null) output.properties = input.properties;\n  return output;\n}\n\nfunction stitchGeometry(input) {\n  if (input == null) return input;\n  var output, fragments, i, n;\n  switch (input.type) {\n    case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(stitchGeometry)}; break;\n    case \"Point\": output = {type: \"Point\", coordinates: clampPoint(input.coordinates)}; break;\n    case \"MultiPoint\": case \"LineString\": output = {type: input.type, coordinates: clampPoints(input.coordinates)}; break;\n    case \"MultiLineString\": output = {type: \"MultiLineString\", coordinates: input.coordinates.map(clampPoints)}; break;\n    case \"Polygon\": {\n      var polygon = [];\n      extractFragments(input.coordinates, polygon, fragments = []);\n      stitchFragments(fragments);\n      output = {type: \"Polygon\", coordinates: polygon};\n      break;\n    }\n    case \"MultiPolygon\": {\n      fragments = [], i = -1, n = input.coordinates.length;\n      var polygons = new Array(n);\n      while (++i < n) extractFragments(input.coordinates[i], polygons[i] = [], fragments);\n      stitchFragments(fragments);\n      output = {type: \"MultiPolygon\", coordinates: polygons.filter(nonempty)};\n      break;\n    }\n    default: return input;\n  }\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nexport default function(input) {\n  if (input == null) return input;\n  switch (input.type) {\n    case \"Feature\": return stitchFeature(input);\n    case \"FeatureCollection\": {\n      var output = {type: \"FeatureCollection\", features: input.features.map(stitchFeature)};\n      if (input.bbox != null) output.bbox = input.bbox;\n      return output;\n    }\n    default: return stitchGeometry(input);\n  }\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {atan, quarterPi, sin, tan} from \"./math\";\n\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [\n    lambda * (0.74482 - 0.34588 * s * s),\n    1.70711 * t\n  ];\n}\n\ntimesRaw.invert = function(x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [\n    x / (0.74482 - 0.34588 * s * s),\n    2 * atan(t)\n  ];\n};\n\nexport default function() {\n  return projection(timesRaw)\n      .scale(146.153);\n}\n", "import {geoInterpolate as interpolate, geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {asin, degrees, pi, sin, radians} from \"./math\";\n\n// Compute the origin as the midpoint of the two reference points.\n// Rotate one of the reference points by the origin.\n// Apply the spherical law of sines to compute gamma rotation.\nexport default function(raw, p0, p1) {\n  var i = interpolate(p0, p1),\n      o = i(0.5),\n      a = rotation([-o[0], -o[1]])(p0),\n      b = i.distance / 2,\n      y = -asin(sin(a[1] * radians) / sin(b)),\n      R = [-o[0], -o[1], -(a[0] > 0 ? pi - y : y) * degrees],\n      p = projection(raw(b)).rotate(R),\n      r = rotation(R),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p\n      .clipAngle(90);\n}\n", "import {geoGnomonicRaw as gnomonicRaw} from \"d3-geo\";\nimport {cos} from \"./math\";\nimport twoPoint from \"./twoPoint\";\n\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\n\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39])\n      .clipAngle(60)\n      .scale(400);\n}\n\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}\n", "import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {acos, atan2, cos, sin, sqrt, tan} from \"./math\";\nimport twoPoint from \"./twoPoint\";\n\n// TODO clip to ellipse\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [\n      (za - zb) / (2 * z0),\n      ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [\n      atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0),\n      (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)\n    ];\n  };\n\n  return forward;\n}\n\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39])\n      .clipAngle(130)\n      .scale(122.571);\n}\n\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [\n    sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2,\n    sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2\n  ];\n}\n\nvanDerGrintenRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [\n    pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x),\n    sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrintenRaw)\n      .scale(79.4183);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [\n    sign(lambda) * pi * x1,\n    sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))\n  ];\n}\n\nvanDerGrinten2Raw.invert = function(x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [\n    sign(x) * pi * (B - A),\n    sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten2Raw)\n      .scale(79.4183);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [\n    pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A),\n    pi * y1\n  ];\n}\n\nvanDerGrinten3Raw.invert = function(x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [\n    x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0,\n    halfPi * sin(2 * atan(y1))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten3Raw)\n        .scale(79.4183);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, halfPi, pi, sign, sqrt} from \"./math\";\n\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [\n    sign(lambda) * halfPi * x1,\n    sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)\n  ];\n}\n\nvanDerGrinten4Raw.invert = function(x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n  return [\n    sign(x) * (sqrt(D * D + 4) + D) * pi / 4,\n    halfPi * B\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten4Raw)\n      .scale(127.16);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {sqrt, pi} from \"./math\";\nimport {mollweideBromleyRaw} from \"./mollweide\";\n\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\n\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\n\nexport default function() {\n  return projection(wagner4Raw)\n      .scale(176.84);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math\";\n\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function(x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function() {\n  return projection(wagner6Raw)\n      .scale(152.63);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt, tan} from \"./math\";\n\nexport function wagner7Raw(lambda, phi) {\n  var s = 0.90631 * sin(phi),\n      c0 = sqrt(1 - s * s),\n      c1 = sqrt(2 / (1 + c0 * cos(lambda /= 3)));\n  return [\n    2.66723 * c0 * c1 * sin(lambda),\n    1.24104 * s * c1\n  ];\n}\n\nwagner7Raw.invert = function(x, y) {\n  var t1 = x / 2.66723,\n      t2 = y / 1.24104,\n      p = sqrt(t1 * t1 + t2 * t2),\n      c = 2 * asin(p / 2);\n  return [\n    3 * atan2(x * tan(c), 2.66723 * p),\n    p && asin(y * sin(c) / (1.24104 * 0.90631 * p))\n  ];\n};\n\nexport default function() {\n  return projection(wagner7Raw)\n      .scale(172.632);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [\n    sinLambda * cosPhi - cosLambda * sin1_Phi,\n    -cosLambda * cosPhi - sinLambda * sin1_Phi\n  ];\n}\n\nwiechelRaw.invert = function(x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [\n    atan2(k * b, D * (1 + w)),\n    D ? -asin(k * a / D) : 0\n  ];\n};\n\nexport default function() {\n  return projection(wiechelRaw)\n      .rotate([0, -90, 45])\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {geoProjection as projection} from \"d3-geo\";\nimport {aitoffRaw} from \"./aitoff\";\nimport {halfPi, epsilon, sin, cos, sqrt, abs, acos} from \"./math\";\n\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [\n    (coordinates[0] + lambda / halfPi) / 2,\n    (coordinates[1] + phi) / 2\n  ];\n}\n\nwinkel3Raw.invert = function(x, y) {\n  var lambda = x, phi = y, i = 25;\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(winkel3Raw)\n      .scale(158.837);\n}\n", "export {default as geoAiry, airyRaw as geoAiryRaw} from \"./src/airy\";\nexport {default as geoAitoff, aitoffRaw as geoAitoffRaw} from \"./src/aitoff\";\nexport {default as geoArmadillo, armadilloRaw as geoArmadilloRaw} from \"./src/armadillo\";\nexport {default as geoAugust, augustRaw as geoAugustRaw} from \"./src/august\";\nexport {default as geoBaker, bakerRaw as geoBakerRaw} from \"./src/baker\";\nexport {default as geoBerghaus, berghausRaw as geoBerghausRaw} from \"./src/berghaus\";\nexport {default as geoBoggs, boggsRaw as geoBoggsRaw} from \"./src/boggs\";\nexport {default as geoBonne, bonneRaw as geoBonneRaw} from \"./src/bonne\";\nexport {default as geoBottomley, bottomleyRaw as geoBottomleyRaw} from \"./src/bottomley\";\nexport {default as geoBromley, bromleyRaw as geoBromleyRaw} from \"./src/bromley\";\nexport {default as geoChamberlin, chamberlinRaw as geoChamberlinRaw, chamberlinAfrica as geoChamberlinAfrica} from \"./src/chamberlin\";\nexport {default as geoCollignon, collignonRaw as geoCollignonRaw} from \"./src/collignon\";\nexport {default as geoCraig, craigRaw as geoCraigRaw} from \"./src/craig\";\nexport {default as geoCraster, crasterRaw as geoCrasterRaw} from \"./src/craster\";\nexport {default as geoCylindricalEqualArea, cylindricalEqualAreaRaw as geoCylindricalEqualAreaRaw} from \"./src/cylindricalEqualArea\";\nexport {default as geoCylindricalStereographic, cylindricalStereographicRaw as geoCylindricalStereographicRaw} from \"./src/cylindricalStereographic\";\nexport {default as geoEckert1, eckert1Raw as geoEckert1Raw} from \"./src/eckert1.js\";\nexport {default as geoEckert2, eckert2Raw as geoEckert2Raw} from \"./src/eckert2.js\";\nexport {default as geoEckert3, eckert3Raw as geoEckert3Raw} from \"./src/eckert3.js\";\nexport {default as geoEckert4, eckert4Raw as geoEckert4Raw} from \"./src/eckert4.js\";\nexport {default as geoEckert5, eckert5Raw as geoEckert5Raw} from \"./src/eckert5.js\";\nexport {default as geoEckert6, eckert6Raw as geoEckert6Raw} from \"./src/eckert6.js\";\nexport {default as geoEisenlohr, eisenlohrRaw as geoEisenlohrRaw} from \"./src/eisenlohr.js\";\nexport {default as geoFahey, faheyRaw as geoFaheyRaw} from \"./src/fahey.js\";\nexport {default as geoFoucaut, foucautRaw as geoFoucautRaw} from \"./src/foucaut.js\";\nexport {default as geoGilbert} from \"./src/gilbert.js\";\nexport {default as geoGingery, gingeryRaw as geoGingeryRaw} from \"./src/gingery.js\";\nexport {default as geoGinzburg4, ginzburg4Raw as geoGinzburg4Raw} from \"./src/ginzburg4.js\";\nexport {default as geoGinzburg5, ginzburg5Raw as geoGinzburg5Raw} from \"./src/ginzburg5.js\";\nexport {default as geoGinzburg6, ginzburg6Raw as geoGinzburg6Raw} from \"./src/ginzburg6.js\";\nexport {default as geoGinzburg8, ginzburg8Raw as geoGinzburg8Raw} from \"./src/ginzburg8.js\";\nexport {default as geoGinzburg9, ginzburg9Raw as geoGinzburg9Raw} from \"./src/ginzburg9.js\";\nexport {default as geoGringorten, gringortenRaw as geoGringortenRaw} from \"./src/gringorten.js\";\nexport {default as geoGuyou, guyouRaw as geoGuyouRaw} from \"./src/guyou.js\";\nexport {default as geoHammer, hammerRaw as geoHammerRaw} from \"./src/hammer.js\";\nexport {default as geoHammerRetroazimuthal, hammerRetroazimuthalRaw as geoHammerRetroazimuthalRaw} from \"./src/hammerRetroazimuthal.js\";\nexport {default as geoHealpix, healpixRaw as geoHealpixRaw} from \"./src/healpix.js\";\nexport {default as geoHill, hillRaw as geoHillRaw} from \"./src/hill.js\";\nexport {default as geoHomolosine, homolosineRaw as geoHomolosineRaw} from \"./src/homolosine.js\";\nexport {default as geoInterrupt} from \"./src/interrupted/index\";\nexport {default as geoInterruptedBoggs} from \"./src/interrupted/boggs\";\nexport {default as geoInterruptedHomolosine} from \"./src/interrupted/homolosine\";\nexport {default as geoInterruptedMollweide} from \"./src/interrupted/mollweide\";\nexport {default as geoInterruptedMollweideHemispheres} from \"./src/interrupted/mollweideHemispheres\";\nexport {default as geoInterruptedSinuMollweide} from \"./src/interrupted/sinuMollweide\";\nexport {default as geoInterruptedSinusoidal} from \"./src/interrupted/sinusoidal\";\nexport {default as geoKavrayskiy7, kavrayskiy7Raw as geoKavrayskiy7Raw} from \"./src/kavrayskiy7.js\";\nexport {default as geoLagrange, lagrangeRaw as geoLagrangeRaw} from \"./src/lagrange.js\";\nexport {default as geoLarrivee, larriveeRaw as geoLarriveeRaw} from \"./src/larrivee\";\nexport {default as geoLaskowski, laskowskiRaw as geoLaskowskiRaw} from \"./src/laskowski\";\nexport {default as geoLittrow, littrowRaw as geoLittrowRaw} from \"./src/littrow.js\";\nexport {default as geoLoximuthal, loximuthalRaw as geoLoximuthalRaw} from \"./src/loximuthal.js\";\nexport {default as geoMiller, millerRaw as geoMillerRaw} from \"./src/miller\";\nexport {default as geoModifiedStereographic, modifiedStereographicRaw as geoModifiedStereographicRaw, modifiedStereographicAlaska as geoModifiedStereographicAlaska, modifiedStereographicGs48 as geoModifiedStereographicGs48, modifiedStereographicGs50 as geoModifiedStereographicGs50, modifiedStereographicMiller as geoModifiedStereographicMiller, modifiedStereographicLee as geoModifiedStereographicLee} from \"./src/modifiedStereographic\";\nexport {default as geoMollweide, mollweideRaw as geoMollweideRaw} from \"./src/mollweide\";\nexport {default as geoMtFlatPolarParabolic, mtFlatPolarParabolicRaw as geoMtFlatPolarParabolicRaw} from \"./src/mtFlatPolarParabolic\";\nexport {default as geoMtFlatPolarQuartic, mtFlatPolarQuarticRaw as geoMtFlatPolarQuarticRaw} from \"./src/mtFlatPolarQuartic\";\nexport {default as geoMtFlatPolarSinusoidal, mtFlatPolarSinusoidalRaw as geoMtFlatPolarSinusoidalRaw} from \"./src/mtFlatPolarSinusoidal\";\nexport {default as geoNaturalEarth, naturalEarthRaw as geoNaturalEarthRaw} from \"./src/naturalEarth\";\nexport {default as geoNaturalEarth2, naturalEarth2Raw as geoNaturalEarth2Raw} from \"./src/naturalEarth2\";\nexport {default as geoNellHammer, nellHammerRaw as geoNellHammerRaw} from \"./src/nellHammer\";\nexport {default as geoPatterson, pattersonRaw as geoPattersonRaw} from \"./src/patterson\";\nexport {default as geoPolyconic, polyconicRaw as geoPolyconicRaw} from \"./src/polyconic\";\nexport {default as geoPolyhedral} from \"./src/polyhedral/index.js\";\nexport {default as geoPolyhedralButterfly} from \"./src/polyhedral/butterfly.js\";\nexport {default as geoPolyhedralCollignon} from \"./src/polyhedral/collignon.js\";\nexport {default as geoPolyhedralWaterman} from \"./src/polyhedral/waterman.js\";\nexport {default as geoProject} from \"./src/project/index\";\nexport {default as geoGringortenQuincuncial} from \"./src/quincuncial/gringorten.js\";\nexport {default as geoPeirceQuincuncial} from \"./src/quincuncial/peirce.js\";\nexport {default as geoPierceQuincuncial} from \"./src/quincuncial/peirce.js\"; // DEPRECATED misspelling\nexport {default as geoQuantize} from \"./src/quantize\";\nexport {default as geoQuincuncial} from \"./src/quincuncial/index.js\";\nexport {default as geoRectangularPolyconic, rectangularPolyconicRaw as geoRectangularPolyconicRaw} from \"./src/rectangularPolyconic\";\nexport {default as geoRobinson, robinsonRaw as geoRobinsonRaw} from \"./src/robinson\";\nexport {default as geoSatellite, satelliteRaw as geoSatelliteRaw} from \"./src/satellite\";\nexport {default as geoSinuMollweide, sinuMollweideRaw as geoSinuMollweideRaw} from \"./src/sinuMollweide\";\nexport {default as geoSinusoidal, sinusoidalRaw as geoSinusoidalRaw} from \"./src/sinusoidal\";\nexport {default as geoStitch} from \"./src/stitch\";\nexport {default as geoTimes, timesRaw as geoTimesRaw} from \"./src/times\";\nexport {default as geoTwoPointAzimuthal, twoPointAzimuthalRaw as geoTwoPointAzimuthalRaw, twoPointAzimuthalUsa as geoTwoPointAzimuthalUsa} from \"./src/twoPointAzimuthal\";\nexport {default as geoTwoPointEquidistant, twoPointEquidistantRaw as geoTwoPointEquidistantRaw, twoPointEquidistantUsa as geoTwoPointEquidistantUsa} from \"./src/twoPointEquidistant\";\nexport {default as geoVanDerGrinten, vanDerGrintenRaw as geoVanDerGrintenRaw} from \"./src/vanDerGrinten\";\nexport {default as geoVanDerGrinten2, vanDerGrinten2Raw as geoVanDerGrinten2Raw} from \"./src/vanDerGrinten2\";\nexport {default as geoVanDerGrinten3, vanDerGrinten3Raw as geoVanDerGrinten3Raw} from \"./src/vanDerGrinten3\";\nexport {default as geoVanDerGrinten4, vanDerGrinten4Raw as geoVanDerGrinten4Raw} from \"./src/vanDerGrinten4\";\nexport {default as geoWagner4, wagner4Raw as geoWagner4Raw} from \"./src/wagner4.js\";\nexport {default as geoWagner6, wagner6Raw as geoWagner6Raw} from \"./src/wagner6.js\";\nexport {default as geoWagner7, wagner7Raw as geoWagner7Raw} from \"./src/wagner7.js\";\nexport {default as geoWiechel, wiechelRaw as geoWiechelRaw} from \"./src/wiechel.js\";\nexport {default as geoWinkel3, winkel3Raw as geoWinkel3Raw} from \"./src/winkel3\";\n", "/*!\n * EventEmitter v5.2.9 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - https://oli.me.uk/\n * @preserve\n */\n\n;(function (exports) {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    function isValidListener (listener) {\n        if (typeof listener === 'function' || listener instanceof RegExp) {\n            return true\n        } else if (listener && typeof listener === 'object') {\n            return isValidListener(listener.listener)\n        } else {\n            return false\n        }\n    }\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        if (!isValidListener(listener)) {\n            throw new TypeError('listener must be a function');\n        }\n\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the first argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listenersMap = this.getListenersAsObject(evt);\n        var listeners;\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listenersMap) {\n            if (listenersMap.hasOwnProperty(key)) {\n                listeners = listenersMap[key].slice(0);\n\n                for (i = 0; i < listeners.length; i++) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}(typeof window !== 'undefined' ? window : this || {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.View = void 0;\nvar tslib_1 = require(\"tslib\");\nvar wolfy87_eventemitter_1 = tslib_1.__importDefault(require(\"wolfy87-eventemitter\"));\nvar util_1 = require(\"@antv/util\");\nfunction cloneOptions(options) {\n    var result = {};\n    util_1.forIn(options, function (value, key) {\n        if (util_1.isObject(value) && value.isView) {\n            result[key] = value;\n        }\n        else if (util_1.isArray(value)) {\n            result[key] = value.concat([]);\n        }\n        else if (util_1.isPlainObject(value)) {\n            result[key] = util_1.clone(value);\n        }\n        else {\n            result[key] = value;\n        }\n    });\n    return result;\n}\n/**\n * \u6570\u636E\u89C6\u56FE\n * @public\n */\nvar View = /** @class */ (function (_super) {\n    tslib_1.__extends(View, _super);\n    function View(dataSet, options) {\n        var _this = _super.call(this) || this;\n        /**\n         * \u662F\u5426\u662FView\n         */\n        _this.isView = true;\n        /**\n         * \u662F\u5426\u662FView\n         */\n        _this.isDataView = true; // alias\n        /**\n         *\n         */\n        _this.watchingStates = null;\n        /**\n         * \u6570\u636E\u89C6\u56FE\u7C7B\u578B\n         */\n        _this.dataType = 'table';\n        /**\n         * \u5DF2\u5E94\u7528\u7684 transform\n         */\n        _this.transforms = [];\n        /**\n         * \u539F\u59CB\u6570\u636E\n         */\n        _this.origin = [];\n        /**\n         * \u5B58\u50A8\u5904\u7406\u540E\u7684\u6570\u636E\n         */\n        _this.rows = [];\n        if (dataSet && dataSet.isDataSet) {\n            _this.dataSet = dataSet;\n        }\n        else {\n            _this.dataSet = null;\n            options = dataSet;\n        }\n        _this.loose = !_this.dataSet;\n        // TODO:\n        // assign(me, options);\n        if (options) {\n            _this.watchingStates = options.watchingStates;\n        }\n        if (!_this.loose) {\n            var watchingStates_1 = _this.watchingStates;\n            dataSet.on('statechange', function (name) {\n                if (util_1.isArray(watchingStates_1)) {\n                    if (watchingStates_1.indexOf(name) > -1) {\n                        _this._reExecute();\n                    }\n                }\n                else {\n                    _this._reExecute();\n                }\n            });\n        }\n        return _this;\n    }\n    View.prototype._parseStateExpression = function (expr) {\n        var dataSet = this.dataSet;\n        if (dataSet === null)\n            return undefined;\n        var matched = /^\\$state\\.(\\w+)/.exec(expr);\n        if (matched) {\n            return dataSet.state[matched[1]];\n        }\n        return expr;\n    };\n    View.prototype._preparseOptions = function (options) {\n        var _this = this;\n        var optionsCloned = cloneOptions(options);\n        if (this.loose) {\n            return optionsCloned;\n        }\n        util_1.forIn(optionsCloned, function (value, key) {\n            if (util_1.isString(value) && /^\\$state\\./.test(value)) {\n                optionsCloned[key] = _this._parseStateExpression(value);\n            }\n        });\n        return optionsCloned;\n    };\n    // connectors\n    View.prototype._prepareSource = function (source, options) {\n        // warning me.origin is protected\n        this._source = { source: source, options: options };\n        if (!options) {\n            if (source instanceof View || util_1.isString(source)) {\n                this.origin = View.DataSet.getConnector('default')(source, this.dataSet);\n            }\n            else if (util_1.isArray(source)) {\n                // TODO branch: if source is like ['dataview1', 'dataview2']\n                this.origin = source;\n            }\n            else if (util_1.isObject(source) && source.type) {\n                var opts = this._preparseOptions(source); // connector without source\n                this.origin = View.DataSet.getConnector(opts.type)(opts, this);\n            }\n            else {\n                throw new TypeError('Invalid source');\n            }\n        }\n        else {\n            var opts = this._preparseOptions(options);\n            this.origin = View.DataSet.getConnector(opts.type)(source, opts, this);\n        }\n        this.rows = util_1.deepMix([], this.origin);\n        return this;\n    };\n    View.prototype.source = function (source, options) {\n        this._prepareSource(source, options)._reExecuteTransforms();\n        this.trigger('change', []);\n        return this;\n    };\n    /**\n     *  \u6267\u884C\u6570\u636E\u5904\u7406\u6570\u636E\u3002\u6267\u884C\u5B8C\u8FD9\u4E2A\u51FD\u6570\u540E\uFF0Ctransform \u4F1A\u88AB\u5B58\u50A8\n     * @param options - \u67D0\u79CD\u7C7B\u578B\u7684transform\n     */\n    View.prototype.transform = function (options) {\n        if (options && options.type) {\n            this.transforms.push(options);\n            this._executeTransform(options);\n        }\n        return this;\n    };\n    View.prototype._executeTransform = function (options) {\n        options = this._preparseOptions(options);\n        var transform = View.DataSet.getTransform(options.type);\n        transform(this, options);\n    };\n    View.prototype._reExecuteTransforms = function () {\n        var _this = this;\n        this.transforms.forEach(function (options) {\n            _this._executeTransform(options);\n        });\n    };\n    View.prototype.addRow = function (row) {\n        this.rows.push(row);\n    };\n    View.prototype.removeRow = function (index) {\n        this.rows.splice(index, 1);\n    };\n    View.prototype.updateRow = function (index, newRow) {\n        util_1.assign(this.rows[index], newRow);\n    };\n    View.prototype.findRows = function (query) {\n        return this.rows.filter(function (row) { return util_1.isMatch(row, query); });\n    };\n    View.prototype.findRow = function (query) {\n        return util_1.find(this.rows, query);\n    };\n    // columns\n    View.prototype.getColumnNames = function () {\n        var firstRow = this.rows[0];\n        if (firstRow) {\n            return util_1.keys(firstRow);\n        }\n        return [];\n    };\n    View.prototype.getColumnName = function (index) {\n        return this.getColumnNames()[index];\n    };\n    View.prototype.getColumnIndex = function (columnName) {\n        var columnNames = this.getColumnNames();\n        return columnNames.indexOf(columnName);\n    };\n    View.prototype.getColumn = function (columnName) {\n        return this.rows.map(function (row) { return row[columnName]; });\n    };\n    View.prototype.getColumnData = function (columnName) {\n        return this.getColumn(columnName);\n    };\n    // data process\n    View.prototype.getSubset = function (startRowIndex, endRowIndex, columnNames) {\n        var subset = [];\n        for (var i = startRowIndex; i <= endRowIndex; i++) {\n            subset.push(util_1.pick(this.rows[i], columnNames));\n        }\n        return subset;\n    };\n    View.prototype.toString = function (prettyPrint) {\n        if (prettyPrint === void 0) { prettyPrint = false; }\n        if (prettyPrint) {\n            return JSON.stringify(this.rows, null, 2);\n        }\n        return JSON.stringify(this.rows);\n    };\n    View.prototype._reExecute = function () {\n        var _a = this._source, source = _a.source, options = _a.options;\n        this._prepareSource(source, options);\n        this._reExecuteTransforms();\n        this.trigger('change', []);\n    };\n    return View;\n}(wolfy87_eventemitter_1.default));\nexports.View = View;\n", "export var epsilon = 1e-6;\r\n", "export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n", "export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n", "function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n", "export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}", "export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n", "export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n", "import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n", "export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n", "// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n", "export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n", "export default function(x) {\n  return x;\n}\n", "import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n", "export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n", "import ascending from \"./ascending.js\";\nimport permute from \"./permute.js\";\n\nexport default function sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f = ascending] = F;\n  if (f.length === 1 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascending(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascending(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(f);\n}\n", "import ascending from \"./ascending.js\";\nimport group, {rollup} from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length === 1\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "import {tickIncrement} from \"./ticks.js\";\n\nexport default function nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n", "import count from \"../count.js\";\n\nexport default function(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n", "import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks, {tickIncrement} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain\u2019s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don\u2019t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n", "export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n", "export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n", "import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n", "import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n", "import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n", "export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n", "export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n", "import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n", "function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n", "export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n", "export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n", "export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n", "import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n", "import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n", "import min from \"./min.js\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n", "import transpose from \"./transpose.js\";\n\nexport default function() {\n  return transpose(arguments);\n}\n", "export default function every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n", "export default function some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n", "export default function filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n", "export default function map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n", "export default function reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n", "export default function reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n", "export default function difference(values, ...others) {\n  values = new Set(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n", "export default function disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new Set();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n", "export default function set(values) {\n  return values instanceof Set ? values : new Set(values);\n}\n", "import set from \"./set.js\";\n\nexport default function intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n", "export default function superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    if (set.has(o)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      set.add(value);\n      if (Object.is(o, value)) break;\n    }\n  }\n  return true;\n}\n", "import superset from \"./superset.js\";\n\nexport default function subset(values, other) {\n  return superset(other, values);\n}\n", "export default function union(...others) {\n  const set = new Set();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n", "export {default as bisect, bisectRight, bisectLeft, bisectCenter} from \"./bisect.js\";\nexport {default as ascending} from \"./ascending.js\";\nexport {default as bisector} from \"./bisector.js\";\nexport {default as count} from \"./count.js\";\nexport {default as cross} from \"./cross.js\";\nexport {default as cumsum} from \"./cumsum.js\";\nexport {default as descending} from \"./descending.js\";\nexport {default as deviation} from \"./deviation.js\";\nexport {default as extent} from \"./extent.js\";\nexport {Adder, fsum, fcumsum} from \"./fsum.js\";\nexport {default as group, groups, index, indexes, rollup, rollups} from \"./group.js\";\nexport {default as groupSort} from \"./groupSort.js\";\nexport {default as bin, default as histogram} from \"./bin.js\"; // Deprecated; use bin.\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis.js\";\nexport {default as thresholdScott} from \"./threshold/scott.js\";\nexport {default as thresholdSturges} from \"./threshold/sturges.js\";\nexport {default as max} from \"./max.js\";\nexport {default as maxIndex} from \"./maxIndex.js\";\nexport {default as mean} from \"./mean.js\";\nexport {default as median} from \"./median.js\";\nexport {default as merge} from \"./merge.js\";\nexport {default as min} from \"./min.js\";\nexport {default as minIndex} from \"./minIndex.js\";\nexport {default as nice} from \"./nice.js\";\nexport {default as pairs} from \"./pairs.js\";\nexport {default as permute} from \"./permute.js\";\nexport {default as quantile, quantileSorted} from \"./quantile.js\";\nexport {default as quickselect} from \"./quickselect.js\";\nexport {default as range} from \"./range.js\";\nexport {default as least} from \"./least.js\";\nexport {default as leastIndex} from \"./leastIndex.js\";\nexport {default as greatest} from \"./greatest.js\";\nexport {default as greatestIndex} from \"./greatestIndex.js\";\nexport {default as scan} from \"./scan.js\"; // Deprecated; use leastIndex.\nexport {default as shuffle, shuffler} from \"./shuffle.js\";\nexport {default as sum} from \"./sum.js\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks.js\";\nexport {default as transpose} from \"./transpose.js\";\nexport {default as variance} from \"./variance.js\";\nexport {default as zip} from \"./zip.js\";\nexport {default as every} from \"./every.js\";\nexport {default as some} from \"./some.js\";\nexport {default as filter} from \"./filter.js\";\nexport {default as map} from \"./map.js\";\nexport {default as reduce} from \"./reduce.js\";\nexport {default as reverse} from \"./reverse.js\";\nexport {default as sort} from \"./sort.js\";\nexport {default as difference} from \"./difference.js\";\nexport {default as disjoint} from \"./disjoint.js\";\nexport {default as intersection} from \"./intersection.js\";\nexport {default as subset} from \"./subset.js\";\nexport {default as superset} from \"./superset.js\";\nexport {default as union} from \"./union.js\";\nexport {InternMap, InternSet} from \"internmap\";\n", "export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n", "export default function noop() {}\n", "function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n", "import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n", "import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360\u00B0) % 360\u00B0, except that we want\n// the distance between \u00B1180\u00B0 to be 360\u00B0.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n", "import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n", "import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n", "import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0\u00B0, 0\u00B0], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n", "import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n", "import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n", "import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n", "import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n", "import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n", "import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n", "import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2A2F n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n", "export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n", "import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n", "import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n", "import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n", "import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n", "import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n", "import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n", "import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n", "export default x => x;\n", "import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n", "import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n", "import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n", "import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n", "import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n", "export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n", "import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n", "export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n", "import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n", "import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n", "import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n", "import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n", "import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n", "import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n", "import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n", "import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960\u00D7500. The projection also works quite well at 960\u00D7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n", "import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n", "import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n", "import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n", "import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n", "import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n", "import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n", "import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n", "import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n", "import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n", "import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n", "import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n", "import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n", "import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n", "export {default as geoArea} from \"./area.js\";\nexport {default as geoBounds} from \"./bounds.js\";\nexport {default as geoCentroid} from \"./centroid.js\";\nexport {default as geoCircle} from \"./circle.js\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian.js\";\nexport {default as geoClipCircle} from \"./clip/circle.js\";\nexport {default as geoClipExtent} from \"./clip/extent.js\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(\u2026).\nexport {default as geoClipRectangle} from \"./clip/rectangle.js\";\nexport {default as geoContains} from \"./contains.js\";\nexport {default as geoDistance} from \"./distance.js\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule.js\";\nexport {default as geoInterpolate} from \"./interpolate.js\";\nexport {default as geoLength} from \"./length.js\";\nexport {default as geoPath} from \"./path/index.js\";\nexport {default as geoAlbers} from \"./projection/albers.js\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa.js\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea.js\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant.js\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal.js\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea.js\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant.js\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth.js\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular.js\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic.js\";\nexport {default as geoIdentity} from \"./projection/identity.js\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index.js\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator.js\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1.js\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic.js\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic.js\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator.js\";\nexport {default as geoRotation} from \"./rotation.js\";\nexport {default as geoStream} from \"./stream.js\";\nexport {default as geoTransform} from \"./transform.js\";\n", "function noop() {}\r\n\r\nvar x0 = Infinity,\r\n    y0 = x0,\r\n    x1 = -x0,\r\n    y1 = x1;\r\n\r\nvar boundsStream = {\r\n  point: boundsPoint,\r\n  lineStart: noop,\r\n  lineEnd: noop,\r\n  polygonStart: noop,\r\n  polygonEnd: noop,\r\n  result: function() {\r\n    var bounds = [[x0, y0], [x1, y1]];\r\n    x1 = y1 = -(y0 = x0 = Infinity);\r\n    return bounds;\r\n  }\r\n};\r\n\r\nfunction boundsPoint(x, y) {\r\n  if (x < x0) x0 = x;\r\n  if (x > x1) x1 = x;\r\n  if (y < y0) y0 = y;\r\n  if (y > y1) y1 = y;\r\n}\r\n\r\nexport default boundsStream;\r\n", "import {geoStream} from \"d3-geo\";\r\nimport boundsStream from \"./bounds\";\r\n\r\nexport function fitExtent(projection, extent, object) {\r\n  var w = extent[1][0] - extent[0][0],\r\n      h = extent[1][1] - extent[0][1],\r\n      clip = projection.clipExtent && projection.clipExtent();\r\n\r\n  projection\r\n      .scale(150)\r\n      .translate([0, 0]);\r\n\r\n  if (clip != null) projection.clipExtent(null);\r\n\r\n  geoStream(object, projection.stream(boundsStream));\r\n\r\n  var b = boundsStream.result(),\r\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\r\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\r\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\r\n\r\n  if (clip != null) projection.clipExtent(clip);\r\n\r\n  return projection\r\n      .scale(k * 150)\r\n      .translate([x, y]);\r\n}\r\n\r\nexport function fitSize(projection, size, object) {\r\n  return fitExtent(projection, [[0, 0], size], object);\r\n}\r\n", "const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We\u2019re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n", "export {default as path} from \"./path.js\";\n", "import {epsilon} from \"./math\";\r\nimport {geoAlbers as albers} from \"d3-geo\";\r\nimport {geoConicEqualArea as conicEqualArea} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\r\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\r\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\r\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\r\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\r\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\r\n  };\r\n}\r\n\r\n// A composite projection for the United States, configured by default for\r\n// 960\u00D7500. The projection also works quite well at 960\u00D7600 if you change the\r\n// scale to 1285 and adjust the translate accordingly. The set of standard\r\n// parallels for each region comes from USGS, which is published here:\r\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      lower48 = albers(), lower48Point,\r\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\r\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n  function albersUsa(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (lower48Point.point(x, y), point)\r\n        || (alaskaPoint.point(x, y), point)\r\n        || (hawaiiPoint.point(x, y), point);\r\n  }\r\n\r\n  albersUsa.invert = function(coordinates) {\r\n    var k = lower48.scale(),\r\n        t = lower48.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\r\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\r\n        : lower48).invert(coordinates);\r\n  };\r\n\r\n  albersUsa.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\r\n  };\r\n\r\n  albersUsa.precision = function(_) {\r\n    if (!arguments.length) return lower48.precision();\r\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  albersUsa.scale = function(_) {\r\n    if (!arguments.length) return lower48.scale();\r\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\r\n    return albersUsa.translate(lower48.translate());\r\n  };\r\n\r\n  albersUsa.translate = function(_) {\r\n    if (!arguments.length) return lower48.translate();\r\n    var k = lower48.scale(), x = +_[0], y = +_[1];\r\n\r\n    lower48Point = lower48\r\n        .translate(_)\r\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\r\n        .stream(pointStream);\r\n\r\n    alaskaPoint = alaska\r\n        .translate([x - 0.307 * k, y + 0.201 * k])\r\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    hawaiiPoint = hawaii\r\n        .translate([x - 0.205 * k, y + 0.212 * k])\r\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  albersUsa.fitExtent = function(extent, object) {\r\n    return fitExtent(albersUsa, extent, object);\r\n  };\r\n\r\n  albersUsa.fitSize = function(size, object) {\r\n    return fitSize(albersUsa, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return albersUsa;\r\n}\r\n\r\n  albersUsa.drawCompositionBorders = function(context) {\r\n    var hawaii1 = lower48([-102.91, 26.3]);\r\n    var hawaii2 = lower48([-104.0, 27.5]);\r\n    var hawaii3 = lower48([-108.0, 29.1]);\r\n    var hawaii4 = lower48([-110.0, 29.1]);\r\n\r\n    var alaska1 = lower48([-110.0, 26.7]);\r\n    var alaska2 = lower48([-112.8, 27.6]);\r\n    var alaska3 = lower48([-114.3, 30.6]);\r\n    var alaska4 = lower48([-119.3, 30.1]);\r\n\r\n    context.moveTo(hawaii1[0], hawaii1[1]);\r\n    context.lineTo(hawaii2[0], hawaii2[1]);\r\n    context.lineTo(hawaii3[0], hawaii3[1]);\r\n    context.lineTo(hawaii4[0], hawaii4[1]);\r\n\r\n    context.moveTo(alaska1[0], alaska1[1]);\r\n    context.lineTo(alaska2[0], alaska2[1]);\r\n    context.lineTo(alaska3[0], alaska3[1]);\r\n    context.lineTo(alaska4[0], alaska4[1]);\r\n\r\n  };\r\n  albersUsa.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n\r\n  };\r\n\r\n\r\n  return albersUsa.scale(1070);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoAlbers as albers} from \"d3-geo\";\r\nimport {geoConicEqualArea as conicEqualArea} from \"d3-geo\";\r\nimport {geoEquirectangular as equirectangular} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\r\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\r\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\r\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\r\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\r\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\r\n  };\r\n}\r\n\r\n// A composite projection for the United States, configured by default for\r\n// 960\u00D7500. Also works quite well at 960\u00D7600 with scale 1285. The set of\r\n// standard parallels for each region comes from USGS, which is published here:\r\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      lower48 = albers(), lower48Point,\r\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\r\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\r\n      puertoRico = conicEqualArea().rotate([66, 0]).center([0, 18]).parallels([8, 18]), puertoRicoPoint, //Taken from https://bl.ocks.org/mbostock/5629120\r\n      samoa = equirectangular().rotate([173, 14]), samoaPoint, // EPSG:4169\r\n      guam = equirectangular().rotate([-145, -16.8]), guamPoint,\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n      /*\r\n      var puertoRicoBbox = [[-68.3, 19], [-63.9, 17]];\r\n      var samoaBbox = [[-171, -14], [-168, -14.8]];\r\n      var guamBbox = [[144, 20.8], [146.5, 12.7]];\r\n      */\r\n\r\n  function albersUsa(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n\r\n    return point = null,\r\n        (lower48Point.point(x, y), point) ||\r\n        (alaskaPoint.point(x, y), point)  ||\r\n        (hawaiiPoint.point(x, y), point)  ||\r\n        (puertoRicoPoint.point(x, y), point) ||\r\n        (samoaPoint.point(x, y), point)   ||\r\n        (guamPoint.point(x, y), point);\r\n  }\r\n\r\n  albersUsa.invert = function(coordinates) {\r\n\r\n    var k = lower48.scale(),\r\n        t = lower48.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n        /*\r\n        //How are the return values calculated:\r\n        console.info(\"******\");\r\n        var c0 = puertoRico(puertoRicoBbox[0]);\r\n        var x0 = (c0[0] - t[0]) / k;\r\n        var y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 puertoRico\", x0 + ' - ' + y0);\r\n\r\n        var c1 = puertoRico(puertoRicoBbox[1]);\r\n        var x1 = (c1[0] - t[0]) / k;\r\n        var y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 puertoRico\", x1 + ' - ' + y1);\r\n\r\n        c0 = samoa(samoaBbox[0]);\r\n        x0 = (c0[0] - t[0]) / k;\r\n        y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 samoa\", x0 + ' - ' + y0);\r\n\r\n        c1 = samoa(samoaBbox[1]);\r\n        x1 = (c1[0] - t[0]) / k;\r\n        y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 samoa\", x1 + ' - ' + y1);\r\n\r\n        c0 = guam(guamBbox[0]);\r\n        x0 = (c0[0] - t[0]) / k;\r\n        y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 guam\", x0 + ' - ' + y0);\r\n\r\n        c1 = guam(guamBbox[1]);\r\n        x1 = (c1[0] - t[0]) / k;\r\n        y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 guam\", x1 + ' - ' + y1);\r\n        */\r\n\r\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\r\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\r\n        : y >= 0.2064 && y < 0.2413 && x >= 0.312 && x < 0.385 ? puertoRico\r\n        : y >= 0.09 && y < 0.1197 && x >= -0.4243 && x < -0.3232 ? samoa\r\n        : y >= -0.0518 && y < 0.0895 && x >= -0.4243 && x < -0.3824 ? guam\r\n        : lower48).invert(coordinates);\r\n\r\n  };\r\n\r\n  albersUsa.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream), puertoRico.stream(stream), samoa.stream(stream), guam.stream(stream)]);\r\n  };\r\n\r\n  albersUsa.precision = function(_) {\r\n    if (!arguments.length) {return lower48.precision();}\r\n    lower48.precision(_);\r\n    alaska.precision(_);\r\n    hawaii.precision(_);\r\n    puertoRico.precision(_);\r\n    samoa.precision(_);\r\n    guam.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  albersUsa.scale = function(_) {\r\n    if (!arguments.length) {return lower48.scale();}\r\n    lower48.scale(_);\r\n    alaska.scale(_ * 0.35);\r\n    hawaii.scale(_);\r\n    puertoRico.scale(_);\r\n    samoa.scale(_* 2);\r\n    guam.scale(_);\r\n    return albersUsa.translate(lower48.translate());\r\n  };\r\n\r\n  albersUsa.translate = function(_) {\r\n    if (!arguments.length) {return lower48.translate();}\r\n    var k = lower48.scale(), x = +_[0], y = +_[1];\r\n\r\n    /*\r\n    var c0 = puertoRico.translate([x + 0.350 * k, y + 0.224 * k])(puertoRicoBbox[0]);\r\n    var x0 = (x - c0[0]) / k;\r\n    var y0 = (y - c0[1]) / k;\r\n\r\n    var c1 = puertoRico.translate([x + 0.350 * k, y + 0.224 * k])(puertoRicoBbox[1]);\r\n    var x1 = (x - c1[0]) / k;\r\n    var y1 = (y - c1[1]) / k;\r\n\r\n    console.info('puertoRico: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n    console.info('.clipExtent([[x '+\r\n     (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n     ' * k + epsilon, y '+\r\n     (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n     ' * k + epsilon],[x '+\r\n     (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n     ' * k - epsilon, y '+\r\n     (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n     ' * k - epsilon]])');\r\n\r\n      c0 = samoa.translate([x - 0.492 * k, y + 0.09 * k])(samoaBbox[0]);\r\n      x0 = (x - c0[0]) / k;\r\n      y0 = (y - c0[1]) / k;\r\n\r\n      c1 = samoa.translate([x - 0.492 * k, y + 0.09 * k])(samoaBbox[1]);\r\n      x1 = (x - c1[0]) / k;\r\n      y1 = (y - c1[1]) / k;\r\n\r\n     console.info('samoa: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n     console.info('.clipExtent([[x '+\r\n      (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n      ' * k + epsilon, y '+\r\n      (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n      ' * k + epsilon],[x '+\r\n      (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n      ' * k - epsilon, y '+\r\n      (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n      ' * k - epsilon]])');\r\n\r\n      c0 = guam.translate([x - 0.408 * k, y + 0.018 * k])(guamBbox[0]);\r\n      x0 = (x - c0[0]) / k;\r\n      y0 = (y - c0[1]) / k;\r\n\r\n      c1 = guam.translate([x - 0.408 * k, y + 0.018 * k])(guamBbox[1]);\r\n      x1 = (x - c1[0]) / k;\r\n      y1 = (y - c1[1]) / k;\r\n\r\n     console.info('guam: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n     console.info('.clipExtent([[x '+\r\n      (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n      ' * k + epsilon, y '+\r\n      (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n      ' * k + epsilon],[x '+\r\n      (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n      ' * k - epsilon, y '+\r\n      (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n      ' * k - epsilon]])');\r\n      */\r\n\r\n    lower48Point = lower48\r\n        .translate(_)\r\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\r\n        .stream(pointStream);\r\n\r\n    alaskaPoint = alaska\r\n        .translate([x - 0.307 * k, y + 0.201 * k])\r\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.233 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    hawaiiPoint = hawaii\r\n        .translate([x - 0.205 * k, y + 0.212 * k])\r\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.233 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    puertoRicoPoint = puertoRico\r\n        .translate([x + 0.350 * k, y + 0.224 * k])\r\n        .clipExtent([[x + 0.312 * k + epsilon, y + 0.2064 * k + epsilon],[x + 0.385 * k - epsilon, y + 0.233 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    samoaPoint = samoa\r\n        .translate([x - 0.492 * k, y + 0.09 * k])\r\n        .clipExtent([[x - 0.4243 * k + epsilon, y + 0.0903 * k + epsilon],[x - 0.3233 * k - epsilon, y + 0.1197 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    guamPoint = guam\r\n        .translate([x - 0.408 * k, y + 0.018 * k])\r\n        .clipExtent([[x - 0.4244 * k + epsilon, y - 0.0519 * k + epsilon],[x - 0.3824 * k - epsilon, y + 0.0895 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n\r\n    return reset();\r\n  };\r\n\r\n  albersUsa.fitExtent = function(extent, object) {\r\n    return fitExtent(albersUsa, extent, object);\r\n  };\r\n\r\n  albersUsa.fitSize = function(size, object) {\r\n    return fitSize(albersUsa, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return albersUsa;\r\n  }\r\n\r\n  albersUsa.drawCompositionBorders = function(context) {\r\n\r\n    /*\r\n    console.info(\"CLIP EXTENT hawaii: \", hawaii.clipExtent());\r\n    console.info(\"UL BBOX:\", lower48.invert([hawaii.clipExtent()[0][0], hawaii.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", lower48.invert([hawaii.clipExtent()[1][0], hawaii.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", lower48.invert([hawaii.clipExtent()[1][0], hawaii.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", lower48.invert([hawaii.clipExtent()[0][0], hawaii.clipExtent()[1][1]]));\r\n\r\n    console.info(\"CLIP EXTENT alaska: \", alaska.clipExtent());\r\n    console.info(\"UL BBOX:\", lower48.invert([alaska.clipExtent()[0][0], alaska.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", lower48.invert([alaska.clipExtent()[1][0], alaska.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", lower48.invert([alaska.clipExtent()[1][0], alaska.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", lower48.invert([alaska.clipExtent()[0][0], alaska.clipExtent()[1][1]]));\r\n\r\n    console.info(\"CLIP EXTENT puertoRico: \", puertoRico.clipExtent());\r\n    console.info(\"UL BBOX:\", lower48.invert([puertoRico.clipExtent()[0][0], puertoRico.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", lower48.invert([puertoRico.clipExtent()[1][0], puertoRico.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", lower48.invert([puertoRico.clipExtent()[1][0], puertoRico.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", lower48.invert([puertoRico.clipExtent()[0][0], puertoRico.clipExtent()[1][1]]));\r\n\r\n    console.info(\"CLIP EXTENT samoa: \", samoa.clipExtent());\r\n    console.info(\"UL BBOX:\", lower48.invert([samoa.clipExtent()[0][0], samoa.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", lower48.invert([samoa.clipExtent()[1][0], samoa.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", lower48.invert([samoa.clipExtent()[1][0], samoa.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", lower48.invert([samoa.clipExtent()[0][0], samoa.clipExtent()[1][1]]));\r\n\r\n\r\n    console.info(\"CLIP EXTENT guam: \", guam.clipExtent());\r\n    console.info(\"UL BBOX:\", lower48.invert([guam.clipExtent()[0][0], guam.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", lower48.invert([guam.clipExtent()[1][0], guam.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", lower48.invert([guam.clipExtent()[1][0], guam.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", lower48.invert([guam.clipExtent()[0][0], guam.clipExtent()[1][1]]));\r\n    */\r\n\r\n    var ulhawaii = lower48([-110.4641, 28.2805]);\r\n    var urhawaii = lower48([-104.0597, 28.9528]);\r\n    var ldhawaii = lower48([-103.7049, 25.1031]);\r\n    var llhawaii = lower48([-109.8337, 24.4531]);\r\n\r\n    var ulalaska = lower48([ -124.4745, 28.1407]);\r\n    var uralaska = lower48([ -110.931, 30.8844]);\r\n    var ldalaska = lower48([-109.8337, 24.4531]);\r\n    var llalaska = lower48([-122.4628, 21.8562]);\r\n\r\n    var ulpuertoRico = lower48([-76.8579, 25.1544]);\r\n    var urpuertoRico = lower48([-72.429, 24.2097]);\r\n    var ldpuertoRico = lower48([-72.8265, 22.7056]);\r\n    var llpuertoRico = lower48([-77.1852, 23.6392]);\r\n\r\n\r\n    var ulsamoa = lower48([-125.0093, 29.7791]);\r\n    var ursamoa = lower48([-118.5193, 31.3262]);\r\n    var ldsamoa = lower48([-118.064, 29.6912]);\r\n    var llsamoa = lower48([-124.4369, 28.169]);\r\n\r\n    var ulguam = lower48([-128.1314, 37.4582]);\r\n    var urguam = lower48([-125.2132, 38.214]);\r\n    var ldguam = lower48([-122.3616, 30.5115]);\r\n    var llguam = lower48([-125.0315, 29.8211]);\r\n\r\n    context.moveTo(ulhawaii[0], ulhawaii[1]);\r\n    context.lineTo(urhawaii[0], urhawaii[1]);\r\n    context.lineTo(ldhawaii[0], ldhawaii[1]);\r\n    context.lineTo(ldhawaii[0], ldhawaii[1]);\r\n    context.lineTo(llhawaii[0], llhawaii[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(ulalaska[0], ulalaska[1]);\r\n    context.lineTo(uralaska[0], uralaska[1]);\r\n    context.lineTo(ldalaska[0], ldalaska[1]);\r\n    context.lineTo(ldalaska[0], ldalaska[1]);\r\n    context.lineTo(llalaska[0], llalaska[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(ulpuertoRico[0], ulpuertoRico[1]);\r\n    context.lineTo(urpuertoRico[0], urpuertoRico[1]);\r\n    context.lineTo(ldpuertoRico[0], ldpuertoRico[1]);\r\n    context.lineTo(ldpuertoRico[0], ldpuertoRico[1]);\r\n    context.lineTo(llpuertoRico[0], llpuertoRico[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(ulsamoa[0], ulsamoa[1]);\r\n    context.lineTo(ursamoa[0], ursamoa[1]);\r\n    context.lineTo(ldsamoa[0], ldsamoa[1]);\r\n    context.lineTo(ldsamoa[0], ldsamoa[1]);\r\n    context.lineTo(llsamoa[0], llsamoa[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(ulguam[0], ulguam[1]);\r\n    context.lineTo(urguam[0], urguam[1]);\r\n    context.lineTo(ldguam[0], ldguam[1]);\r\n    context.lineTo(ldguam[0], ldguam[1]);\r\n    context.lineTo(llguam[0], llguam[1]);\r\n    context.closePath();\r\n\r\n  };\r\n  albersUsa.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n\r\n  };\r\n\r\n\r\n  return albersUsa.scale(1070);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoConicConformal as conicConformal} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Spain, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n\r\n      iberianPeninsule = conicConformal().rotate([5, -38.6]).parallels([0,60]), iberianPeninsulePoint,\r\n      canaryIslands = conicConformal().rotate([5, -38.6]).parallels([0,60]), canaryIslandsPoint,\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n      /*\r\n      var iberianPeninsuleBbox = [[-11, 46], [4, 35]];\r\n      var canaryIslandsBbox = [[-19.0, 28.85], [-12.7, 28.1]];\r\n      */\r\n\r\n  function conicConformalSpain(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (iberianPeninsulePoint.point(x, y), point) ||\r\n        (canaryIslandsPoint.point(x, y), point);\r\n  }\r\n\r\n  conicConformalSpain.invert = function(coordinates) {\r\n    var k = iberianPeninsule.scale(),\r\n        t = iberianPeninsule.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n\r\n        return (y >= 0.05346 && y< 0.0897 && x >= -0.13388 && x < -0.0322 ? canaryIslands\r\n            : iberianPeninsule).invert(coordinates);\r\n  };\r\n\r\n  conicConformalSpain.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([iberianPeninsule.stream(cacheStream = stream), canaryIslands.stream(stream)]);\r\n  };\r\n\r\n  conicConformalSpain.precision = function(_) {\r\n    if (!arguments.length) {return iberianPeninsule.precision();}\r\n    iberianPeninsule.precision(_);\r\n    canaryIslands.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  conicConformalSpain.scale = function(_) {\r\n    if (!arguments.length) {return iberianPeninsule.scale();}\r\n    iberianPeninsule.scale(_);\r\n    canaryIslands.scale(_);\r\n    return conicConformalSpain.translate(iberianPeninsule.translate());\r\n  };\r\n\r\n  conicConformalSpain.translate = function(_) {\r\n    if (!arguments.length) {return iberianPeninsule.translate();}\r\n    var k = iberianPeninsule.scale(), x = +_[0], y = +_[1];\r\n    /*\r\n    var c0 = iberianPeninsule(iberianPeninsuleBbox[0]);\r\n   var x0 = (x - c0[0]) / k;\r\n   var y0 = (y - c0[1]) / k;\r\n\r\n   var c1 = iberianPeninsule(iberianPeninsuleBbox[1]);\r\n   var x1 = (x - c1[0]) / k;\r\n   var y1 = (y - c1[1]) / k;\r\n\r\n   console.info('Iberian Peninsula: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n\r\n   c0 = canaryIslands.translate([x + 0.1 * k, y - 0.094 * k])(canaryIslandsBbox[0]);\r\n   x0 = (x - c0[0]) / k;\r\n   y0 = (y - c0[1]) / k;\r\n\r\n   c1 = canaryIslands.translate([x + 0.1 * k, y - 0.094 * k])(canaryIslandsBbox[1]);\r\n   x1 = (x - c1[0]) / k;\r\n   y1 = (y - c1[1]) / k;\r\n\r\n   console.info('Canry Islands: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   */\r\n    iberianPeninsulePoint = iberianPeninsule\r\n        .translate(_)\r\n        .clipExtent([[x - 0.06857 * k, y - 0.1288 * k],[x + 0.13249 * k, y + 0.06 * k]])\r\n        .stream(pointStream);\r\n\r\n    canaryIslandsPoint = canaryIslands\r\n        .translate([x + 0.1 * k, y - 0.094 * k])\r\n        .clipExtent([[x - 0.1331 * k + epsilon, y + 0.053457 * k + epsilon],[x  - 0.0354 * k - epsilon, y + 0.08969 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicConformalSpain.fitExtent = function(extent, object) {\r\n    return fitExtent(conicConformalSpain, extent, object);\r\n  };\r\n\r\n  conicConformalSpain.fitSize = function(size, object) {\r\n    return fitSize(conicConformalSpain, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return conicConformalSpain;\r\n  }\r\n\r\n  conicConformalSpain.drawCompositionBorders = function(context) {\r\n    /*\r\n    console.info(\"CLIP EXTENT: \", canaryIslands.clipExtent());\r\n    console.info(\"UL BBOX:\", iberianPeninsule.invert([canaryIslands.clipExtent()[0][0], canaryIslands.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", iberianPeninsule.invert([canaryIslands.clipExtent()[1][0], canaryIslands.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", iberianPeninsule.invert([canaryIslands.clipExtent()[1][0], canaryIslands.clipExtent()[1][1]]));\r\n    */\r\n\r\n    var ulCanaryIslands = iberianPeninsule([-14.0346750, 34.965007]);\r\n    var urCanaryIslands = iberianPeninsule([-7.4208899, 35.536988]);\r\n    var ldCanaryIslands = iberianPeninsule([-7.3148275, 33.54359]);\r\n\r\n    context.moveTo(ulCanaryIslands[0], ulCanaryIslands[1]);\r\n    context.lineTo(urCanaryIslands[0], urCanaryIslands[1]);\r\n    context.lineTo(ldCanaryIslands[0], ldCanaryIslands[1]);\r\n  };\r\n  conicConformalSpain.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return conicConformalSpain.scale(2700);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoConicConformal as conicConformal} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Portugal, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      iberianPeninsule = conicConformal().rotate([10, -39.3]).parallels([0, 60]), iberianPeninsulePoint,\r\n      madeira = conicConformal().rotate([17, -32.7]).parallels([0, 60]), madeiraPoint,\r\n      azores = conicConformal().rotate([27.8, -38.6]).parallels([0, 60]), azoresPoint,\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n      /*\r\n      var iberianPeninsuleBbox = [[-11, 46], [4, 34]];\r\n      var madeiraBbox = [[-17.85, 33.6], [-16, 32.02]];\r\n      var azoresBbox = [[-32, 40.529], [-23.98, 35.75]];\r\n      */\r\n\r\n\r\n  function conicConformalPortugal(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (iberianPeninsulePoint.point(x, y), point) ||\r\n        (madeiraPoint.point(x, y), point) ||\r\n        (azoresPoint.point(x, y), point);\r\n  }\r\n\r\n  conicConformalPortugal.invert = function(coordinates) {\r\n    var k = iberianPeninsule.scale(),\r\n        t = iberianPeninsule.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n\r\n        /*\r\n        //How are the return values calculated:\r\n        console.info(\"******\");\r\n        var c0 = madeira(madeiraBbox[0]);\r\n        var x0 = (c0[0] - t[0]) / k;\r\n        var y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 madeira\", x0 + ' - ' + y0);\r\n\r\n        var c1 = madeira(madeiraBbox[1]);\r\n        var x1 = (c1[0] - t[0]) / k;\r\n        var y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 madeira\", x1 + ' - ' + y1);\r\n\r\n        c0 = azores(azoresBbox[0]);\r\n        x0 = (c0[0] - t[0]) / k;\r\n        y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 azores\", x0 + ' - ' + y0);\r\n\r\n        c1 = azores(azoresBbox[1]);\r\n        x1 = (c1[0] - t[0]) / k;\r\n        y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 azores\", x1 + ' - ' + y1);\r\n        */\r\n\r\n        return (y >= 0.0093 && y< 0.03678 && x >= -0.03875 && x < -0.0116 ? madeira\r\n            : y >= -0.0412 && y< 0.0091 && x >= -0.07782 && x < -0.01166 ? azores\r\n            : iberianPeninsule).invert(coordinates);\r\n  };\r\n\r\n  conicConformalPortugal.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([iberianPeninsule.stream(cacheStream = stream), madeira.stream(stream), azores.stream(stream)]);\r\n  };\r\n\r\n  conicConformalPortugal.precision = function(_) {\r\n    if (!arguments.length) {return iberianPeninsule.precision();}\r\n    iberianPeninsule.precision(_);\r\n    madeira.precision(_);\r\n    azores.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  conicConformalPortugal.scale = function(_) {\r\n    if (!arguments.length) {return iberianPeninsule.scale();}\r\n    iberianPeninsule.scale(_);\r\n    madeira.scale(_);\r\n    azores.scale(_ * 0.6);\r\n    return conicConformalPortugal.translate(iberianPeninsule.translate());\r\n  };\r\n\r\n  conicConformalPortugal.translate = function(_) {\r\n    if (!arguments.length) {return iberianPeninsule.translate();}\r\n    var k = iberianPeninsule.scale(), x = +_[0], y = +_[1];\r\n    /*\r\n    var c0 = iberianPeninsule(iberianPeninsuleBbox[0]);\r\n   var x0 = (x - c0[0]) / k;\r\n   var y0 = (y - c0[1]) / k;\r\n\r\n   var c1 = iberianPeninsule(iberianPeninsuleBbox[1]);\r\n   var x1 = (x - c1[0]) / k;\r\n   var y1 = (y - c1[1]) / k;\r\n\r\n   console.info('Iberian Peninsula: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k]])');\r\n\r\n   c0 = madeira.translate([x - 0.0265 * k, y + 0.025 * k])(madeiraBbox[0]);\r\n   x0 = (x - c0[0]) / k;\r\n   y0 = (y - c0[1]) / k;\r\n\r\n   c1 = madeira.translate([x - 0.0265 * k, y + 0.025 * k])(madeiraBbox[1]);\r\n   x1 = (x - c1[0]) / k;\r\n   y1 = (y - c1[1]) / k;\r\n\r\n   console.info('Madeira: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k + epsilon, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k + epsilon],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k - epsilon, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k - epsilon]])');\r\n\r\n    c0 = azores.translate([x - 0.045 * k, y + -0.02 * k])(azoresBbox[0]);\r\n    x0 = (x - c0[0]) / k;\r\n    y0 = (y - c0[1]) / k;\r\n\r\n    c1 = azores.translate([x - 0.045 * k, y + -0.02 * k])(azoresBbox[1]);\r\n    x1 = (x - c1[0]) / k;\r\n    y1 = (y - c1[1]) / k;\r\n\r\n    console.info('Azores: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n    console.info('.clipExtent([[x '+\r\n     (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n     ' * k + epsilon, y '+\r\n     (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n     ' * k + epsilon],[x '+\r\n     (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n     ' * k - epsilon, y '+\r\n     (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n     ' * k - epsilon]])');\r\n     */\r\n    iberianPeninsulePoint = iberianPeninsule\r\n        .translate(_)\r\n        .clipExtent([[x - 0.0115 * k, y - 0.1138 * k],[x +0.2105 * k, y +0.0673 * k]])\r\n        .stream(pointStream);\r\n\r\n\r\n    madeiraPoint = madeira\r\n        .translate([x - 0.0265 * k, y + 0.025 * k])\r\n        .clipExtent([[x - 0.0388 * k + epsilon, y + 0.0093 * k + epsilon],[x - 0.0116 * k - epsilon, y + 0.0368 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    azoresPoint = azores\r\n        .translate([x - 0.045 * k, y + -0.02 * k])\r\n        .clipExtent([[x - 0.0778 * k + epsilon, y - 0.0413 * k + epsilon],[x - 0.0117 * k - epsilon, y + 0.0091 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicConformalPortugal.fitExtent = function(extent, object) {\r\n    return fitExtent(conicConformalPortugal, extent, object);\r\n  };\r\n\r\n  conicConformalPortugal.fitSize = function(size, object) {\r\n    return fitSize(conicConformalPortugal, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return conicConformalPortugal;\r\n  }\r\n\r\n  conicConformalPortugal.drawCompositionBorders = function(context) {\r\n    /*\r\n    console.info(\"CLIP EXTENT MADEIRA: \", madeira.clipExtent());\r\n    console.info(\"UL BBOX:\", iberianPeninsule.invert([madeira.clipExtent()[0][0], madeira.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", iberianPeninsule.invert([madeira.clipExtent()[1][0], madeira.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", iberianPeninsule.invert([madeira.clipExtent()[1][0], madeira.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", iberianPeninsule.invert([madeira.clipExtent()[0][0], madeira.clipExtent()[1][1]]));\r\n\r\n    console.info(\"CLIP EXTENT AZORES: \", azores.clipExtent());\r\n    console.info(\"UL BBOX:\", iberianPeninsule.invert([azores.clipExtent()[0][0], azores.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", iberianPeninsule.invert([azores.clipExtent()[1][0], azores.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", iberianPeninsule.invert([azores.clipExtent()[1][0], azores.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", iberianPeninsule.invert([azores.clipExtent()[0][0], azores.clipExtent()[1][1]]));\r\n    */\r\n\r\n    var ulmadeira = iberianPeninsule([-12.8351, 38.7113]);\r\n    var urmadeira = iberianPeninsule([-10.8482, 38.7633]);\r\n    var ldmadeira = iberianPeninsule([-10.8181, 37.2072]);\r\n    var llmadeira = iberianPeninsule([-12.7345, 37.1573]);\r\n\r\n    var ulazores = iberianPeninsule([-16.0753, 41.4436]);\r\n    var urazores = iberianPeninsule([-10.9168, 41.6861]);\r\n    var ldazores = iberianPeninsule([-10.8557, 38.7747]);\r\n    var llazores = iberianPeninsule([-15.6728, 38.5505]);\r\n\r\n    context.moveTo(ulmadeira[0], ulmadeira[1]);\r\n    context.lineTo(urmadeira[0], urmadeira[1]);\r\n    context.lineTo(ldmadeira[0], ldmadeira[1]);\r\n    context.lineTo(ldmadeira[0], ldmadeira[1]);\r\n    context.lineTo(llmadeira[0], llmadeira[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(ulazores[0], ulazores[1]);\r\n    context.lineTo(urazores[0], urazores[1]);\r\n    context.lineTo(ldazores[0], ldazores[1]);\r\n    context.lineTo(ldazores[0], ldazores[1]);\r\n    context.lineTo(llazores[0], llazores[1]);\r\n    context.closePath();\r\n\r\n  };\r\n  conicConformalPortugal.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return conicConformalPortugal.scale(4200);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoMercator as mercator} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Ecuador, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n\r\n      mainland = mercator().rotate([80, 1.5]), mainlandPoint,\r\n      galapagos = mercator().rotate([90.73, 1]), galapagosPoint,\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n      /*\r\n      var mainlandBbox = [[-81.5, 2.7], [-70.0, -6.0]];\r\n      var galapagosBbox = [[-92.2, 0.58], [-88.8, -1.8]];\r\n      */\r\n\r\n  function mercatorEcuador(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (mainlandPoint.point(x, y), point) ||\r\n        (galapagosPoint.point(x, y), point);\r\n  }\r\n\r\n  mercatorEcuador.invert = function(coordinates) {\r\n    var k = mainland.scale(),\r\n        t = mainland.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n        /*\r\n        //How are the return values calculated:\r\n        var c0 = galapagos(galapagosBbox[0]);\r\n        var x0 = (c0[0] - t[0]) / k;\r\n        var y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 galapagos\", x0 + ' - ' + y0);\r\n\r\n\r\n        var c1 = galapagos(galapagosBbox[1]);\r\n        var x1 = (c1[0] - t[0]) / k;\r\n        var y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 galapagos\", x1 + ' - ' + y1);\r\n        */\r\n        return (y >= -0.0676 && y< -0.026 && x >= -0.0857 && x < -0.0263 ? galapagos\r\n            : mainland).invert(coordinates);\r\n  };\r\n\r\n  mercatorEcuador.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([mainland.stream(cacheStream = stream), galapagos.stream(stream)]);\r\n  };\r\n\r\n  mercatorEcuador.precision = function(_) {\r\n    if (!arguments.length) {return mainland.precision();}\r\n    mainland.precision(_);\r\n    galapagos.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  mercatorEcuador.scale = function(_) {\r\n    if (!arguments.length) {return mainland.scale();}\r\n    mainland.scale(_);\r\n    galapagos.scale(_);\r\n    return mercatorEcuador.translate(mainland.translate());\r\n  };\r\n\r\n  mercatorEcuador.translate = function(_) {\r\n    if (!arguments.length) {return mainland.translate();}\r\n    var k = mainland.scale(), x = +_[0], y = +_[1];\r\n    /*\r\n    var c0 = mainland(mainlandBbox[0]);\r\n   var x0 = (x - c0[0]) / k;\r\n   var y0 = (y - c0[1]) / k;\r\n\r\n   var c1 = mainland(mainlandBbox[1]);\r\n   var x1 = (x - c1[0]) / k;\r\n   var y1 = (y - c1[1]) / k;\r\n\r\n   console.info('mainland: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k]])');\r\n\r\n   c0 = galapagos.translate([x - 0.06 * k, y - 0.04 * k])(galapagosBbox[0]);\r\n   x0 = (x - c0[0]) / k;\r\n   y0 = (y - c0[1]) / k;\r\n\r\n   c1 = galapagos.translate([x - 0.06 * k, y - 0.04 * k])(galapagosBbox[1]);\r\n   x1 = (x - c1[0]) / k;\r\n   y1 = (y - c1[1]) / k;\r\n\r\n   console.info('galapagos: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k + epsilon, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k + epsilon],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k - epsilon, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k - epsilon]])');*/\r\n\r\n    mainlandPoint = mainland\r\n        .translate(_)\r\n        .clipExtent([[x - 0.0262 * k, y - 0.0734 * k],[x + 0.1741 * k, y + 0.079 * k]])\r\n        .stream(pointStream);\r\n\r\n    galapagosPoint = galapagos\r\n        .translate([x - 0.06 * k, y - 0.04 * k])\r\n        .clipExtent([[x - 0.0857 * k + epsilon, y - 0.0676 * k + epsilon],[x - 0.0263 * k - epsilon, y - 0.026 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  mercatorEcuador.fitExtent = function(extent, object) {\r\n    return fitExtent(mercatorEcuador, extent, object);\r\n  };\r\n\r\n  mercatorEcuador.fitSize = function(size, object) {\r\n    return fitSize(mercatorEcuador, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return mercatorEcuador;\r\n  }\r\n\r\n  mercatorEcuador.drawCompositionBorders = function(context) {\r\n    /*\r\n    console.info(\"CLIP EXTENT: \", galapagos.clipExtent());\r\n    console.info(\"UL BBOX:\", mainland.invert([galapagos.clipExtent()[0][0], galapagos.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", mainland.invert([galapagos.clipExtent()[1][0], galapagos.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", mainland.invert([galapagos.clipExtent()[1][0], galapagos.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", mainland.invert([galapagos.clipExtent()[0][0], galapagos.clipExtent()[1][1]]));\r\n    */\r\n\r\n    var ulgalapagos = mainland([-84.9032, 2.3757]);\r\n    var urgalapagos = mainland([-81.5047, 2.3708]);\r\n    var ldgalapagos = mainland([-81.5063, -0.01]);\r\n    var llgalapagos = mainland([-84.9086, -0.005]);\r\n\r\n    context.moveTo(ulgalapagos[0], ulgalapagos[1]);\r\n    context.lineTo(urgalapagos[0], urgalapagos[1]);\r\n    context.lineTo(ldgalapagos[0], ldgalapagos[1]);\r\n    context.lineTo(llgalapagos[0], llgalapagos[1]);\r\n    context.closePath();\r\n\r\n  };\r\n  mercatorEcuador.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return mercatorEcuador.scale(3500);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoTransverseMercator as transverseMercator} from \"d3-geo\";\r\nimport {geoStereographic as stereographic} from \"d3-geo\";\r\nimport {geoMercator as mercator} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Chile, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      mainland = transverseMercator().rotate([72, 37]), mainlandPoint,\r\n      antarctic = stereographic().rotate([72, 0]), antarcticPoint,\r\n      juanFernandez = mercator().rotate([80, 33.5]), juanFernandezPoint,\r\n      pascua = mercator().rotate([110, 25]), pascuaPoint,\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n    /*\r\n    var mainlandBbox = [[-75.5, -15.0], [-32, -49.0]];\r\n    var antarcticBbox = [[-91.0, -60.0], [-43.0, -90.0]];\r\n    var juanFernandezBbox = [[-81.0, -33.0], [-78.5, -34.0]];\r\n    var pascuaBbox = [[-110, -26.6], [-108.7, -27.5]];\r\n    */\r\n\r\n  function transverseMercatorChile(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (mainlandPoint.point(x, y), point) ||\r\n        (antarcticPoint.point(x, y), point) ||\r\n        (juanFernandezPoint.point(x, y), point) ||\r\n        (pascuaPoint.point(x, y), point);\r\n  }\r\n\r\n  transverseMercatorChile.invert = function(coordinates) {\r\n    var k = mainland.scale(),\r\n        t = mainland.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n\r\n        /*\r\n        //How are the return values calculated:\r\n        console.info(\"******\");\r\n        var c0 = antarctic(antarcticBbox[0]);\r\n        var x0 = (c0[0] - t[0]) / k;\r\n        var y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 antarctic\", x0 + ' - ' + y0);\r\n\r\n        var c1 = antarctic(antarcticBbox[1]);\r\n        var x1 = (c1[0] - t[0]) / k;\r\n        var y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 antarctic\", x1 + ' - ' + y1);\r\n\r\n        c0 = juanFernandez(juanFernandezBbox[0]);\r\n        x0 = (c0[0] - t[0]) / k;\r\n        y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 juanFernandez\", x0 + ' - ' + y0);\r\n\r\n        c1 = juanFernandez(juanFernandezBbox[1]);\r\n        x1 = (c1[0] - t[0]) / k;\r\n        y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 juanFernandez\", x1 + ' - ' + y1);\r\n\r\n        c0 = pascua(pascuaBbox[0]);\r\n        x0 = (c0[0] - t[0]) / k;\r\n        y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 pascua\", x0 + ' - ' + y0);\r\n\r\n        c1 = pascua(pascuaBbox[1]);\r\n        x1 = (c1[0] - t[0]) / k;\r\n        y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 pascua\", x1 + ' - ' + y1);\r\n        */\r\n\r\n        return (y >= 0.2582 && y< 0.32 && x >= -0.1036 && x < -0.087 ? antarctic\r\n            : y >= -0.01298 && y< 0.0133 && x >= -0.11396 && x < -0.05944 ? juanFernandez\r\n            : y >= 0.01539 && y< 0.03911 && x >= -0.089 && x < -0.0588 ? pascua\r\n            : mainland).invert(coordinates);\r\n  };\r\n\r\n  transverseMercatorChile.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([mainland.stream(cacheStream = stream), antarctic.stream(stream), juanFernandez.stream(stream), pascua.stream(stream)]);\r\n  };\r\n\r\n  transverseMercatorChile.precision = function(_) {\r\n    if (!arguments.length) {return mainland.precision();}\r\n    mainland.precision(_);\r\n    antarctic.precision(_);\r\n    juanFernandez.precision(_);\r\n    pascua.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  transverseMercatorChile.scale = function(_) {\r\n    if (!arguments.length) {return mainland.scale();}\r\n    mainland.scale(_);\r\n    antarctic.scale(_ * 0.15);\r\n    juanFernandez.scale(_ * 1.5);\r\n    pascua.scale(_ * 1.5);\r\n    return transverseMercatorChile.translate(mainland.translate());\r\n  };\r\n\r\n  transverseMercatorChile.translate = function(_) {\r\n    if (!arguments.length) {return mainland.translate();}\r\n    var k = mainland.scale(), x = +_[0], y = +_[1];\r\n\r\n    /*\r\n    var c0 = mainland(mainlandBbox[0]);\r\n   var x0 = (x - c0[0]) / k;\r\n   var y0 = (y - c0[1]) / k;\r\n\r\n   var c1 = mainland(mainlandBbox[1]);\r\n   var x1 = (x - c1[0]) / k;\r\n   var y1 = (y - c1[1]) / k;\r\n\r\n   console.info('Mainland: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k]])');\r\n\r\n   c0 = antarctic.translate([x - 0.1 * k, y + 0.17 * k])(antarcticBbox[0]);\r\n   x0 = (x - c0[0]) / k;\r\n   y0 = (y - c0[1]) / k;\r\n\r\n   c1 = antarctic.translate([x - 0.1 * k, y + 0.17 * k])(antarcticBbox[1]);\r\n   x1 = (x - c1[0]) / k;\r\n   y1 = (y - c1[1]) / k;\r\n\r\n   console.info('antarctic: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('Doesn t work due to -90 latitude!' + '.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k + epsilon, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k + epsilon],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k - epsilon, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k - epsilon]])');\r\n\r\n    c0 = juanFernandez.translate([x - 0.092 * k, y -0 * k])(juanFernandezBbox[0]);\r\n    x0 = (x - c0[0]) / k;\r\n    y0 = (y - c0[1]) / k;\r\n\r\n    c1 = juanFernandez.translate([x - 0.092 * k, y -0 * k])(juanFernandezBbox[1]);\r\n    x1 = (x - c1[0]) / k;\r\n    y1 = (y - c1[1]) / k;\r\n\r\n    console.info('juanFernandez: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n    console.info('.clipExtent([[x '+\r\n     (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n     ' * k + epsilon, y '+\r\n     (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n     ' * k + epsilon],[x '+\r\n     (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n     ' * k - epsilon, y '+\r\n     (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n     ' * k - epsilon]])');\r\n\r\n     c0 = pascua.translate([x - 0.089 * k, y -0.0265 * k])(pascuaBbox[0]);\r\n     x0 = (x - c0[0]) / k;\r\n     y0 = (y - c0[1]) / k;\r\n\r\n     c1 = pascua.translate([x - 0.089 * k, y -0.0265 * k])(pascuaBbox[1]);\r\n     x1 = (x - c1[0]) / k;\r\n     y1 = (y - c1[1]) / k;\r\n\r\n     console.info('pascua: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n     console.info('.clipExtent([[x '+\r\n      (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n      ' * k + epsilon, y '+\r\n      (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n      ' * k + epsilon],[x '+\r\n      (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n      ' * k - epsilon, y '+\r\n      (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n      ' * k - epsilon]])');\r\n      */\r\n    mainlandPoint = mainland\r\n        .translate(_)\r\n        .clipExtent([[x - 0.059 * k, y - 0.3835 * k],[x + 0.4498 * k, y + 0.3375 * k]])\r\n        .stream(pointStream);\r\n\r\n    antarcticPoint = antarctic\r\n        .translate([x - 0.087 * k, y + 0.17 * k])\r\n        .clipExtent([[x - 0.1166 * k + epsilon, y + 0.2582 * k + epsilon],[x - 0.06 * k - epsilon, y + 0.32 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    juanFernandezPoint = juanFernandez\r\n        .translate([x - 0.092 * k, y - 0 * k])\r\n        .clipExtent([[x - 0.114 * k + epsilon, y - 0.013 * k + epsilon],[x - 0.0594 * k - epsilon, y + 0.0133 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    pascuaPoint = pascua\r\n        .translate([x - 0.089 * k, y - 0.0265 * k])\r\n        .clipExtent([[x - 0.089 * k + epsilon, y + 0.0154 * k + epsilon],[x - 0.0588 * k - epsilon, y + 0.0391 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  transverseMercatorChile.fitExtent = function(extent, object) {\r\n    return fitExtent(transverseMercatorChile, extent, object);\r\n  };\r\n\r\n  transverseMercatorChile.fitSize = function(size, object) {\r\n    return fitSize(transverseMercatorChile, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return transverseMercatorChile;\r\n  }\r\n\r\n  transverseMercatorChile.drawCompositionBorders = function(context) {\r\n    /*\r\n    console.info(\"CLIP EXTENT antarctic: \", antarctic.clipExtent());\r\n    console.info(\"UL BBOX:\", mainland.invert([antarctic.clipExtent()[0][0], antarctic.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", mainland.invert([antarctic.clipExtent()[1][0], antarctic.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", mainland.invert([antarctic.clipExtent()[1][0], antarctic.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", mainland.invert([antarctic.clipExtent()[0][0], antarctic.clipExtent()[1][1]]));\r\n\r\n    console.info(\"CLIP EXTENT juanFernandez: \", juanFernandez.clipExtent());\r\n    console.info(\"UL BBOX:\", mainland.invert([juanFernandez.clipExtent()[0][0], juanFernandez.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", mainland.invert([juanFernandez.clipExtent()[1][0], juanFernandez.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", mainland.invert([juanFernandez.clipExtent()[1][0], juanFernandez.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", mainland.invert([juanFernandez.clipExtent()[0][0], juanFernandez.clipExtent()[1][1]]));\r\n\r\n    console.info(\"CLIP EXTENT pascua: \", pascua.clipExtent());\r\n    console.info(\"UL BBOX:\", mainland.invert([pascua.clipExtent()[0][0], pascua.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", mainland.invert([pascua.clipExtent()[1][0], pascua.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", mainland.invert([pascua.clipExtent()[1][0], pascua.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", mainland.invert([pascua.clipExtent()[0][0], pascua.clipExtent()[1][1]]));\r\n    */\r\n\r\n    var ulantarctic = mainland([-82.6999, -51.3043]);\r\n    var urantarctic = mainland([-77.5442, -51.6631]);\r\n    var ldantarctic = mainland([-78.0254, -55.1860]);\r\n    var llantarctic = mainland([-83.6106, -54.7785]);\r\n\r\n    var uljuanFernandez = mainland([-80.0638, -35.9840]);\r\n    var urjuanFernandez = mainland([-76.2153, -36.1811]);\r\n    var ldjuanFernandez = mainland([-76.2994, -37.6839]);\r\n    var lljuanFernandez = mainland([-80.2231, -37.4757]);\r\n\r\n    var ulpascua = mainland([-78.442, -37.706]);\r\n    var urpascua = mainland([-76.263, -37.8054]);\r\n    var ldpascua = mainland([-76.344, -39.1595]);\r\n    var llpascua = mainland([-78.5638, -39.0559]);\r\n\r\n    context.moveTo(ulantarctic[0], ulantarctic[1]);\r\n    context.lineTo(urantarctic[0], urantarctic[1]);\r\n    context.lineTo(ldantarctic[0], ldantarctic[1]);\r\n    context.lineTo(ldantarctic[0], ldantarctic[1]);\r\n    context.lineTo(llantarctic[0], llantarctic[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(uljuanFernandez[0], uljuanFernandez[1]);\r\n    context.lineTo(urjuanFernandez[0], urjuanFernandez[1]);\r\n    context.lineTo(ldjuanFernandez[0], ldjuanFernandez[1]);\r\n    context.lineTo(ldjuanFernandez[0], ldjuanFernandez[1]);\r\n    context.lineTo(lljuanFernandez[0], lljuanFernandez[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(ulpascua[0], ulpascua[1]);\r\n    context.lineTo(urpascua[0], urpascua[1]);\r\n    context.lineTo(ldpascua[0], ldpascua[1]);\r\n    context.lineTo(ldpascua[0], ldpascua[1]);\r\n    context.lineTo(llpascua[0], llpascua[1]);\r\n    context.closePath();\r\n\r\n\r\n  };\r\n  transverseMercatorChile.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return transverseMercatorChile.scale(700);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoConicEquidistant as conicEquidistant} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Portugal, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      mainland = conicEquidistant().rotate([-136, -22]).parallels([40, 34]), mainlandPoint, //gis.stackexchange.com/a/73135\r\n      hokkaido = conicEquidistant().rotate([-146, -26]).parallels([40, 34]), hokkaidoPoint,\r\n      okinawa = conicEquidistant().rotate([-126, -19]).parallels([40, 34]), okinawaPoint,\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n      /*\r\n      var mainlandBbox = [[126.0, 41.606], [142.97, 29.97]];\r\n      var hokkaidoBbox = [[138.7, 45.61], [146.2, 41.2]];\r\n      var okinawaBbox = [[122.6, 29.0], [130, 23.7]];\r\n      */\r\n\r\n\r\n  function conicEquidistantJapan(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (mainlandPoint.point(x, y), point) ||\r\n        (hokkaidoPoint.point(x, y), point) ||\r\n        (okinawaPoint.point(x, y), point);\r\n  }\r\n\r\n  conicEquidistantJapan.invert = function(coordinates) {\r\n    var k = mainland.scale(),\r\n        t = mainland.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n\r\n        /*\r\n        //How are the return values calculated:\r\n        console.info(\"******\");\r\n        var c0 = hokkaido(hokkaidoBbox[0]);\r\n        var x0 = (c0[0] - t[0]) / k;\r\n        var y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 hokkaido\", x0 + ' - ' + y0);\r\n\r\n        var c1 = hokkaido(hokkaidoBbox[1]);\r\n        var x1 = (c1[0] - t[0]) / k;\r\n        var y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 hokkaido\", x1 + ' - ' + y1);\r\n\r\n        c0 = okinawa(okinawaBbox[0]);\r\n        x0 = (c0[0] - t[0]) / k;\r\n        y0 = (c0[1] - t[1]) / k;\r\n\r\n        console.info(\"p0 okinawa\", x0 + ' - ' + y0);\r\n\r\n        c1 = okinawa(okinawaBbox[1]);\r\n        x1 = (c1[0] - t[0]) / k;\r\n        y1 = (c1[1] - t[1]) / k;\r\n\r\n        console.info(\"p1 okinawa\", x1 + ' - ' + y1);\r\n        */\r\n\r\n        return (y >= -0.10925 && y< -0.02701 && x >= -0.135 && x < -0.0397 ? hokkaido\r\n            : y >= 0.04713 && y< 0.11138 && x >= -0.03986 && x < 0.051 ? okinawa\r\n            : mainland).invert(coordinates);\r\n\r\n  };\r\n\r\n  conicEquidistantJapan.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([mainland.stream(cacheStream = stream), hokkaido.stream(stream), okinawa.stream(stream)]);\r\n  };\r\n\r\n  conicEquidistantJapan.precision = function(_) {\r\n    if (!arguments.length) {return mainland.precision();}\r\n    mainland.precision(_);\r\n    hokkaido.precision(_);\r\n    okinawa.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  conicEquidistantJapan.scale = function(_) {\r\n    if (!arguments.length) {return mainland.scale();}\r\n    mainland.scale(_);\r\n    hokkaido.scale(_);\r\n    okinawa.scale(_ * 0.7);\r\n    return conicEquidistantJapan.translate(mainland.translate());\r\n  };\r\n\r\n  conicEquidistantJapan.translate = function(_) {\r\n    if (!arguments.length) {return mainland.translate();}\r\n    var k = mainland.scale(), x = +_[0], y = +_[1];\r\n\r\n    /*\r\n    var c0 = mainland(mainlandBbox[0]);\r\n   var x0 = (x - c0[0]) / k;\r\n   var y0 = (y - c0[1]) / k;\r\n\r\n   var c1 = mainland(mainlandBbox[1]);\r\n   var x1 = (x - c1[0]) / k;\r\n   var y1 = (y - c1[1]) / k;\r\n\r\n   console.info('Main: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k]])');\r\n\r\n   c0 = hokkaido.translate([x - 0.0425 * k, y - 0.005 * k])(hokkaidoBbox[0]);\r\n   x0 = (x - c0[0]) / k;\r\n   y0 = (y - c0[1]) / k;\r\n\r\n   c1 = hokkaido.translate([x - 0.0425 * k, y - 0.005 * k])(hokkaidoBbox[1]);\r\n   x1 = (x - c1[0]) / k;\r\n   y1 = (y - c1[1]) / k;\r\n\r\n   console.info('hokkaido: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n   console.info('.clipExtent([[x '+\r\n    (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n    ' * k + epsilon, y '+\r\n    (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n    ' * k + epsilon],[x '+\r\n    (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n    ' * k - epsilon, y '+\r\n    (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n    ' * k - epsilon]])');\r\n\r\n    c0 = okinawa.translate([x - 0 * k, y + 0 * k])(okinawaBbox[0]);\r\n    x0 = (x - c0[0]) / k;\r\n    y0 = (y - c0[1]) / k;\r\n\r\n    c1 = okinawa.translate([x - 0 * k, y + 0 * k])(okinawaBbox[1]);\r\n    x1 = (x - c1[0]) / k;\r\n    y1 = (y - c1[1]) / k;\r\n\r\n    console.info('okinawa: p0: ' + x0 + ', ' + y0 + ' , p1: ' + x1 + ' - ' + y1);\r\n    console.info('.clipExtent([[x '+\r\n     (x0<0?'+ ':'- ') + Math.abs(x0.toFixed(4))+\r\n     ' * k + epsilon, y '+\r\n     (y0<0?'+ ':'- ') + Math.abs(y0.toFixed(4))+\r\n     ' * k + epsilon],[x '+\r\n     (x1<0?'+ ':'- ') + Math.abs(x1.toFixed(4))+\r\n     ' * k - epsilon, y '+\r\n     (y1<0?'+ ':'- ') + Math.abs(y1.toFixed(4))+\r\n     ' * k - epsilon]])');\r\n     */\r\n\r\n    mainlandPoint = mainland\r\n        .translate(_)\r\n        .clipExtent([[x - 0.1352 * k, y - 0.1091 * k],[x + 0.117 * k, y + 0.098 * k]])\r\n        .stream(pointStream);\r\n\r\n\r\n    hokkaidoPoint = hokkaido\r\n        .translate([x - 0.0425 * k, y - 0.005 * k])\r\n        .clipExtent([[x - 0.135 * k + epsilon, y - 0.1093 * k + epsilon],[x - 0.0397 * k - epsilon, y - 0.027 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    okinawaPoint = okinawa\r\n        .translate(_)\r\n        .clipExtent([[x - 0.0399 * k + epsilon, y + 0.0471 * k + epsilon],[x + 0.051 * k - epsilon, y + 0.1114 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicEquidistantJapan.fitExtent = function(extent, object) {\r\n    return fitExtent(conicEquidistantJapan, extent, object);\r\n  };\r\n\r\n  conicEquidistantJapan.fitSize = function(size, object) {\r\n    return fitSize(conicEquidistantJapan, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return conicEquidistantJapan;\r\n  }\r\n\r\n  conicEquidistantJapan.drawCompositionBorders = function(context) {\r\n    /*\r\n    console.info(\"CLIP EXTENT hokkaido: \", hokkaido.clipExtent());\r\n    console.info(\"UL BBOX:\", mainland.invert([hokkaido.clipExtent()[0][0], hokkaido.clipExtent()[0][1]]));\r\n    console.info(\"UR BBOX:\", mainland.invert([hokkaido.clipExtent()[1][0], hokkaido.clipExtent()[0][1]]));\r\n    console.info(\"LD BBOX:\", mainland.invert([hokkaido.clipExtent()[1][0], hokkaido.clipExtent()[1][1]]));\r\n    console.info(\"LL BBOX:\", mainland.invert([hokkaido.clipExtent()[0][0], hokkaido.clipExtent()[1][1]]));\r\n    */\r\n\r\n    var ulhokkaido = mainland([ 126.01320483689143, 41.621090310215585 ]);\r\n    var urhokkaido = mainland([ 133.04304387025903, 42.15087523707186 ]);\r\n    var ldhokkaido = mainland([ 133.3021766080688, 37.43975444725098 ]);\r\n    var llhokkaido = mainland([ 126.87889168628224, 36.95488945159779 ]);\r\n\r\n    var llokinawa = mainland([132.9, 29.8]);\r\n    var lmokinawa = mainland([134, 33]);\r\n    var lrokinawa = mainland([139.3, 33.2]);\r\n    var llrokinawa = mainland([139.16, 30.5]);\r\n\r\n\r\n    context.moveTo(ulhokkaido[0], ulhokkaido[1]);\r\n    context.lineTo(urhokkaido[0], urhokkaido[1]);\r\n    context.lineTo(ldhokkaido[0], ldhokkaido[1]);\r\n    context.lineTo(llhokkaido[0], llhokkaido[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(llokinawa[0], llokinawa[1]);\r\n    context.lineTo(lmokinawa[0], lmokinawa[1]);\r\n    context.lineTo(lrokinawa[0], lrokinawa[1]);\r\n    context.lineTo(llrokinawa[0], llrokinawa[1]);\r\n\r\n  };\r\n  conicEquidistantJapan.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return conicEquidistantJapan.scale(2200);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoConicConformal as conicConformal} from \"d3-geo\";\r\nimport {geoMercator as mercator} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for France, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      europe = conicConformal().rotate([-3, -46.2]).parallels([0, 60]), europePoint,\r\n      guyane = mercator().center([-53.2, 3.9]), guyanePoint,\r\n      martinique = mercator().center([-61.03, 14.67]), martiniquePoint,\r\n      guadeloupe = mercator().center([-61.46, 16.14]), guadeloupePoint,\r\n      saintBarthelemy = mercator().center([-62.85, 17.92]), saintBarthelemyPoint,\r\n      stPierreMiquelon = mercator().center([-56.23, 46.93]), stPierreMiquelonPoint,\r\n      mayotte = mercator().center([45.16, -12.8]), mayottePoint,\r\n      reunion = mercator().center([55.52, -21.13]), reunionPoint,\r\n      nouvelleCaledonie = mercator().center([165.8, -21.07]), nouvelleCaledoniePoint,\r\n      wallisFutuna = mercator().center([-178.1, -14.3]), wallisFutunaPoint,\r\n      polynesie = mercator().center([-150.55, -17.11]), polynesiePoint,\r\n      polynesie2 = mercator().center([-150.55, -17.11]), polynesie2Point,\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n      /*\r\n      var europeBbox = [[-6.5, 51], [10, 41]];\r\n      var guyaneBbox = [[-54.5, 6.29], [-50.9, 1.48]];\r\n      */\r\n\r\n\r\n  function conicConformalFrance(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (europePoint.point(x, y), point) ||\r\n        (guyanePoint.point(x, y), point) ||\r\n        (martiniquePoint.point(x, y), point) ||\r\n        (guadeloupePoint.point(x, y), point) ||\r\n        (saintBarthelemyPoint.point(x, y), point) ||\r\n        (stPierreMiquelonPoint.point(x, y), point) ||\r\n        (mayottePoint.point(x, y), point) ||\r\n        (reunionPoint.point(x, y), point) ||\r\n        (nouvelleCaledoniePoint.point(x, y), point) ||\r\n        (wallisFutunaPoint.point(x, y), point) ||\r\n        (polynesiePoint.point(x, y), point) ||\r\n        (polynesie2Point.point(x, y), point);\r\n  }\r\n\r\n  conicConformalFrance.invert = function(coordinates) {\r\n    var k = europe.scale(),\r\n        t = europe.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n\r\n        return (y >= 0.029 && y< 0.0864 && x >= -0.14 && x < -0.0996 ? guyane\r\n            : y >= 0 && y< 0.029 && x >= -0.14 && x < -0.0996 ? martinique\r\n            : y >= -0.032 && y< 0 && x >= -0.14 && x < -0.0996 ? guadeloupe\r\n            : y >= -0.052 && y< -0.032 && x >= -0.14 && x < -0.0996 ? saintBarthelemy\r\n            : y >= -0.076 && y< 0.052 && x >= -0.14 && x < -0.0996 ? stPierreMiquelon\r\n            : y >= -0.076 && y< -0.052 && x >= 0.0967 && x < 0.1371 ? mayotte\r\n            : y >= -0.052 && y< -0.02 && x >= 0.0967 && x < 0.1371 ? reunion\r\n            : y >= -0.02 && y< 0.012 && x >= 0.0967 && x < 0.1371 ? nouvelleCaledonie\r\n            : y >= 0.012 && y< 0.033 && x >= 0.0967 && x < 0.1371 ? wallisFutuna\r\n            : y >= 0.033 && y< 0.0864 && x >= 0.0967 && x < 0.1371 ? polynesie\r\n            : europe).invert(coordinates);\r\n  };\r\n\r\n  conicConformalFrance.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([europe.stream(cacheStream = stream), guyane.stream(stream), martinique.stream(stream), guadeloupe.stream(stream), saintBarthelemy.stream(stream), stPierreMiquelon.stream(stream), mayotte.stream(stream), reunion.stream(stream), nouvelleCaledonie.stream(stream), wallisFutuna.stream(stream), polynesie.stream(stream), polynesie2.stream(stream)]);\r\n  };\r\n\r\n  conicConformalFrance.precision = function(_) {\r\n    if (!arguments.length) {return europe.precision();}\r\n    europe.precision(_);\r\n    guyane.precision(_);\r\n    martinique.precision(_);\r\n    guadeloupe.precision(_);\r\n    saintBarthelemy.precision(_);\r\n    stPierreMiquelon.precision(_);\r\n    mayotte.precision(_);\r\n    reunion.precision(_);\r\n    nouvelleCaledonie.precision(_);\r\n    wallisFutuna.precision(_);\r\n    polynesie.precision(_);\r\n    polynesie2.precision(_);\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicConformalFrance.scale = function(_) {\r\n    if (!arguments.length) {return europe.scale();}\r\n    europe.scale(_);\r\n    guyane.scale(_ * 0.6);\r\n    martinique.scale(_ * 1.6);\r\n    guadeloupe.scale(_ * 1.4);\r\n    saintBarthelemy.scale(_ * 5);\r\n    stPierreMiquelon.scale(_ * 1.3);\r\n    mayotte.scale(_ * 1.6);\r\n    reunion.scale(_ * 1.2);\r\n    nouvelleCaledonie.scale(_ * 0.3);\r\n    wallisFutuna.scale(_ * 2.7);\r\n    polynesie.scale(_ * 0.5);\r\n    polynesie2.scale(_ * 0.06);\r\n    return conicConformalFrance.translate(europe.translate());\r\n  };\r\n\r\n  conicConformalFrance.translate = function(_) {\r\n    if (!arguments.length) {return europe.translate();}\r\n    var k = europe.scale(), x = +_[0], y = +_[1];\r\n\r\n    europePoint = europe\r\n        .translate(_)\r\n        .clipExtent([[x - 0.0996 * k, y - 0.0908 * k],[x + 0.0967 * k, y + 0.0864 * k]])\r\n        .stream(pointStream);\r\n\r\n\r\n    guyanePoint = guyane\r\n        .translate([x - 0.12 * k, y + 0.0575 * k])\r\n        .clipExtent([[x - 0.14 * k + epsilon, y + 0.029 * k + epsilon],[x - 0.0996 * k - epsilon, y + 0.0864 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    martiniquePoint = martinique\r\n        .translate([x - 0.12 * k, y + 0.013 * k])\r\n        .clipExtent([[x - 0.14 * k + epsilon, y + 0 * k + epsilon],[x - 0.0996 * k - epsilon, y + 0.029 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    guadeloupePoint = guadeloupe\r\n        .translate([x - 0.12 * k, y -0.014 * k])\r\n        .clipExtent([[x - 0.14 * k + epsilon, y - 0.032 * k + epsilon],[x - 0.0996 * k - epsilon, y + 0 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    saintBarthelemyPoint = saintBarthelemy\r\n        .translate([x - 0.12 * k, y - 0.044 * k])\r\n        .clipExtent([[x - 0.14 * k + epsilon, y - 0.052 * k + epsilon],[x - 0.0996 * k - epsilon, y - 0.032 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    stPierreMiquelonPoint = stPierreMiquelon\r\n        .translate([x - 0.12 * k, y - 0.065 * k])\r\n        .clipExtent([[x - 0.14 * k + epsilon, y - 0.076 * k + epsilon],[x - 0.0996 * k - epsilon, y - 0.052 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    mayottePoint = mayotte\r\n        .translate([x + 0.117 * k, y - 0.064 * k])\r\n        .clipExtent([[x + 0.0967 * k + epsilon, y - 0.076 * k + epsilon],[x + 0.1371 * k - epsilon, y - 0.052 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    reunionPoint = reunion\r\n        .translate([x + 0.116 * k, y - 0.0355 * k])\r\n        .clipExtent([[x + 0.0967 * k + epsilon, y - 0.052 * k + epsilon],[x + 0.1371 * k - epsilon, y - 0.02 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    nouvelleCaledoniePoint = nouvelleCaledonie\r\n        .translate([x + 0.116 * k, y - 0.0048 * k])\r\n        .clipExtent([[x + 0.0967 * k + epsilon, y - 0.02 * k + epsilon],[x + 0.1371 * k - epsilon, y + 0.012 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    wallisFutunaPoint = wallisFutuna\r\n        .translate([x + 0.116 * k, y + 0.022 * k])\r\n        .clipExtent([[x + 0.0967 * k + epsilon, y + 0.012 * k + epsilon],[x + 0.1371 * k - epsilon, y + 0.033 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    polynesie2Point = polynesie2\r\n        .translate([x + 0.11 * k, y + 0.045 * k])\r\n        .clipExtent([[x + 0.0967 * k + epsilon, y + 0.033 * k + epsilon],[x + 0.1371 * k - epsilon, y  + 0.06 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    polynesiePoint = polynesie\r\n        .translate([x + 0.115 * k, y + 0.075 * k])\r\n        .clipExtent([[x + 0.0967 * k + epsilon, y + 0.06 * k + epsilon],[x + 0.1371 * k - epsilon, y  + 0.0864 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicConformalFrance.fitExtent = function(extent, object) {\r\n    return fitExtent(conicConformalFrance, extent, object);\r\n  };\r\n\r\n  conicConformalFrance.fitSize = function(size, object) {\r\n    return fitSize(conicConformalFrance, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return conicConformalFrance;\r\n  }\r\n\r\n  conicConformalFrance.drawCompositionBorders = function(context) {\r\n\r\n    /*\r\n    console.log(\"var ul, ur, ld, ll;\");\r\n    var projs = [guyane, martinique, guadeloupe, saintBarthelemy, stPierreMiquelon, mayotte, reunion, nouvelleCaledonie, wallisFutuna, polynesie, polynesie2];\r\n    for (var i in projs){\r\n      var ul = europe.invert([projs[i].clipExtent()[0][0], projs[i].clipExtent()[0][1]]);\r\n      var ur = europe.invert([projs[i].clipExtent()[1][0], projs[i].clipExtent()[0][1]]);\r\n      var ld = europe.invert([projs[i].clipExtent()[1][0], projs[i].clipExtent()[1][1]]);\r\n      var ll = europe.invert([projs[i].clipExtent()[0][0], projs[i].clipExtent()[1][1]]);\r\n\r\n      console.log(\"ul = europe([\"+ul+\"]);\");\r\n      console.log(\"ur = europe([\"+ur+\"]);\");\r\n      console.log(\"ld = europe([\"+ld+\"]);\");\r\n      console.log(\"ll = europe([\"+ll+\"]);\");\r\n\r\n      console.log(\"context.moveTo(ul[0], ul[1]);\");\r\n      console.log(\"context.lineTo(ur[0], ur[1]);\");\r\n      console.log(\"context.lineTo(ld[0], ld[1]);\");\r\n      console.log(\"context.lineTo(ll[0], ll[1]);\");\r\n      console.log(\"context.closePath();\");\r\n\r\n    }*/\r\n\r\n    var ul, ur, ld, ll;\r\n    ul = europe([-7.938886725111036,43.7219460918835]);\r\n    ur = europe([-4.832080896458295,44.12930268549372]);\r\n    ld = europe([-4.205299743793263,40.98096346967365]);\r\n    ll = europe([-7.071796453126152,40.610037319181444]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([-8.42751373617692,45.32889452553031]);\r\n    ur = europe([-5.18599305777107,45.7566442062976]);\r\n    ld = europe([-4.832080905154431,44.129302726751426]);\r\n    ll = europe([-7.938886737126192,43.72194613263854]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([-9.012656899657046,47.127733821030176]);\r\n    ur = europe([-5.6105244772793155,47.579777861410626]);\r\n    ld = europe([-5.185993067168585,45.756644248170346]);\r\n    ll = europe([-8.427513749141811,45.32889456686326]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([-9.405747558985553,48.26506375557457]);\r\n    ur = europe([-5.896175018439575,48.733352850851624]);\r\n    ld = europe([-5.610524487556043,47.57977790393761]);\r\n    ll = europe([-9.012656913808351,47.127733862971255]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([-9.908436061346974,49.642448789505856]);\r\n    ur = europe([-6.262026716233124,50.131426841787174]);\r\n    ld = europe([-5.896175029331232,48.73335289377258]);\r\n    ll = europe([-9.40574757396393,48.26506379787767]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([11.996907706504462,50.16039028163579]);\r\n    ur = europe([15.649907879773343,49.68279246765253]);\r\n    ld = europe([15.156712840526632,48.30371557625831]);\r\n    ll = europe([11.64122661754411,48.761078240546816]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([11.641226606955788,48.7610781975889]);\r\n    ur = europe([15.156712825832164,48.30371553390465]);\r\n    ld = europe([14.549932166241172,46.4866532486199]);\r\n    ll = europe([11.204443787952183,46.91899233914248]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([11.204443778297161,46.918992296823646]);\r\n    ur = europe([14.549932152815039,46.486653206856396]);\r\n    ld = europe([13.994409796764009,44.695833444323256]);\r\n    ll = europe([10.805306599253848,45.105133870684924]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([10.805306590412085,45.10513382903308]);\r\n    ur = europe([13.99440978444733,44.695833403183606]);\r\n    ld = europe([13.654633799024392,43.53552468558152]);\r\n    ll = europe([10.561516803980956,43.930671459798624]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n\r\n    ul = europe([10.561516795617383,43.93067141859757]);\r\n    ur = europe([13.654633787361952,43.5355246448671]);\r\n    ld = europe([12.867691604239901,40.640701985019405]);\r\n    ll = europe([9.997809515987688,41.00288343254471]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n\r\n    ul = europe([10.8,42.4]);\r\n    ur = europe([12.8,42.13]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n\r\n  };\r\n  conicConformalFrance.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return conicConformalFrance.scale(2700);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoConicConformal as conicConformal} from \"d3-geo\";\r\nimport {geoMercator as mercator} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Portugal, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      europe = conicConformal().rotate([-10, -53]).parallels([0, 60]), europePoint,\r\n      guadeloupe = mercator().center([-61.46, 16.14]), guadeloupePoint,\r\n      guyane = mercator().center([-53.2, 3.9]), guyanePoint,\r\n      azores = conicConformal().rotate([27.8, -38.9]).parallels([0, 60]), azoresPoint,\r\n      azores2 = conicConformal().rotate([25.43, -37.398]).parallels([0, 60]), azores2Point,\r\n      azores3 = conicConformal().rotate([31.17, -39.539]).parallels([0, 60]), azores3Point,\r\n      madeira = conicConformal().rotate([17, -32.7]).parallels([0, 60]), madeiraPoint,\r\n      canaryIslands = conicConformal().rotate([16, -28.5]).parallels([0,60]), canaryIslandsPoint,\r\n      martinique = mercator().center([-61.03, 14.67]), martiniquePoint,\r\n      mayotte = mercator().center([45.16, -12.8]), mayottePoint,\r\n      reunion = mercator().center([55.52, -21.13]), reunionPoint,\r\n      malta = conicConformal().rotate([-14.4, -35.95]).parallels([0, 60]), maltaPoint,\r\n\r\n\r\n\r\n\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n      /*\r\n      var europeBbox = [[-6.5, 51], [10, 41]];\r\n      var guyaneBbox = [[-54.5, 6.29], [-50.9, 1.48]];\r\n      */\r\n\r\n\r\n  function conicConformalEurope(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (europePoint.point(x, y), point) ||\r\n        (guyanePoint.point(x, y), point) ||\r\n        (martiniquePoint.point(x, y), point) ||\r\n        (guadeloupePoint.point(x, y), point) ||\r\n        (canaryIslandsPoint.point(x, y), point) ||\r\n        (madeiraPoint.point(x, y), point) ||\r\n        (mayottePoint.point(x, y), point) ||\r\n        (reunionPoint.point(x, y), point) ||\r\n        (maltaPoint.point(x, y), point) ||\r\n        (azoresPoint.point(x, y), point) ||\r\n        (azores2Point.point(x, y), point) ||\r\n        (azores3Point.point(x, y), point);\r\n  }\r\n\r\n  conicConformalEurope.invert = function(coordinates) {\r\n    var k = europe.scale(),\r\n        t = europe.translate(),\r\n        x = (coordinates[0] - (t[0] + 0.08 * k)) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n\r\n        return (y >= -0.31 && y< -0.24 && x >= 0.14 && x < 0.24 ? guadeloupe\r\n            : y >= -0.24 && y< -0.17 && x >= 0.14 && x < 0.24 ? guyane\r\n            : y >= -0.17 && y< -0.12 && x >= 0.21 && x < 0.24 ? azores2\r\n            : y >= -0.17 && y< -0.14 && x >= 0.14 && x < 0.165 ? azores3\r\n            : y >= -0.17 && y< -0.1 && x >= 0.14 && x < 0.24 ? azores\r\n            : y >= -0.1 && y< -0.03 && x >= 0.14 && x < 0.24 ? madeira\r\n            : y >= -0.03 && y< 0.04 && x >= 0.14 && x < 0.24 ? canaryIslands\r\n            : y >= -0.31 && y< -0.24 && x >= 0.24 && x < 0.34 ? martinique\r\n            : y >= -0.24 && y< -0.17 && x >= 0.24 && x < 0.34 ? mayotte\r\n            : y >= -0.17 && y< -0.1 && x >= 0.24 && x < 0.34 ? reunion\r\n            : y >= -0.1 && y< -0.03 && x >= 0.24 && x < 0.34 ? malta\r\n            : europe).invert(coordinates);\r\n\r\n  };\r\n\r\n  conicConformalEurope.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([europe.stream(cacheStream = stream), guyane.stream(stream), martinique.stream(stream), guadeloupe.stream(stream), canaryIslands.stream(stream), madeira.stream(stream), mayotte.stream(stream), reunion.stream(stream), malta.stream(stream), azores.stream(stream), azores2.stream(stream), azores3.stream(stream)]);\r\n  };\r\n\r\n  conicConformalEurope.precision = function(_) {\r\n    if (!arguments.length) {return europe.precision();}\r\n    europe.precision(_);\r\n    guyane.precision(_);\r\n    martinique.precision(_);\r\n    guadeloupe.precision(_);\r\n    canaryIslands.precision(_);\r\n    madeira.precision(_);\r\n    mayotte.precision(_);\r\n    reunion.precision(_);\r\n    malta.precision(_);\r\n\r\n    azores.precision(_);\r\n    azores2.precision(_);\r\n    azores3.precision(_);\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicConformalEurope.scale = function(_) {\r\n    if (!arguments.length) {return europe.scale();}\r\n    europe.scale(_);\r\n    guadeloupe.scale(_ * 3);\r\n    guyane.scale(_ * 0.8);\r\n    martinique.scale(_ * 3.5);\r\n    reunion.scale(_ * 2.7);\r\n    azores.scale(_ * 2);\r\n    azores2.scale(_ * 2);\r\n    azores3.scale(_ * 2);\r\n    madeira.scale(_ * 3);\r\n    canaryIslands.scale(_);\r\n\r\n    mayotte.scale(_ * 5.5);\r\n    malta.scale(_ * 6);\r\n\r\n\r\n\r\n    return conicConformalEurope.translate(europe.translate());\r\n  };\r\n\r\n  conicConformalEurope.translate = function(_) {\r\n    if (!arguments.length) {return europe.translate();}\r\n    var k = europe.scale(), x = +_[0], y = +_[1];\r\n\r\n    europePoint = europe\r\n        .translate([x - 0.08 * k, y])\r\n        .clipExtent([[x - 0.51 * k, y - 0.33 * k],[x + 0.5 * k, y + 0.33 * k]])\r\n        .stream(pointStream);\r\n\r\n    guadeloupePoint = guadeloupe\r\n        .translate([x + 0.19 * k, y - 0.275 * k])\r\n        .clipExtent([[x + 0.14 * k + epsilon, y - 0.31 * k + epsilon],[x + 0.24 * k - epsilon, y - 0.24 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    guyanePoint = guyane\r\n        .translate([x + 0.19 * k, y - 0.205 * k])\r\n        .clipExtent([[x + 0.14 * k + epsilon, y - 0.24 * k + epsilon],[x + 0.24 * k - epsilon, y - 0.17 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    azoresPoint = azores\r\n        .translate([x + 0.19 * k, y - 0.135 * k])\r\n        .clipExtent([[x + 0.14 * k + epsilon, y - 0.17 * k + epsilon],[x + 0.24 * k - epsilon, y - 0.1 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    azores2Point = azores2\r\n        .translate([x + 0.225 * k, y - 0.147 * k])\r\n        .clipExtent([[x + 0.21 * k + epsilon, y - 0.17 * k + epsilon],[x + 0.24 * k - epsilon, y - 0.12 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    azores3Point = azores3\r\n        .translate([x + 0.153 * k, y - 0.15 * k])\r\n        .clipExtent([[x + 0.14 * k + epsilon, y - 0.17 * k + epsilon],[x + 0.165 * k - epsilon, y - 0.14 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    madeiraPoint = madeira\r\n        .translate([x + 0.19 * k, y - 0.065 * k])\r\n        .clipExtent([[x + 0.14 * k + epsilon, y - 0.1 * k + epsilon],[x + 0.24 * k - epsilon, y - 0.03 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    canaryIslandsPoint = canaryIslands\r\n        .translate([x + 0.19 * k, y + 0.005 * k])\r\n        .clipExtent([[x + 0.14 * k + epsilon, y - 0.03 * k + epsilon],[x + 0.24 * k - epsilon, y + 0.04 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    martiniquePoint = martinique\r\n        .translate([x + 0.29 * k, y - 0.275 * k])\r\n        .clipExtent([[x + 0.24 * k + epsilon, y - 0.31 * k + epsilon],[x + 0.34 * k - epsilon, y - 0.24 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    mayottePoint = mayotte\r\n        .translate([x + 0.29 * k, y - 0.205 * k])\r\n        .clipExtent([[x + 0.24 * k + epsilon, y - 0.24 * k + epsilon],[x + 0.34 * k - epsilon, y - 0.17 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    reunionPoint = reunion\r\n        .translate([x + 0.29 * k, y - 0.135 * k])\r\n        .clipExtent([[x + 0.24 * k + epsilon, y - 0.17 * k + epsilon],[x + 0.34 * k - epsilon, y - 0.1 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    maltaPoint = malta\r\n        .translate([x + 0.29 * k, y - 0.065 * k])\r\n        .clipExtent([[x + 0.24 * k + epsilon, y - 0.1 * k + epsilon],[x + 0.34 * k - epsilon, y - 0.03 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicConformalEurope.fitExtent = function(extent, object) {\r\n    return fitExtent(conicConformalEurope, extent, object);\r\n  };\r\n\r\n  conicConformalEurope.fitSize = function(size, object) {\r\n    return fitSize(conicConformalEurope, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return conicConformalEurope;\r\n  }\r\n\r\n  conicConformalEurope.drawCompositionBorders = function(context) {\r\n\r\n    /*\r\n    console.log(\"var ul, ur, ld, ll;\");\r\n    var projs = [guyane, martinique, guadeloupe, canaryIslands, madeira, mayotte, reunion, malta, azores, azores2, azores3];\r\n    for (var i in projs){\r\n      var ul = europe.invert([projs[i].clipExtent()[0][0], projs[i].clipExtent()[0][1]]);\r\n      var ur = europe.invert([projs[i].clipExtent()[1][0], projs[i].clipExtent()[0][1]]);\r\n      var ld = europe.invert([projs[i].clipExtent()[1][0], projs[i].clipExtent()[1][1]]);\r\n      var ll = europe.invert([projs[i].clipExtent()[0][0], projs[i].clipExtent()[1][1]]);\r\n\r\n      console.log(\"ul = europe([\"+ul+\"]);\");\r\n      console.log(\"ur = europe([\"+ur+\"]);\");\r\n      console.log(\"ld = europe([\"+ld+\"]);\");\r\n      console.log(\"ll = europe([\"+ll+\"]);\");\r\n\r\n      console.log(\"context.moveTo(ul[0], ul[1]);\");\r\n      console.log(\"context.lineTo(ur[0], ur[1]);\");\r\n      console.log(\"context.lineTo(ld[0], ld[1]);\");\r\n      console.log(\"context.lineTo(ll[0], ll[1]);\");\r\n      console.log(\"context.closePath();\");\r\n\r\n    }*/\r\n\r\n    var ul, ur, ld, ll;\r\n    ul = europe([42.45755610828648,63.343658547914934]);\r\n    ur = europe([52.65837266667029,59.35045080290929]);\r\n    ld = europe([47.19754502247785,56.12653496548117]);\r\n    ll = europe([37.673034273363044,59.61638268506111]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([59.41110754003403,62.35069727399336]);\r\n    ur = europe([66.75050228640794,57.11797303636038]);\r\n    ld = europe([60.236065725110436,54.63331433818992]);\r\n    ll = europe([52.65837313153311,59.350450804599355]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([48.81091130080243,66.93353402634641]);\r\n    ur = europe([59.41110730654679,62.35069740653086]);\r\n    ld = europe([52.6583728974441,59.3504509222445]);\r\n    ll = europe([42.45755631675751,63.34365868805821]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([31.054198418446475,52.1080673766184]);\r\n    ur = europe([39.09869284884117,49.400700047190554]);\r\n    ld = europe([36.0580811499175,46.02944174908498]);\r\n    ll = europe([28.690508588835726,48.433126979386415]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([33.977877745912025,55.849945501331]);\r\n    ur = europe([42.75328432167726,52.78455122462353]);\r\n    ld = europe([39.09869297540224,49.400700176148625]);\r\n    ll = europe([31.05419851807008,52.10806751810923]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([52.658372900759296,59.35045068526415]);\r\n    ur = europe([60.23606549583304,54.63331423800264]);\r\n    ld = europe([54.6756370953122,51.892298789399455]);\r\n    ll = europe([47.19754524788189,56.126534861222794]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([47.19754506082455,56.126534735591456]);\r\n    ur = europe([54.675636900123514,51.892298681337095]);\r\n    ld = europe([49.94448648951486,48.98775484983285]);\r\n    ll = europe([42.75328468716108,52.78455126060818]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([42.75328453416769,52.78455113209101]);\r\n    ur = europe([49.94448632339758,48.98775473706457]);\r\n    ld = europe([45.912339990394315,45.99361784987003]);\r\n    ll = europe([39.09869317356607,49.40070009378711]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([37.673034114296634,59.61638254183119]);\r\n    ur = europe([47.197544835420544,56.126534839849846]);\r\n    ld = europe([42.75328447467064,52.78455135314068]);\r\n    ll = europe([33.977877870363905,55.849945644671145]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([44.56748486446032,57.26489367845818]);\r\n    ld = europe([43.9335791193588,53.746540942601726]);\r\n    ll = europe([43,56]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = europe([37.673034114296634,59.61638254183119]);\r\n    ur = europe([40.25902691953466,58.83002044222639]);\r\n    ld = europe([38.458270492742024,57.26232178028002]);\r\n    ll = europe([35.97754948030156,58.00266637992386]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n\r\n\r\n\r\n  };\r\n  conicConformalEurope.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return conicConformalEurope.scale(750);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoConicConformal as conicConformal, geoMercator as mercator} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function (x, y) {\r\n      var i = -1;\r\n      while (++i < n) {\r\n        streams[i].point(x, y);\r\n      }\r\n    },\r\n    sphere: function () {\r\n      var i = -1;\r\n      while (++i < n) {\r\n        streams[i].sphere();\r\n      }\r\n    },\r\n    lineStart: function () {\r\n      var i = -1;\r\n      while (++i < n) {\r\n        streams[i].lineStart();\r\n      }\r\n    },\r\n    lineEnd: function () {\r\n      var i = -1;\r\n      while (++i < n) {\r\n        streams[i].lineEnd();\r\n      }\r\n    },\r\n    polygonStart: function () {\r\n      var i = -1;\r\n      while (++i < n) {\r\n        streams[i].polygonStart();\r\n      }\r\n    },\r\n    polygonEnd: function () {\r\n      var i = -1;\r\n      while (++i < n) {\r\n        streams[i].polygonEnd();\r\n      }\r\n    },\r\n  };\r\n}\r\n\r\n// A composite projection for the Netherlands, configured by default for 960\u00D7500.\r\nexport default function () {\r\n  var cache,\r\n    cacheStream,\r\n    netherlandsMainland = conicConformal().rotate([-5.50, -52.20]).parallels([0, 60]),\r\n    netherlandsMainlandPoint,\r\n    bonaire = mercator().center([-68.25, 12.20]),\r\n    bonairePoint,\r\n    sabaSintEustatius = mercator().center([-63.10, 17.50]),\r\n    sabaSintEustatiusPoint,\r\n    point,\r\n    pointStream = {\r\n      point: function (x, y) {\r\n        point = [x, y];\r\n      },\r\n    };\r\n\r\n  function conicConformalNetherlands(coordinates) {\r\n    const [x, y] = coordinates;\r\n    \r\n    return (\r\n      (point = null),\r\n      (netherlandsMainlandPoint.point(x, y), point) ||\r\n        (bonairePoint.point(x, y), point) ||\r\n        (sabaSintEustatiusPoint.point(x, y), point)\r\n    );\r\n  }\r\n\r\n  conicConformalNetherlands.invert = function (coordinates) {\r\n    var k = netherlandsMainland.scale(),\r\n      t = netherlandsMainland.translate(),\r\n      x = (coordinates[0] - t[0]) / k,\r\n      y = (coordinates[1] - t[1]) / k;\r\n\r\n    return (y >= -0.0067 && y < 0.0015 && x >= -0.0232  && x < -0.0154\r\n      ? bonaire\r\n      : y >= -0.022 && y < -0.014 && x >= -0.023 && x < -0.014\r\n      ? sabaSintEustatius\r\n      : netherlandsMainland\r\n    ).invert(coordinates);\r\n  };\r\n\r\n  conicConformalNetherlands.stream = function (stream) {\r\n    return cache && cacheStream === stream\r\n      ? cache\r\n      : (cache = multiplex([\r\n          netherlandsMainland.stream((cacheStream = stream)),\r\n          bonaire.stream(stream),\r\n          sabaSintEustatius.stream(stream),\r\n        ]));\r\n  };\r\n\r\n  conicConformalNetherlands.precision = function (_) {\r\n    if (!arguments.length) return netherlandsMainland.precision();\r\n\r\n    netherlandsMainland.precision(_);\r\n    bonaire.precision(_);\r\n    sabaSintEustatius.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  conicConformalNetherlands.scale = function (_) {\r\n    if (!arguments.length) return netherlandsMainland.scale();\r\n\r\n    netherlandsMainland.scale(_);\r\n    bonaire.scale(_);\r\n    sabaSintEustatius.scale(_);\r\n    return conicConformalNetherlands.translate(netherlandsMainland.translate());\r\n  };\r\n\r\n  conicConformalNetherlands.translate = function (_) {\r\n    if (!arguments.length) return netherlandsMainland.translate();\r\n\r\n    const k = netherlandsMainland.scale(),\r\n      x = +_[0],\r\n      y = +_[1];\r\n\r\n    netherlandsMainlandPoint = netherlandsMainland\r\n      .translate(_)\r\n      .clipExtent([\r\n        [x - 0.0245 * k, y - 0.0260 * k],\r\n        [x + 0.0230 * k, y + 0.0260 * k],\r\n      ])\r\n      .stream(pointStream);\r\n\r\n    bonairePoint = bonaire\r\n      .translate([x - 0.0186 * k, y - 0.00325 * k])\r\n      .clipExtent([\r\n        [x - 0.0232 * k + epsilon, y - 0.0067 * k + epsilon],\r\n        [x - 0.0154 * k - epsilon, y + 0.0015 * k - epsilon],\r\n      ])\r\n      .stream(pointStream);\r\n\r\n    sabaSintEustatiusPoint = sabaSintEustatius\r\n      .translate([x - 0.0185 * k, y - 0.017 * k])\r\n      .clipExtent([\r\n        [x - 0.023 * k + epsilon, y - 0.022 * k + epsilon],\r\n        [x - 0.014 * k - epsilon, y - 0.014 * k - epsilon],\r\n      ])\r\n      .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  conicConformalNetherlands.fitExtent = function (extent, object) {\r\n    return fitExtent(conicConformalNetherlands, extent, object);\r\n  };\r\n\r\n  conicConformalNetherlands.fitSize = function (size, object) {\r\n    return fitSize(conicConformalNetherlands, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return conicConformalNetherlands;\r\n  }\r\n\r\n  conicConformalNetherlands.drawCompositionBorders = function (context) {\r\n\r\n    /* \r\n    console.table({\r\n      \"Clip extent\": [\"Bonaire\", bonaire.clipExtent()],\r\n      \"UL BBOX:\": netherlandsMainland.invert([bonaire.clipExtent()[0][0], bonaire.clipExtent()[0][1]]),\r\n      \"UR BBOX:\": netherlandsMainland.invert([bonaire.clipExtent()[1][0], bonaire.clipExtent()[0][1]]),\r\n      \"LD BBOX:\": netherlandsMainland.invert([bonaire.clipExtent()[1][0], bonaire.clipExtent()[1][1]]),\r\n      \"LL BBOX:\": netherlandsMainland.invert([bonaire.clipExtent()[0][0], bonaire.clipExtent()[1][1]])\r\n    });\r\n    \r\n    console.table({\r\n      \"Clip extent\": [\"Saba & Sint Eustatius\", sabaSintEustatius.clipExtent()],\r\n      \"UL BBOX:\": netherlandsMainland.invert([sabaSintEustatius.clipExtent()[0][0], sabaSintEustatius.clipExtent()[0][1]]),\r\n      \"UR BBOX:\": netherlandsMainland.invert([sabaSintEustatius.clipExtent()[1][0], sabaSintEustatius.clipExtent()[0][1]]),\r\n      \"LD BBOX:\": netherlandsMainland.invert([sabaSintEustatius.clipExtent()[1][0], sabaSintEustatius.clipExtent()[1][1]]),\r\n      \"LL BBOX:\": netherlandsMainland.invert([sabaSintEustatius.clipExtent()[0][0], sabaSintEustatius.clipExtent()[1][1]])\r\n    }); \r\n    */\r\n    \r\n    var ulbonaire = netherlandsMainland([3.30573, 52.5562]);\r\n    var urbonaire = netherlandsMainland([4.0430, 52.5720]);\r\n    var ldbonaire = netherlandsMainland([4.0646, 52.1017]);\r\n    var llbonaire = netherlandsMainland([3.3382, 52.0861]);\r\n\r\n    var ulsabaSintEustatius = netherlandsMainland([3.2620, 53.4390]);\r\n    var ursabaSintEustatius = netherlandsMainland([4.1373, 53.4571]);\r\n    var ldsabaSintEustatius = netherlandsMainland([4.1574, 52.9946]);\r\n    var llsabaSintEustatius = netherlandsMainland([3.2951, 52.9768]);\r\n\r\n    context.moveTo(ulbonaire[0], ulbonaire[1]);\r\n    context.lineTo(urbonaire[0], urbonaire[1]);\r\n    context.lineTo(ldbonaire[0], ldbonaire[1]);\r\n    context.lineTo(ldbonaire[0], ldbonaire[1]);\r\n    context.lineTo(llbonaire[0], llbonaire[1]);\r\n    context.closePath();\r\n\r\n    context.moveTo(ulsabaSintEustatius[0], ulsabaSintEustatius[1]);\r\n    context.lineTo(ursabaSintEustatius[0], ursabaSintEustatius[1]);\r\n    context.lineTo(ldsabaSintEustatius[0], ldsabaSintEustatius[1]);\r\n    context.lineTo(ldsabaSintEustatius[0], ldsabaSintEustatius[1]);\r\n    context.lineTo(llsabaSintEustatius[0], llsabaSintEustatius[1]);\r\n    context.closePath();\r\n  };\r\n  conicConformalNetherlands.getCompositionBorders = function () {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return conicConformalNetherlands.scale(4200);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoMercator as mercator} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Malaysia, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n\r\n      peninsular = mercator().center([105.25, 4.00]), peninsularPoint,\r\n      borneo = mercator().center([118.65,2.86]), borneoPoint,\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n\r\n  function mercatorMalaysia(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (peninsularPoint.point(x, y), point) ||\r\n        (borneoPoint.point(x, y), point);\r\n  }\r\n\r\n  mercatorMalaysia.invert = function(coordinates) {\r\n    var k = peninsular.scale(),\r\n        t = peninsular.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n\r\n        return (y >=  -0.0521 && y < 0.0229 && x >= -0.0111 && x < 0.1000 ? borneo\r\n            : peninsular).invert(coordinates);\r\n  };\r\n\r\n  mercatorMalaysia.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([peninsular.stream(cacheStream = stream), borneo.stream(stream)]);\r\n  };\r\n\r\n  mercatorMalaysia.precision = function(_) {\r\n    if (!arguments.length) {return peninsular.precision();}\r\n    peninsular.precision(_);\r\n    borneo.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  mercatorMalaysia.scale = function(_) {\r\n    if (!arguments.length) {return peninsular.scale();}\r\n    peninsular.scale(_);\r\n    borneo.scale(_ * 0.615);\r\n    return mercatorMalaysia.translate(peninsular.translate());\r\n  };\r\n\r\n  mercatorMalaysia.translate = function(_) {\r\n    if (!arguments.length) {return peninsular.translate();}\r\n    var k = peninsular.scale(), x = +_[0], y = +_[1];\r\n\r\n    peninsularPoint = peninsular\r\n        .translate(_)\r\n        .clipExtent([[x - 0.1100 * k, y - 0.0521 * k],[x - 0.0111 * k, y + 0.0521 * k]])\r\n        .stream(pointStream);\r\n\r\n    borneoPoint = borneo\r\n        .translate([x + 0.09000 * k, y - 0.00 * k])\r\n        .clipExtent([[x - 0.0111 * k + epsilon, y -0.0521 * k + epsilon],[x + 0.1000 * k - epsilon, y + 0.024 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  mercatorMalaysia.fitExtent = function(extent, object) {\r\n    return fitExtent(mercatorMalaysia, extent, object);\r\n  };\r\n\r\n  mercatorMalaysia.fitSize = function(size, object) {\r\n    return fitSize(mercatorMalaysia, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return mercatorMalaysia;\r\n  }\r\n\r\n  mercatorMalaysia.drawCompositionBorders = function(context) {\r\n  \r\n    var llbor = peninsular([106.3214, 2.0228]);\r\n\t\tvar lmbor = peninsular([105.1843, 2.3761]);\r\n\t\tvar lrbor = peninsular([104.2151, 3.3618]);\r\n\t\tvar llrbor = peninsular([104.2150, 4.5651]);\r\n\r\n    context.moveTo(llbor[0], llbor[1]);\r\n    context.lineTo(lmbor[0], lmbor[1]);\r\n    context.lineTo(lrbor[0], lrbor[1]);\r\n    context.lineTo(llrbor[0], llrbor[1]);\r\n\r\n  };\r\n  mercatorMalaysia.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return mercatorMalaysia.scale(4800);\r\n}\r\n", "import {epsilon} from \"./math\";\r\nimport {geoMercator as mercator} from \"d3-geo\";\r\nimport {fitExtent, fitSize} from \"./fit\";\r\nimport {path} from \"d3-path\";\r\n\r\n\r\n// The projections must have mutually exclusive clip regions on the sphere,\r\n// as this will avoid emitting interleaving lines and polygons.\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) { var i = -1; while (++i < n) {streams[i].point(x, y); }},\r\n    sphere: function() { var i = -1; while (++i < n) {streams[i].sphere(); }},\r\n    lineStart: function() { var i = -1; while (++i < n) {streams[i].lineStart(); }},\r\n    lineEnd: function() { var i = -1; while (++i < n) {streams[i].lineEnd(); }},\r\n    polygonStart: function() { var i = -1; while (++i < n) {streams[i].polygonStart(); }},\r\n    polygonEnd: function() { var i = -1; while (++i < n) {streams[i].polygonEnd(); }}\r\n  };\r\n}\r\n\r\n// A composite projection for Equatorial Guinea, configured by default for 960\u00D7500.\r\nexport default function() {\r\n  var cache,\r\n      cacheStream,\r\n      continent = mercator().rotate([-9.5, -1.5]), continentPoint,\r\n      bioko = mercator().rotate([-8.6, -3.5]), biokoPoint,\r\n      annobon = mercator().rotate([-5.6, 1.45]), annobonPoint,\r\n\r\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\r\n\r\n  function mercatorEquatorialGuinea(coordinates) {\r\n    var x = coordinates[0], y = coordinates[1];\r\n    return point = null,\r\n        (continentPoint.point(x, y), point) ||\r\n        (biokoPoint.point(x, y), point) ||\r\n        (annobonPoint.point(x, y), point);\r\n  }\r\n\r\n  mercatorEquatorialGuinea.invert = function(coordinates) {\r\n    var k = continent.scale(),\r\n        t = continent.translate(),\r\n        x = (coordinates[0] - t[0]) / k,\r\n        y = (coordinates[1] - t[1]) / k;\r\n        return (y >= -0.02 && y< 0 && x >= -0.038 && x < -0.005 ? bioko\r\n            : y >= 0 && y< 0.02 && x >= -0.038 && x < -0.005 ? annobon\r\n            : continent).invert(coordinates);\r\n  };\r\n\r\n  mercatorEquatorialGuinea.stream = function(stream) {\r\n    return cache && cacheStream === stream ? cache : cache = multiplex([continent.stream(cacheStream = stream), bioko.stream(stream), annobon.stream(stream)]);\r\n  };\r\n\r\n  mercatorEquatorialGuinea.precision = function(_) {\r\n    if (!arguments.length) {return continent.precision();}\r\n    continent.precision(_);\r\n    bioko.precision(_);\r\n    annobon.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  mercatorEquatorialGuinea.scale = function(_) {\r\n    if (!arguments.length) {return continent.scale();}\r\n    continent.scale(_);\r\n    bioko.scale(_* 1.5);\r\n    annobon.scale(_* 4);\r\n    return mercatorEquatorialGuinea.translate(continent.translate());\r\n  };\r\n\r\n  mercatorEquatorialGuinea.translate = function(_) {\r\n    if (!arguments.length) {return continent.translate();}\r\n    var k = continent.scale(), x = +_[0], y = +_[1];\r\n    continentPoint = continent\r\n        .translate(_)\r\n        .clipExtent([[x - 0.005 * k, y - 0.02 * k],[x + 0.038 * k, y +0.02 * k]])\r\n        .stream(pointStream);\r\n\r\n    biokoPoint = bioko\r\n        .translate([x - 0.025 * k, y - 0.01 * k])\r\n        .clipExtent([[x - 0.038 * k + epsilon, y - 0.02 * k + epsilon],[x - 0.005 * k - epsilon, y + 0 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n    annobonPoint = annobon\r\n        .translate([x - 0.025 * k, y + 0.01 * k])\r\n        .clipExtent([[x - 0.038 * k + epsilon, y - 0 * k + epsilon],[x - 0.005 * k - epsilon, y + 0.02 * k - epsilon]])\r\n        .stream(pointStream);\r\n\r\n\r\n    return reset();\r\n  };\r\n\r\n  mercatorEquatorialGuinea.fitExtent = function(extent, object) {\r\n    return fitExtent(mercatorEquatorialGuinea, extent, object);\r\n  };\r\n\r\n  mercatorEquatorialGuinea.fitSize = function(size, object) {\r\n    return fitSize(mercatorEquatorialGuinea, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return mercatorEquatorialGuinea;\r\n  }\r\n\r\n  mercatorEquatorialGuinea.drawCompositionBorders = function(context) {\r\n    /*\r\n    console.log(\"var ul, ur, ld, ll;\");\r\n    var projs = [continent, bioko, annobon];\r\n    for (var i in projs){\r\n      var ul = continent.invert([projs[i].clipExtent()[0][0], projs[i].clipExtent()[0][1]]);\r\n      var ur = continent.invert([projs[i].clipExtent()[1][0], projs[i].clipExtent()[0][1]]);\r\n      var ld = continent.invert([projs[i].clipExtent()[1][0], projs[i].clipExtent()[1][1]]);\r\n      var ll = continent.invert([projs[i].clipExtent()[0][0], projs[i].clipExtent()[1][1]]);\r\n\r\n      console.log(\"ul = continent([\"+ul+\"]);\");\r\n      console.log(\"ur = continent([\"+ur+\"]);\");\r\n      console.log(\"ld = continent([\"+ld+\"]);\");\r\n      console.log(\"ll = continent([\"+ll+\"]);\");\r\n\r\n      console.log(\"context.moveTo(ul[0], ul[1]);\");\r\n      console.log(\"context.lineTo(ur[0], ur[1]);\");\r\n      console.log(\"context.lineTo(ld[0], ld[1]);\");\r\n      console.log(\"context.lineTo(ll[0], ll[1]);\");\r\n      console.log(\"context.closePath();\");\r\n\r\n    }*/\r\n\r\n    var ul, ur, ld, ll;\r\n    ul = continent([9.21327272751682,2.645820439454123]);\r\n    ur = continent([11.679126293239872,2.644755519268689]);\r\n    ld = continent([11.676845389029227,0.35307824637606433]);\r\n    ll = continent([9.213572917774014,0.35414205204417754]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = continent([7.320873711543669,2.64475551449975]);\r\n    ur = continent([9.213272722738658,2.645820434679803]);\r\n    ld = continent([9.213422896480349,1.4999812505283054]);\r\n    ll = continent([7.322014760520787,1.4989168878985566]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n    ul = continent([7.3220147605302905,1.4989168783492766]);\r\n    ur = continent([9.213422896481598,1.499981240979021]);\r\n    ld = continent([9.213572912999604,0.354142056817247]);\r\n    ll = continent([7.323154615739809,0.353078251154504]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n\r\n  };\r\n  mercatorEquatorialGuinea.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return mercatorEquatorialGuinea.scale(12000);\r\n}\r\n", "import { epsilon } from \"./math\";\r\nimport { geoAlbers as albers } from \"d3-geo\";\r\nimport { fitExtent, fitSize } from \"./fit\";\r\nimport { path } from \"d3-path\";\r\n\r\nfunction multiplex(streams) {\r\n  var n = streams.length;\r\n  return {\r\n    point: function(x, y) {\r\n      var i = -1;\r\n      while (++i < n) streams[i].point(x, y);\r\n    },\r\n    sphere: function() {\r\n      var i = -1;\r\n      while (++i < n) streams[i].sphere();\r\n    },\r\n    lineStart: function() {\r\n      var i = -1;\r\n      while (++i < n) streams[i].lineStart();\r\n    },\r\n    lineEnd: function() {\r\n      var i = -1;\r\n      while (++i < n) streams[i].lineEnd();\r\n    },\r\n    polygonStart: function() {\r\n      var i = -1;\r\n      while (++i < n) streams[i].polygonStart();\r\n    },\r\n    polygonEnd: function() {\r\n      var i = -1;\r\n      while (++i < n) streams[i].polygonEnd();\r\n    }\r\n  };\r\n}\r\n\r\nexport default function() {\r\n  var cache,\r\n    cacheStream,\r\n    main = albers()\r\n      .rotate([4.4, 0.8])\r\n      .center([0, 55.4])\r\n      .parallels([50, 60]),\r\n    mainPoint,\r\n    shetland = albers()\r\n      .rotate([4.4, 0.8])\r\n      .center([0, 55.4])\r\n      .parallels([50, 60]),\r\n    shetlandPoint,\r\n    point,\r\n    pointStream = {\r\n      point: function(x, y) {\r\n        point = [x, y];\r\n      }\r\n    };\r\n\r\n  var shetlandBbox = [\r\n    [-2.1, 70],\r\n    [-0.7, 59.8]\r\n  ];\r\n  function albersUk(coordinates) {\r\n    var x = coordinates[0],\r\n      y = coordinates[1];\r\n    return (\r\n      (point = null),\r\n      (mainPoint.point(x, y), point) || (shetlandPoint.point(x, y), point)\r\n    );\r\n  }\r\n\r\n  albersUk.invert = function(coordinates) {\r\n    var k = main.scale(),\r\n      t = main.translate(),\r\n      x = (coordinates[0] - t[0]) / k,\r\n      y = (coordinates[1] - t[1]) / k;\r\n\r\n    return (y >= -0.089 && y < 0.06 && x >= 0.029 && x < 0.046\r\n      ? shetland\r\n      : main\r\n    ).invert(coordinates);\r\n  };\r\n\r\n  albersUk.stream = function(stream) {\r\n    return cache && cacheStream === stream\r\n      ? cache\r\n      : (cache = multiplex([\r\n          main.stream((cacheStream = stream)),\r\n          shetland.stream(stream)\r\n        ]));\r\n  };\r\n\r\n  albersUk.precision = function(_) {\r\n    if (!arguments.length) return main.precision();\r\n    main.precision(_), shetland.precision(_);\r\n    return reset();\r\n  };\r\n\r\n  albersUk.scale = function(_) {\r\n    if (!arguments.length) return main.scale();\r\n    main.scale(_), shetland.scale(_);\r\n    return albersUk.translate(main.translate());\r\n  };\r\n\r\n  albersUk.translate = function(_) {\r\n    if (!arguments.length) return main.translate();\r\n    var k = main.scale(),\r\n      x = +_[0],\r\n      y = +_[1];\r\n\r\n    mainPoint = main\r\n      .translate(_)\r\n      .clipExtent([\r\n        [x - 0.065 * k, y - 0.089 * k],\r\n        [x + 0.075 * k, y + 0.089 * k]\r\n      ])\r\n      .stream(pointStream);\r\n\r\n    shetlandPoint = shetland\r\n      .translate([x + 0.01 * k, y + 0.025 * k])\r\n      .clipExtent([\r\n        [x + 0.029 * k + epsilon, y - 0.089 * k + epsilon],\r\n        [x + 0.046 * k - epsilon, y - 0.06 * k - epsilon]\r\n      ])\r\n      .stream(pointStream);\r\n\r\n    return reset();\r\n  };\r\n\r\n  albersUk.fitExtent = function(extent, object) {\r\n    return fitExtent(albersUk, extent, object);\r\n  };\r\n\r\n  albersUk.fitSize = function(size, object) {\r\n    return fitSize(albersUk, size, object);\r\n  };\r\n\r\n  function reset() {\r\n    cache = cacheStream = null;\r\n    return albersUk;\r\n  }\r\n\r\n  albersUk.drawCompositionBorders = function(context) {\r\n    /*var ul = main.invert([\r\n      shetland.clipExtent()[0][0],\r\n      shetland.clipExtent()[0][1]\r\n    ]);\r\n    var ur = main.invert([\r\n      shetland.clipExtent()[1][0],\r\n      shetland.clipExtent()[0][1]\r\n    ]);\r\n    var ld = main.invert([\r\n      shetland.clipExtent()[1][0],\r\n      shetland.clipExtent()[1][1]\r\n    ]);\r\n    var ll = main.invert([\r\n      shetland.clipExtent()[0][0],\r\n      shetland.clipExtent()[1][1]\r\n    ]);\r\n\r\n    console.log(\"ul = main([\" + ul + \"]);\");\r\n    console.log(\"ur = main([\" + ur + \"]);\");\r\n    console.log(\"ld = main([\" + ld + \"]);\");\r\n    console.log(\"ll = main([\" + ll + \"]);\");\r\n\r\n    console.log(\"context.moveTo(ul[0], ul[1]);\");\r\n    console.log(\"context.lineTo(ur[0], ur[1]);\");\r\n    console.log(\"context.lineTo(ld[0], ld[1]);\");\r\n    console.log(\"context.lineTo(ll[0], ll[1]);\");\r\n    console.log(\"context.closePath();\");*/\r\n\r\n    var ul, ur, ld, ll;\r\n    ul = main([-1.113205870242365, 59.64920050773357]);\r\n    ur = main([0.807899092399606, 59.59085836472269]);\r\n    ld = main([0.5778611961420386, 57.93467822832577]);\r\n    ll = main([-1.25867782078448, 57.99029450085142]);\r\n    context.moveTo(ul[0], ul[1]);\r\n    context.lineTo(ur[0], ur[1]);\r\n    context.lineTo(ld[0], ld[1]);\r\n    context.lineTo(ll[0], ll[1]);\r\n    context.closePath();\r\n  };\r\n  albersUk.getCompositionBorders = function() {\r\n    var context = path();\r\n    this.drawCompositionBorders(context);\r\n    return context.toString();\r\n  };\r\n\r\n  return albersUk.scale(2800);\r\n}\r\n", "export { default as geoAlbersUsa } from \"./src/albersUsa\";\r\nexport { default as geoAlbersUsaTerritories } from \"./src/albersUsaTerritories\";\r\nexport { default as geoConicConformalSpain } from \"./src/conicConformalSpain\";\r\nexport { default as geoConicConformalPortugal } from \"./src/conicConformalPortugal\";\r\nexport { default as geoMercatorEcuador } from \"./src/mercatorEcuador\";\r\nexport { default as geoTransverseMercatorChile } from \"./src/transverseMercatorChile\";\r\nexport { default as geoConicEquidistantJapan } from \"./src/conicEquidistantJapan\";\r\nexport { default as geoConicConformalFrance } from \"./src/conicConformalFrance\";\r\nexport { default as geoConicConformalEurope } from \"./src/conicConformalEurope\";\r\nexport { default as geoConicConformalNetherlands } from \"./src/conicConformalNetherlands\";\r\nexport { default as geoMercatorMalaysia } from \"./src/mercatorMalaysia\";\r\nexport { default as geoMercatorEquatorialGuinea } from \"./src/mercatorEquatorialGuinea\";\r\nexport { default as geoAlbersUk } from \"./src/albersUk\";\r\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar d3Geo = tslib_1.__importStar(require(\"d3-geo\"));\nvar d3GeoProjection = tslib_1.__importStar(require(\"d3-geo-projection\"));\nvar d3CompositeProjection = tslib_1.__importStar(require(\"d3-composite-projections\"));\n/*\n * getGeoProjection\n *\n * @param {string|function} projection  projection name or projection function\n * @param {boolean} [exportRaw = false] - whether return the raw projection or not\n * */\nexports.default = (function (projection, exportRaw) {\n    if (exportRaw === void 0) { exportRaw = false; }\n    if (util_1.isFunction(projection)) {\n        return exportRaw ? projection : projection();\n    }\n    if (util_1.isString(projection)) {\n        // @ts-ignore\n        if (d3Geo[projection]) {\n            // @ts-ignore\n            return exportRaw ? d3Geo[projection] : d3Geo[projection]();\n        }\n        if (d3GeoProjection[projection]) {\n            return exportRaw ? d3GeoProjection[projection] : d3GeoProjection[projection]();\n        }\n        if (d3CompositeProjection[projection]) {\n            return exportRaw ? d3CompositeProjection[projection] : d3CompositeProjection[projection]();\n        }\n    }\n    return null;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar d3_geo_1 = require(\"d3-geo\");\nvar d3_geo_projection_1 = require(\"d3-geo-projection\");\nvar view_1 = require(\"../view\");\nvar get_geo_projection_1 = tslib_1.__importDefault(require(\"../util/get-geo-projection\"));\nvar api = {\n    // geo maintain\n    geoArea: function (feature) {\n        return d3_geo_1.geoArea(feature);\n    },\n    geoAreaByName: function (name) {\n        return d3_geo_1.geoArea(this.geoFeatureByName(name));\n    },\n    geoCentroid: function (feature) {\n        return d3_geo_1.geoCentroid(feature);\n    },\n    geoCentroidByName: function (name) {\n        return d3_geo_1.geoCentroid(this.geoFeatureByName(name));\n    },\n    geoDistance: function (p1, p2) {\n        return d3_geo_1.geoDistance(p1, p2);\n    },\n    geoLength: function (feature) {\n        return d3_geo_1.geoLength(feature);\n    },\n    geoLengthByName: function (name) {\n        return d3_geo_1.geoLength(this.geoFeatureByName(name));\n    },\n    geoContains: function (feature, position /* [longitude, latitude] */) {\n        return d3_geo_1.geoContains(feature, position);\n    },\n    geoFeatureByName: function (name) {\n        var rows = this.rows;\n        var result;\n        rows.some(function (feature) {\n            if (feature.name === name) {\n                result = feature;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    },\n    geoFeatureByPosition: function (position) {\n        var rows = this.rows;\n        var result;\n        rows.some(function (feature) {\n            if (d3_geo_1.geoContains(feature, position)) {\n                result = feature;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    },\n    geoNameByPosition: function (position) {\n        var feature = this.geoFeatureByPosition(position);\n        if (feature) {\n            return feature.name;\n        }\n    },\n    // projection\n    // export getGeoProjection for custom used.\n    getGeoProjection: get_geo_projection_1.default,\n    geoProject: function (feature, projection, exportRaw) {\n        projection = get_geo_projection_1.default(projection, exportRaw);\n        return d3_geo_projection_1.geoProject(feature, projection);\n    },\n    geoProjectByName: function (name, projection, exportRaw) {\n        projection = get_geo_projection_1.default(projection, exportRaw);\n        return d3_geo_projection_1.geoProject(this.geoFeatureByName(name), projection);\n    },\n    geoProjectPosition: function (position, projection, exportRaw) {\n        var func = get_geo_projection_1.default(projection, exportRaw);\n        return func(position);\n    },\n    geoProjectInvert: function (position /* [x, y] */, projection, exportRaw) {\n        var func = get_geo_projection_1.default(projection, exportRaw);\n        return func.invert(position);\n    },\n};\nutil_1.assign(view_1.View.prototype, api);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar view_1 = require(\"../view\");\nutil_1.assign(view_1.View.prototype, {\n    getAllNodes: function () {\n        var nodes = [];\n        var root = this.root;\n        if (root && root.each) {\n            // d3-hierarchy\n            root.each(function (node) {\n                nodes.push(node);\n            });\n        }\n        else if (root && root.eachNode) {\n            // @antv/hierarchy\n            root.eachNode(function (node) {\n                nodes.push(node);\n            });\n        }\n        return nodes;\n    },\n    getAllLinks: function () {\n        var links = [];\n        var nodes = [this.root];\n        var node;\n        while ((node = nodes.pop())) {\n            var children = node.children;\n            if (children) {\n                children.forEach(function (child) {\n                    links.push({\n                        source: node,\n                        target: child,\n                    });\n                    nodes.push(child);\n                });\n            }\n        }\n        return links;\n    },\n});\nutil_1.assign(view_1.View.prototype, {\n    getAllEdges: view_1.View.prototype.getAllLinks,\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nfunction sortBy(arr, keys) {\n    if (keys === void 0) { keys = []; }\n    var comparer = undefined;\n    if (util_1.isFunction(keys)) {\n        comparer = keys;\n    }\n    else if (util_1.isArray(keys)) {\n        comparer = function (a, b) {\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                if (a[key] < b[key]) {\n                    return -1;\n                }\n                if (a[key] > b[key]) {\n                    return 1;\n                }\n            }\n            return 0;\n        };\n    }\n    else if (util_1.isString(keys)) {\n        comparer = function (a, b) {\n            if (a[keys] < b[keys]) {\n                return -1;\n            }\n            if (a[keys] > b[keys]) {\n                return 1;\n            }\n            return 0;\n        };\n    }\n    return arr.sort(comparer);\n}\nexports.default = sortBy;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar simple_sort_by_1 = tslib_1.__importDefault(require(\"./simple-sort-by\"));\nexports.default = (function (rows, group_by, order_by) {\n    if (order_by === void 0) { order_by = []; }\n    var newRows = rows;\n    if (order_by && order_by.length) {\n        newRows = simple_sort_by_1.default(rows, order_by);\n    }\n    var groupingFn;\n    if (util_1.isFunction(group_by)) {\n        groupingFn = group_by;\n    }\n    else if (util_1.isArray(group_by)) {\n        groupingFn = function (row) { return \"_\" + group_by.map(function (col) { return row[col]; }).join('-'); };\n        // NOTE: Object.keys({'b': 'b', '2': '2', '1': '1', 'a': 'a'}) => [ '1', '2', 'b', 'a' ]\n        // that is why we have to add a prefix\n    }\n    else if (util_1.isString(group_by)) {\n        groupingFn = function (row) { return \"_\" + row[group_by]; };\n    }\n    var groups = util_1.groupBy(newRows, groupingFn);\n    return groups;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar view_1 = require(\"../view\");\nutil_1.assign(view_1.View.prototype, {\n    partition: function (group_by, order_by) {\n        if (order_by === void 0) { order_by = []; }\n        return partition_1.default(this.rows, group_by, order_by);\n    },\n    group: function (group_by, order_by) {\n        if (order_by === void 0) { order_by = []; }\n        var groups = this.partition(group_by, order_by);\n        return util_1.values(groups);\n    },\n    groups: function (group_by, order_by) {\n        if (order_by === void 0) { order_by = []; }\n        return this.group(group_by, order_by);\n    },\n});\n", "function t(t){var r,n,e=t.length;if(1===e)r=0,n=t[0][1];else{for(var a,o,i,h=0,u=0,f=0,l=0,s=0;s<e;s++)h+=o=(a=t[s])[0],u+=i=a[1],f+=o*o,l+=o*i;n=u/e-(r=(e*l-h*u)/(e*f-h*h))*h/e}return{m:r,b:n}}function r(t){return function(r){return t.b+t.m*r}}function n(t){if(0===t.length)return 0;for(var r,n=t[0],e=0,a=1;a<t.length;a++)r=n+t[a],Math.abs(n)>=Math.abs(t[a])?e+=n-r+t[a]:e+=t[a]-r+n,n=r;return n+e}function e(t){if(0===t.length)throw new Error(\"mean requires at least one data point\");return n(t)/t.length}function a(t,r){var n,a,o=e(t),i=0;if(2===r)for(a=0;a<t.length;a++)i+=(n=t[a]-o)*n;else for(a=0;a<t.length;a++)i+=Math.pow(t[a]-o,r);return i}function o(t){if(0===t.length)throw new Error(\"variance requires at least one data point\");return a(t,2)/t.length}function i(t){if(1===t.length)return 0;var r=o(t);return Math.sqrt(r)}function h(t,r){if(t.length<2)return 1;for(var n=0,e=0;e<t.length;e++)n+=t[e][1];for(var a=n/t.length,o=0,i=0;i<t.length;i++)o+=Math.pow(a-t[i][1],2);for(var h=0,u=0;u<t.length;u++)h+=Math.pow(t[u][1]-r(t[u][0]),2);return 1-h/o}function u(t){if(0===t.length)throw new Error(\"mode requires at least one data point\");if(1===t.length)return t[0];for(var r=t[0],n=NaN,e=0,a=1,o=1;o<t.length+1;o++)t[o]!==r?(a>e&&(e=a,n=r),a=1,r=t[o]):a++;return n}function f(t){return t.slice().sort(function(t,r){return t-r})}function l(t){return u(f(t))}function s(t){for(var r,n=new Map,e=0,a=0;a<t.length;a++){var o=n.get(t[a]);void 0===o?o=1:o++,o>e&&(r=t[a],e=o),n.set(t[a],o)}if(0===e)throw new Error(\"mode requires at last one data point\");return r}function g(t){if(0===t.length)throw new Error(\"min requires at least one data point\");for(var r=t[0],n=1;n<t.length;n++)t[n]<r&&(r=t[n]);return r}function v(t){if(0===t.length)throw new Error(\"max requires at least one data point\");for(var r=t[0],n=1;n<t.length;n++)t[n]>r&&(r=t[n]);return r}function c(t){if(0===t.length)throw new Error(\"extent requires at least one data point\");for(var r=t[0],n=t[0],e=1;e<t.length;e++)t[e]>n&&(n=t[e]),t[e]<r&&(r=t[e]);return[r,n]}function p(t){return t[0]}function w(t){return t[t.length-1]}function M(t){return[t[0],t[t.length-1]]}function d(t){for(var r=0,n=0;n<t.length;n++)r+=t[n];return r}function m(t){for(var r=1,n=0;n<t.length;n++)r*=t[n];return r}function b(t,r){var n=t.length*r;if(0===t.length)throw new Error(\"quantile requires at least one data point.\");if(r<0||r>1)throw new Error(\"quantiles must be between 0 and 1\");return 1===r?t[t.length-1]:0===r?t[0]:n%1!=0?t[Math.ceil(n)-1]:t.length%2==0?(t[n-1]+t[n])/2:t[n]}function q(t,r,n,e){for(n=n||0,e=e||t.length-1;e>n;){if(e-n>600){var a=e-n+1,o=r-n+1,i=Math.log(a),h=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*h*(a-h)/a);o-a/2<0&&(u*=-1),q(t,r,Math.max(n,Math.floor(r-o*h/a+u)),Math.min(e,Math.floor(r+(a-o)*h/a+u)))}var f=t[r],l=n,s=e;for(E(t,n,r),t[e]>f&&E(t,n,e);l<s;){for(E(t,l,s),l++,s--;t[l]<f;)l++;for(;t[s]>f;)s--}t[n]===f?E(t,n,s):E(t,++s,e),s<=r&&(n=s+1),r<=s&&(e=s-1)}}function E(t,r,n){var e=t[r];t[r]=t[n],t[n]=e}function y(t,r){var n=t.slice();if(Array.isArray(r)){!function(t,r){for(var n=[0],e=0;e<r.length;e++)n.push(P(t.length,r[e]));n.push(t.length-1),n.sort(I);var a=[0,n.length-1];for(;a.length;){var o=Math.ceil(a.pop()),i=Math.floor(a.pop());if(!(o-i<=1)){var h=Math.floor((i+o)/2);x(t,n[h],Math.floor(n[i]),Math.ceil(n[o])),a.push(i,h,h,o)}}}(n,r);for(var e=[],a=0;a<r.length;a++)e[a]=b(n,r[a]);return e}return x(n,P(n.length,r),0,n.length-1),b(n,r)}function x(t,r,n,e){r%1==0?q(t,r,n,e):(q(t,r=Math.floor(r),n,e),q(t,r+1,r+1,e))}function I(t,r){return t-r}function P(t,r){var n=t*r;return 1===r?t-1:0===r?0:n%1!=0?Math.ceil(n)-1:t%2==0?n-.5:n}function k(t,r){if(r<t[0])return 0;if(r>t[t.length-1])return 1;var n=function(t,r){var n=0,e=0,a=t.length;for(;e<a;)r<=t[n=e+a>>>1]?a=n:e=-~n;return e}(t,r);if(t[n]!==r)return n/t.length;n++;var e=function(t,r){var n=0,e=0,a=t.length;for(;e<a;)r>=t[n=e+a>>>1]?e=-~n:a=n;return e}(t,r);if(e===n)return n/t.length;var a=e-n+1;return a*(e+n)/2/a/t.length}function C(t,r){return k(f(t),r)}function _(t){var r=y(t,.75),n=y(t,.25);if(\"number\"==typeof r&&\"number\"==typeof n)return r-n}function A(t){return+y(t,.5)}function N(t){for(var r=A(t),n=[],e=0;e<t.length;e++)n.push(Math.abs(t[e]-r));return A(n)}function z(t,r){var n=[];if(r<1)throw new Error(\"chunk size must be a positive number\");if(Math.floor(r)!==r)throw new Error(\"chunk size must be an integer\");for(var e=0;e<t.length;e+=r)n.push(t.slice(e,e+r));return n}function F(t,r,n){if(0===t.length)return[];n=n||Math.random;for(var e=t.length,a=[],o=0;o<r;o++){var i=Math.floor(n()*e);a.push(t[i])}return a}function S(t,r){r=r||Math.random;for(var n,e,a=t.length;a>0;)e=Math.floor(r()*a--),n=t[a],t[a]=t[e],t[e]=n;return t}function T(t,r){return S(t.slice().slice(),r)}function U(t,r,n){return T(t,n).slice(0,r)}function D(t){for(var r,n=0,e=0;e<t.length;e++)0!==e&&t[e]===r||(r=t[e],n++);return n}function K(t,r){for(var n=[],e=0;e<t;e++){for(var a=[],o=0;o<r;o++)a.push(0);n.push(a)}return n}function V(t,r,n,e){var a;if(t>0){var o=(n[r]-n[t-1])/(r-t+1);a=e[r]-e[t-1]-(r-t+1)*o*o}else a=e[r]-n[r]*n[r]/(r+1);return a<0?0:a}function j(t,r,n,e,a,o,i){if(!(t>r)){var h=Math.floor((t+r)/2);e[n][h]=e[n-1][h-1],a[n][h]=h;var u=n;t>n&&(u=Math.max(u,a[n][t-1]||0)),u=Math.max(u,a[n-1][h]||0);var f,l,s,g=h-1;r<e.length-1&&(g=Math.min(g,a[n][r+1]||0));for(var v=g;v>=u&&!((f=V(v,h,o,i))+e[n-1][u-1]>=e[n][h]);--v)(l=V(u,h,o,i)+e[n-1][u-1])<e[n][h]&&(e[n][h]=l,a[n][h]=u),u++,(s=f+e[n-1][v-1])<e[n][h]&&(e[n][h]=s,a[n][h]=v);j(t,h-1,n,e,a,o,i),j(h+1,r,n,e,a,o,i)}}function B(t,r){if(r>t.length)throw new Error(\"cannot generate more classes than there are data values\");var n=f(t);if(1===D(n))return[n];var e=K(r,n.length),a=K(r,n.length);!function(t,r,n){for(var e=r[0].length,a=t[Math.floor(e/2)],o=[],i=[],h=0,u=void 0;h<e;++h)u=t[h]-a,0===h?(o.push(u),i.push(u*u)):(o.push(o[h-1]+u),i.push(i[h-1]+u*u)),r[0][h]=V(0,h,o,i),n[0][h]=0;for(var f=1;f<r.length;++f)j(f<r.length-1?f:e-1,e-1,f,r,n,o,i)}(n,e,a);for(var o=[],i=a[0].length-1,h=a.length-1;h>=0;h--){var u=a[h][i];o[h]=n.slice(u,i+1),h>0&&(i=u-1)}return o}function G(t,r){if(t.length<2)return t;for(var n=g(t),e=v(t),a=[n],o=(e-n)/r,i=1;i<r;i++)a.push(a[0]+o*i);return a.push(e),a}function H(t,r){if(t.length!==r.length)throw new Error(\"sampleCovariance requires samples with equal lengths\");if(t.length<2)throw new Error(\"sampleCovariance requires at least two data points in each sample\");for(var n=e(t),a=e(r),o=0,i=0;i<t.length;i++)o+=(t[i]-n)*(r[i]-a);return o/(t.length-1)}function J(t){if(t.length<2)throw new Error(\"sampleVariance requires at least two data points\");return a(t,2)/(t.length-1)}function L(t){var r=J(t);return Math.sqrt(r)}function O(t,r){return H(t,r)/L(t)/L(r)}function Q(t){if(t.length<3)throw new Error(\"sampleSkewness requires at least three data points\");for(var r,n=e(t),a=0,o=0,i=0;i<t.length;i++)a+=(r=t[i]-n)*r,o+=r*r*r;var h=Math.sqrt(a/(t.length-1)),u=t.length;return u*o/((u-1)*(u-2)*Math.pow(h,3))}function R(t){var r=t.length;if(r<4)throw new Error(\"sampleKurtosis requires at least four data points\");for(var n,a=e(t),o=0,i=0,h=0;h<r;h++)o+=(n=t[h]-a)*n,i+=n*n*n*n;return(r-1)/((r-2)*(r-3))*(r*(r+1)*i/(o*o)-3*(r-1))}function W(t){for(var r=new Array(t.length),n=[t.slice()],e=0;e<t.length;e++)r[e]=0;for(var a=0;a<t.length;)if(r[a]<a){var o=0;a%2!=0&&(o=r[a]);var i=t[o];t[o]=t[a],t[a]=i,n.push(t.slice()),r[a]++,a=0}else r[a]=0,a++;return n}function X(t,r){var n,e,a,o,i=[];for(n=0;n<t.length;n++)if(1===r)i.push([t[n]]);else for(a=X(t.slice(n+1,t.length),r-1),e=0;e<a.length;e++)(o=a[e]).unshift(t[n]),i.push(o);return i}function Y(t,r){for(var n=[],e=0;e<t.length;e++)if(1===r)n.push([t[e]]);else for(var a=Y(t.slice(e,t.length),r-1),o=0;o<a.length;o++)n.push([t[e]].concat(a[o]));return n}function Z(t,r,n){return t+(n-t)/(r+1)}function $(t,r,n,e){return(t*r+n*e)/(r+e)}function tt(t,r,n,e,a,o){var i=$(r,n,a,o);return(n*(t+Math.pow(r-i,2))+o*(e+Math.pow(a-i,2)))/(n+o)}function rt(t){if(0===t.length)throw new Error(\"geometricMean requires at least one data point\");for(var r=1,n=0;n<t.length;n++){if(t[n]<=0)throw new Error(\"geometricMean requires only positive numbers as input\");r*=t[n]}return Math.pow(r,1/t.length)}function nt(t){if(0===t.length)throw new Error(\"harmonicMean requires at least one data point\");for(var r=0,n=0;n<t.length;n++){if(t[n]<=0)throw new Error(\"harmonicMean requires only positive numbers as input\");r+=1/t[n]}return t.length/r}function et(t){return b(t,.5)}function at(t,r,n){return(t*r-n)/(r-1)}function ot(t){if(0===t.length)throw new Error(\"rootMeanSquare requires at least one data point\");for(var r=0,n=0;n<t.length;n++)r+=Math.pow(t[n],2);return Math.sqrt(r/t.length)}function it(t,r){return(e(t)-r)/(i(t)/Math.sqrt(t.length))}function ht(t,r,n){var a=t.length,o=r.length;if(!a||!o)return null;n||(n=0);var i=e(t),h=e(r),u=J(t),f=J(r);return\"number\"==typeof i&&\"number\"==typeof h&&\"number\"==typeof u&&\"number\"==typeof f?(i-h-n)/Math.sqrt(((a-1)*u+(o-1)*f)/(a+o-2)*(1/a+1/o)):void 0}function ut(){this.totalCount=0,this.data={}}function ft(){this.weights=[],this.bias=0}ut.prototype.train=function(t,r){for(var n in this.data[r]||(this.data[r]={}),t){var e=t[n];void 0===this.data[r][n]&&(this.data[r][n]={}),void 0===this.data[r][n][e]&&(this.data[r][n][e]=0),this.data[r][n][e]++}this.totalCount++},ut.prototype.score=function(t){var r,n={};for(var e in t){var a=t[e];for(r in this.data)n[r]={},n[r][e+\"_\"+a]=this.data[r][e]?(this.data[r][e][a]||0)/this.totalCount:0}var o={};for(r in n)for(var i in o[r]=0,n[r])o[r]+=n[r][i];return o},ft.prototype.predict=function(t){if(t.length!==this.weights.length)return null;for(var r=0,n=0;n<this.weights.length;n++)r+=this.weights[n]*t[n];return(r+=this.bias)>0?1:0},ft.prototype.train=function(t,r){if(0!==r&&1!==r)return null;t.length!==this.weights.length&&(this.weights=t,this.bias=1);var n=this.predict(t);if(n!==r){for(var e=r-n,a=0;a<this.weights.length;a++)this.weights[a]+=e*t[a];this.bias+=e}return this};var lt=1e-4;function st(t){if(t<0)throw new Error(\"factorial requires a non-negative value\");if(Math.floor(t)!==t)throw new Error(\"factorial requires an integer input\");for(var r=1,n=2;n<=t;n++)r*=n;return r}function gt(t){if(\"number\"==typeof(r=t)&&isFinite(r)&&Math.floor(r)===r)return t<=0?NaN:st(t-1);var r;if(--t<0)return Math.PI/(Math.sin(Math.PI*-t)*gt(-t));var n=t+.25;return Math.pow(t/Math.E,t)*Math.sqrt(2*Math.PI*(t+1/6))*(1+1/144/Math.pow(n,2)-1/12960/Math.pow(n,3)-257/207360/Math.pow(n,4)-52/2612736/Math.pow(n,5)+5741173/9405849600/Math.pow(n,6)+37529/18811699200/Math.pow(n,7))}var vt=[.9999999999999971,57.15623566586292,-59.59796035547549,14.136097974741746,-.4919138160976202,3399464998481189e-20,4652362892704858e-20,-9837447530487956e-20,.0001580887032249125,-.00021026444172410488,.00021743961811521265,-.0001643181065367639,8441822398385275e-20,-26190838401581408e-21,36899182659531625e-22],ct=607/128,pt=Math.log(Math.sqrt(2*Math.PI));function wt(t){if(t<=0)return Infinity;t--;for(var r=vt[0],n=1;n<15;n++)r+=vt[n]/(t+n);var e=ct+.5+t;return pt+Math.log(r)-e+(t+.5)*Math.log(e)}function Mt(t){if(t<0||t>1)throw new Error(\"bernoulliDistribution requires probability to be between 0 and 1 inclusive\");return[1-t,t]}function dt(t,r){if(!(r<0||r>1||t<=0||t%1!=0)){var n=0,e=0,a=[],o=1;do{a[n]=o*Math.pow(r,n)*Math.pow(1-r,t-n),e+=a[n],o=o*(t-++n+1)/n}while(e<1-lt);return a}}function mt(t){if(!(t<=0)){var r=0,n=0,e=[],a=1;do{e[r]=Math.exp(-t)*Math.pow(t,r)/a,n+=e[r],a*=++r}while(n<1-lt);return e}}var bt={1:{.995:0,.99:0,.975:0,.95:0,.9:.02,.5:.45,.1:2.71,.05:3.84,.025:5.02,.01:6.63,.005:7.88},2:{.995:.01,.99:.02,.975:.05,.95:.1,.9:.21,.5:1.39,.1:4.61,.05:5.99,.025:7.38,.01:9.21,.005:10.6},3:{.995:.07,.99:.11,.975:.22,.95:.35,.9:.58,.5:2.37,.1:6.25,.05:7.81,.025:9.35,.01:11.34,.005:12.84},4:{.995:.21,.99:.3,.975:.48,.95:.71,.9:1.06,.5:3.36,.1:7.78,.05:9.49,.025:11.14,.01:13.28,.005:14.86},5:{.995:.41,.99:.55,.975:.83,.95:1.15,.9:1.61,.5:4.35,.1:9.24,.05:11.07,.025:12.83,.01:15.09,.005:16.75},6:{.995:.68,.99:.87,.975:1.24,.95:1.64,.9:2.2,.5:5.35,.1:10.65,.05:12.59,.025:14.45,.01:16.81,.005:18.55},7:{.995:.99,.99:1.25,.975:1.69,.95:2.17,.9:2.83,.5:6.35,.1:12.02,.05:14.07,.025:16.01,.01:18.48,.005:20.28},8:{.995:1.34,.99:1.65,.975:2.18,.95:2.73,.9:3.49,.5:7.34,.1:13.36,.05:15.51,.025:17.53,.01:20.09,.005:21.96},9:{.995:1.73,.99:2.09,.975:2.7,.95:3.33,.9:4.17,.5:8.34,.1:14.68,.05:16.92,.025:19.02,.01:21.67,.005:23.59},10:{.995:2.16,.99:2.56,.975:3.25,.95:3.94,.9:4.87,.5:9.34,.1:15.99,.05:18.31,.025:20.48,.01:23.21,.005:25.19},11:{.995:2.6,.99:3.05,.975:3.82,.95:4.57,.9:5.58,.5:10.34,.1:17.28,.05:19.68,.025:21.92,.01:24.72,.005:26.76},12:{.995:3.07,.99:3.57,.975:4.4,.95:5.23,.9:6.3,.5:11.34,.1:18.55,.05:21.03,.025:23.34,.01:26.22,.005:28.3},13:{.995:3.57,.99:4.11,.975:5.01,.95:5.89,.9:7.04,.5:12.34,.1:19.81,.05:22.36,.025:24.74,.01:27.69,.005:29.82},14:{.995:4.07,.99:4.66,.975:5.63,.95:6.57,.9:7.79,.5:13.34,.1:21.06,.05:23.68,.025:26.12,.01:29.14,.005:31.32},15:{.995:4.6,.99:5.23,.975:6.27,.95:7.26,.9:8.55,.5:14.34,.1:22.31,.05:25,.025:27.49,.01:30.58,.005:32.8},16:{.995:5.14,.99:5.81,.975:6.91,.95:7.96,.9:9.31,.5:15.34,.1:23.54,.05:26.3,.025:28.85,.01:32,.005:34.27},17:{.995:5.7,.99:6.41,.975:7.56,.95:8.67,.9:10.09,.5:16.34,.1:24.77,.05:27.59,.025:30.19,.01:33.41,.005:35.72},18:{.995:6.26,.99:7.01,.975:8.23,.95:9.39,.9:10.87,.5:17.34,.1:25.99,.05:28.87,.025:31.53,.01:34.81,.005:37.16},19:{.995:6.84,.99:7.63,.975:8.91,.95:10.12,.9:11.65,.5:18.34,.1:27.2,.05:30.14,.025:32.85,.01:36.19,.005:38.58},20:{.995:7.43,.99:8.26,.975:9.59,.95:10.85,.9:12.44,.5:19.34,.1:28.41,.05:31.41,.025:34.17,.01:37.57,.005:40},21:{.995:8.03,.99:8.9,.975:10.28,.95:11.59,.9:13.24,.5:20.34,.1:29.62,.05:32.67,.025:35.48,.01:38.93,.005:41.4},22:{.995:8.64,.99:9.54,.975:10.98,.95:12.34,.9:14.04,.5:21.34,.1:30.81,.05:33.92,.025:36.78,.01:40.29,.005:42.8},23:{.995:9.26,.99:10.2,.975:11.69,.95:13.09,.9:14.85,.5:22.34,.1:32.01,.05:35.17,.025:38.08,.01:41.64,.005:44.18},24:{.995:9.89,.99:10.86,.975:12.4,.95:13.85,.9:15.66,.5:23.34,.1:33.2,.05:36.42,.025:39.36,.01:42.98,.005:45.56},25:{.995:10.52,.99:11.52,.975:13.12,.95:14.61,.9:16.47,.5:24.34,.1:34.28,.05:37.65,.025:40.65,.01:44.31,.005:46.93},26:{.995:11.16,.99:12.2,.975:13.84,.95:15.38,.9:17.29,.5:25.34,.1:35.56,.05:38.89,.025:41.92,.01:45.64,.005:48.29},27:{.995:11.81,.99:12.88,.975:14.57,.95:16.15,.9:18.11,.5:26.34,.1:36.74,.05:40.11,.025:43.19,.01:46.96,.005:49.65},28:{.995:12.46,.99:13.57,.975:15.31,.95:16.93,.9:18.94,.5:27.34,.1:37.92,.05:41.34,.025:44.46,.01:48.28,.005:50.99},29:{.995:13.12,.99:14.26,.975:16.05,.95:17.71,.9:19.77,.5:28.34,.1:39.09,.05:42.56,.025:45.72,.01:49.59,.005:52.34},30:{.995:13.79,.99:14.95,.975:16.79,.95:18.49,.9:20.6,.5:29.34,.1:40.26,.05:43.77,.025:46.98,.01:50.89,.005:53.67},40:{.995:20.71,.99:22.16,.975:24.43,.95:26.51,.9:29.05,.5:39.34,.1:51.81,.05:55.76,.025:59.34,.01:63.69,.005:66.77},50:{.995:27.99,.99:29.71,.975:32.36,.95:34.76,.9:37.69,.5:49.33,.1:63.17,.05:67.5,.025:71.42,.01:76.15,.005:79.49},60:{.995:35.53,.99:37.48,.975:40.48,.95:43.19,.9:46.46,.5:59.33,.1:74.4,.05:79.08,.025:83.3,.01:88.38,.005:91.95},70:{.995:43.28,.99:45.44,.975:48.76,.95:51.74,.9:55.33,.5:69.33,.1:85.53,.05:90.53,.025:95.02,.01:100.42,.005:104.22},80:{.995:51.17,.99:53.54,.975:57.15,.95:60.39,.9:64.28,.5:79.33,.1:96.58,.05:101.88,.025:106.63,.01:112.33,.005:116.32},90:{.995:59.2,.99:61.75,.975:65.65,.95:69.13,.9:73.29,.5:89.33,.1:107.57,.05:113.14,.025:118.14,.01:124.12,.005:128.3},100:{.995:67.33,.99:70.06,.975:74.22,.95:77.93,.9:82.36,.5:99.33,.1:118.5,.05:124.34,.025:129.56,.01:135.81,.005:140.17}};function qt(t,r,n){for(var a=0,o=r(e(t)),i=[],h=[],u=0;u<t.length;u++)void 0===i[t[u]]&&(i[t[u]]=0),i[t[u]]++;for(var f=0;f<i.length;f++)void 0===i[f]&&(i[f]=0);for(var l in o)l in i&&(h[+l]=o[l]*t.length);for(var s=h.length-1;s>=0;s--)h[s]<3&&(h[s-1]+=h[s],h.pop(),i[s-1]+=i[s],i.pop());for(var g=0;g<i.length;g++)a+=Math.pow(i[g]-h[g],2)/h[g];return bt[i.length-1-1][n]<a}var Et=Math.sqrt(2*Math.PI),yt={gaussian:function(t){return Math.exp(-.5*t*t)/Et}},xt={nrd:function(t){var r=L(t),n=_(t);return\"number\"==typeof n&&(r=Math.min(r,n/1.34)),1.06*r*Math.pow(t.length,-.2)}};function It(t,r,n){var e,a;if(void 0===r)e=yt.gaussian;else if(\"string\"==typeof r){if(!yt[r])throw new Error('Unknown kernel \"'+r+'\"');e=yt[r]}else e=r;if(void 0===n)a=xt.nrd(t);else if(\"string\"==typeof n){if(!xt[n])throw new Error('Unknown bandwidth method \"'+n+'\"');a=xt[n](t)}else a=n;return function(r){var n=0,o=0;for(n=0;n<t.length;n++)o+=e((r-t[n])/a);return o/a/t.length}}function Pt(t,r,n){return(t-r)/n}var kt=Math.sqrt(2*Math.PI);function Ct(t){for(var r=t,n=t,e=1;e<15;e++)r+=n*=t*t/(2*e+1);return Math.round(1e4*(.5+r/kt*Math.exp(-t*t/2)))/1e4}for(var _t=[],At=0;At<=3.09;At+=.01)_t.push(Ct(At));function Nt(t){var r=Math.abs(t),n=Math.min(Math.round(100*r),_t.length-1);return t>=0?_t[n]:+(1-_t[n]).toFixed(4)}function zt(t){var r=1/(1+.5*Math.abs(t)),n=r*Math.exp(-Math.pow(t,2)-1.26551223+1.00002368*r+.37409196*Math.pow(r,2)+.09678418*Math.pow(r,3)-.18628806*Math.pow(r,4)+.27886807*Math.pow(r,5)-1.13520398*Math.pow(r,6)+1.48851587*Math.pow(r,7)-.82215223*Math.pow(r,8)+.17087277*Math.pow(r,9));return t>=0?1-n:n-1}function Ft(t){var r=8*(Math.PI-3)/(3*Math.PI*(4-Math.PI)),n=Math.sqrt(Math.sqrt(Math.pow(2/(Math.PI*r)+Math.log(1-t*t)/2,2)-Math.log(1-t*t)/r)-(2/(Math.PI*r)+Math.log(1-t*t)/2));return t>=0?n:-n}function St(t){return 0===t?t=lt:t>=1&&(t=1-lt),Math.sqrt(2)*Ft(2*t-1)}function Tt(t,r,n,a){if(void 0===a&&(a=1e4),void 0===n&&(n=\"two_side\"),\"two_side\"!==n&&\"greater\"!==n&&\"less\"!==n)throw new Error(\"`alternative` must be either 'two_side', 'greater', or 'less'\");for(var o=e(t)-e(r),i=new Array(a),h=t.concat(r),u=Math.floor(h.length/2),f=0;f<a;f++){S(h);var l=h.slice(0,u),s=h.slice(u,h.length),g=e(l)-e(s);i[f]=g}var v=0;if(\"two_side\"===n)for(var c=0;c<=a;c++)Math.abs(i[c])>=Math.abs(o)&&(v+=1);else if(\"greater\"===n)for(var p=0;p<=a;p++)i[p]>=o&&(v+=1);else for(var w=0;w<=a;w++)i[w]<=o&&(v+=1);return v/a}function Ut(t){if(\"number\"==typeof t)return t<0?-1:0===t?0:1;throw new TypeError(\"not a number\")}function Dt(t,r,n,e,a){if(\"function\"!=typeof t)throw new TypeError(\"func must be a function\");for(var o=0;o<e;o++){var i=(r+n)/2;if(0===t(i)||Math.abs((n-r)/2)<a)return i;Ut(t(i))===Ut(t(r))?r=i:n=i}throw new Error(\"maximum number of iterations exceeded\")}export{t as linearRegression,r as linearRegressionLine,i as standardDeviation,h as rSquared,l as mode,s as modeFast,u as modeSorted,g as min,v as max,c as extent,p as minSorted,w as maxSorted,M as extentSorted,n as sum,d as sumSimple,m as product,y as quantile,b as quantileSorted,C as quantileRank,k as quantileRankSorted,_ as interquartileRange,_ as iqr,N as medianAbsoluteDeviation,N as mad,z as chunk,F as sampleWithReplacement,T as shuffle,S as shuffleInPlace,U as sample,B as ckmeans,D as uniqueCountSorted,a as sumNthPowerDeviations,G as equalIntervalBreaks,H as sampleCovariance,O as sampleCorrelation,J as sampleVariance,L as sampleStandardDeviation,Q as sampleSkewness,R as sampleKurtosis,W as permutationsHeap,X as combinations,Y as combinationsReplacement,Z as addToMean,$ as combineMeans,tt as combineVariances,rt as geometricMean,nt as harmonicMean,e as average,e as mean,A as median,et as medianSorted,at as subtractFromMean,ot as rootMeanSquare,ot as rms,o as variance,it as tTest,ht as tTestTwoSample,ut as BayesianClassifier,ut as bayesian,ft as PerceptronModel,ft as perceptron,lt as epsilon,st as factorial,gt as gamma,wt as gammaln,Mt as bernoulliDistribution,dt as binomialDistribution,mt as poissonDistribution,bt as chiSquaredDistributionTable,qt as chiSquaredGoodnessOfFit,It as kernelDensityEstimation,It as kde,Pt as zScore,Nt as cumulativeStdNormalProbability,_t as standardNormalTable,zt as errorFunction,zt as erf,Ft as inverseErrorFunction,St as probit,Tt as permutationTest,Dt as bisect,q as quickselect,Ut as sign,f as numericSort};\n//# sourceMappingURL=simple-statistics.mjs.map\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (function (fraction) {\n    var step = 1 / fraction;\n    var pArr = [];\n    for (var i = 0; i <= 1; i = i + step) {\n        pArr.push(i);\n    }\n    return pArr;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    HIERARCHY: 'hierarchy',\n    GEO: 'geo',\n    HEX: 'hex',\n    GRAPH: 'graph',\n    TABLE: 'table',\n    GEO_GRATICULE: 'geo-graticule',\n    STATISTICS_METHODS: [\n        'max',\n        'mean',\n        'median',\n        'min',\n        'mode',\n        'product',\n        'standardDeviation',\n        'sum',\n        'sumSimple',\n        'variance',\n    ],\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar simpleStatistics = tslib_1.__importStar(require(\"simple-statistics\"));\nvar util_1 = require(\"@antv/util\");\nvar view_1 = require(\"../view\");\nvar p_by_fraction_1 = tslib_1.__importDefault(require(\"../util/p-by-fraction\"));\nvar constants_1 = tslib_1.__importDefault(require(\"../constants\"));\nvar STATISTICS_METHODS = constants_1.default.STATISTICS_METHODS;\nfunction getColumnValues(view, column) {\n    var values = view.getColumn(column);\n    if (util_1.isArray(values) && util_1.isArray(values[0])) {\n        values = util_1.flattenDeep(values);\n    }\n    return values;\n}\n// statistics\nSTATISTICS_METHODS.forEach(function (method) {\n    // @ts-ignore;\n    view_1.View.prototype[method] = function (column) {\n        // @ts-ignore\n        return simpleStatistics[method](getColumnValues(this, column));\n    };\n});\nvar quantile = simpleStatistics.quantile;\nutil_1.assign(view_1.View.prototype, {\n    average: view_1.View.prototype.mean,\n    quantile: function (column, p) {\n        return quantile(getColumnValues(this, column), p);\n    },\n    quantiles: function (column, pArr) {\n        var columnArr = getColumnValues(this, column);\n        return pArr.map(function (p) { return quantile(columnArr, p); });\n    },\n    quantilesByFraction: function (column, fraction) {\n        return this.quantiles(column, p_by_fraction_1.default(fraction));\n    },\n    range: function (column) {\n        return [this.min(column), this.max(column)];\n    },\n    extent: function (column) {\n        // alias\n        return this.range(column);\n    },\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataSet = void 0;\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar wolfy87_eventemitter_1 = tslib_1.__importDefault(require(\"wolfy87-eventemitter\"));\nvar view_1 = require(\"./view\");\nvar constants_1 = tslib_1.__importDefault(require(\"./constants\"));\n/**\n * \u6570\u636E\u96C6\n * @public\n */\nvar DataSet = /** @class */ (function (_super) {\n    tslib_1.__extends(DataSet, _super);\n    /**\n     * @param initialProps - \u521D\u59CB\u72B6\u6001\n     */\n    function DataSet(initialProps) {\n        if (initialProps === void 0) { initialProps = { state: {} }; }\n        var _this = _super.call(this) || this;\n        /**\n         * \u5426\u662F DataSet\n         */\n        _this.isDataSet = true;\n        _this._onChangeTimer = null;\n        /**\n         * \u6240\u6709\u6302\u5728\u6570\u636E\u96C6\u4E0A\u7684\u6570\u636E\u89C6\u56FE\uFF08key-value \u5BF9\uFF09\n         */\n        _this.views = {};\n        /**\n         * \u5B58\u50A8\u6570\u636E\u96C6\u4E0A\u7684\u72B6\u6001\u91CF\uFF08key-value \u5BF9\uFF09\n         */\n        _this.state = {};\n        // assign(me, initialProps);\n        _this.state = initialProps.state;\n        return _this;\n    }\n    /**\n     * \u6CE8\u518C\u4E00\u4E2A\u6570\u636E\u8FDE\u63A5\u51FD\u6570\uFF0C\u6CE8\u518C\u540E\u6240\u6709\u6570\u636E\u89C6\u56FE\u90FD\u53EF\u4EE5\u4F7F\u7528 name \u6765\u5F15\u7528\u8FD9\u4E2A\u6570\u636E\u8FDE\u63A5\u51FD\u6570\uFF0C\u4ECE\u800C\u63A5\u5165\u67D0\u79CD\u6570\u636E\u6E90\u3002\n     * @param name - \u7C7B\u578B\n     * @param connector - \u89E3\u6790\u903B\u8F91\n     */\n    DataSet.registerConnector = function (name, connector) {\n        DataSet.connectors[name] = connector;\n    };\n    DataSet.getConnector = function (name) {\n        return DataSet.connectors[name] || DataSet.connectors.default;\n    };\n    /**\n     * \u6CE8\u518C\u4E00\u4E2A\u6570\u636E\u5904\u7406\u51FD\u6570\uFF0C\u6CE8\u518C\u540E\u6240\u6709\u6570\u636E\u89C6\u56FE\u90FD\u53EF\u4EE5\u4F7F\u7528 name \u6765\u5F15\u7528\u8FD9\u4E2A\u6570\u636E\u5904\u7406\u51FD\u6570\uFF0C\u4ECE\u800C\u8FDB\u884C\u67D0\u79CD\u6570\u636E\u5904\u7406\n     * @param name - transform \u7C7B\u578B\n     * @param transform - transform\u903B\u8F91\n     */\n    DataSet.registerTransform = function (name, transform) {\n        DataSet.transforms[name] = transform;\n    };\n    DataSet.getTransform = function (name) {\n        return DataSet.transforms[name] || DataSet.transforms.default;\n    };\n    DataSet.prototype._getUniqueViewName = function () {\n        var name = util_1.uniqueId('view_');\n        while (this.views[name]) {\n            name = util_1.uniqueId('view_');\n        }\n        return name;\n    };\n    DataSet.prototype.createView = function (name, options) {\n        if (util_1.isNil(name)) {\n            name = this._getUniqueViewName();\n        }\n        if (util_1.isObject(name)) {\n            options = name;\n            name = this._getUniqueViewName();\n        }\n        if (this.views[name]) {\n            throw new Error(\"data view exists: \" + name);\n        }\n        var view = new view_1.View(this, options);\n        this.views[name] = view;\n        return view;\n    };\n    /**\n     * \u8FD4\u56DE name \u5BF9\u5E94\u7684\u6570\u636E\u89C6\u56FE\u5B9E\u4F8B\n     * @param name - name\n     */\n    DataSet.prototype.getView = function (name) {\n        return this.views[name];\n    };\n    /**\n     * \u8BBE\u7F6E name \u5BF9\u5E94\u7684\u6570\u636E\u89C6\u56FE\u5B9E\u4F8B\u4E3A dv\n     * @param name - \u540D\u79F0\n     * @param view - data view\n     */\n    DataSet.prototype.setView = function (name, view) {\n        this.views[name] = view;\n    };\n    /**\n     * \u8BBE\u7F6E\u72B6\u6001\u91CF name \u7684\u503C\u4E3A value\n     * @param name - \u72B6\u6001\u540D\n     * @param value - \u503C\n     */\n    DataSet.prototype.setState = function (name, value) {\n        var _this = this;\n        this.state[name] = value;\n        if (this._onChangeTimer) {\n            window.clearTimeout(this._onChangeTimer);\n            this._onChangeTimer = null;\n        }\n        this._onChangeTimer = window.setTimeout(function () {\n            _this.emit('statechange', name, value);\n        }, 16); // execute after one frame\n    };\n    /**\n     * \u5E38\u91CF\uFF0C\u8B6C\u5982 DataSet.CONSTANTS.HIERARCHY \u662F\u6811\u5F62\u7ED3\u6784\u7684\u540D\u79F0\n     */\n    DataSet.CONSTANTS = constants_1.default;\n    /**\n     * \u6CE8\u518C\u7684 Connector\uFF08key-value \u5BF9\uFF09\n     */\n    DataSet.connectors = {};\n    /**\n     * \u5DF2\u6CE8\u518C\u7684 Transform\uFF08key-value \u5BF9\uFF09\n     */\n    DataSet.transforms = {};\n    DataSet.DataSet = DataSet;\n    DataSet.DataView = view_1.View; // alias\n    DataSet.View = view_1.View;\n    DataSet.version = '____DATASET_VERSION____';\n    return DataSet;\n}(wolfy87_eventemitter_1.default));\nexports.DataSet = DataSet;\n// @ts-ignore\nutil_1.assign(DataSet, constants_1.default);\n// @ts-ignore\nutil_1.assign(DataSet.prototype, {\n    view: DataSet.prototype.createView,\n});\nview_1.View.DataSet = DataSet;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../data-set\");\ndata_set_1.DataSet.registerConnector('default', function (data, dataSet) {\n    var view;\n    if (util_1.isString(data)) {\n        view = dataSet.getView(data);\n    }\n    else {\n        view = data;\n    }\n    if (!view) {\n        throw new TypeError('Invalid dataView');\n    }\n    return util_1.deepMix([], view.rows);\n});\n", "var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n", "import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n", "import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n", "export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nvar fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();", "export {default as dsvFormat} from \"./dsv.js\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, csvFormatRow, csvFormatValue} from \"./csv.js\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, tsvFormatRow, tsvFormatValue} from \"./tsv.js\";\nexport {default as autoType} from \"./autoType.js\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar d3_dsv_1 = require(\"d3-dsv\");\nvar data_set_1 = require(\"../data-set\");\ndata_set_1.DataSet.registerConnector('dsv', function (str, options) {\n    if (options === void 0) { options = {}; }\n    var delimiter = options.delimiter || ',';\n    if (!util_1.isString(delimiter)) {\n        throw new TypeError('Invalid delimiter: must be a string!');\n    }\n    return d3_dsv_1.dsvFormat(delimiter).parse(str);\n});\ndata_set_1.DataSet.registerConnector('csv', function (str) {\n    return d3_dsv_1.csvParse(str);\n});\ndata_set_1.DataSet.registerConnector('tsv', function (str) {\n    return d3_dsv_1.tsvParse(str);\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar d3_geo_1 = require(\"d3-geo\");\nvar data_set_1 = require(\"../data-set\");\nfunction connector(_options, dataView) {\n    dataView.dataType = 'geo-graticule';\n    var data = d3_geo_1.geoGraticule().lines();\n    data.map(function (row, index) {\n        row.index = \"\" + index;\n        return row;\n    });\n    dataView.rows = data;\n    return data;\n}\nexports.default = connector;\ndata_set_1.DataSet.registerConnector('geo-graticule', connector);\n", "\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n", "\nmodule.exports = absolutize\n\n/**\n * redefine `path` with absolute coordinates\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction absolutize(path){\n\tvar startX = 0\n\tvar startY = 0\n\tvar x = 0\n\tvar y = 0\n\n\treturn path.map(function(seg){\n\t\tseg = seg.slice()\n\t\tvar type = seg[0]\n\t\tvar command = type.toUpperCase()\n\n\t\t// is relative\n\t\tif (type != command) {\n\t\t\tseg[0] = command\n\t\t\tswitch (type) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tseg[6] += x\n\t\t\t\t\tseg[7] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'v':\n\t\t\t\t\tseg[1] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'h':\n\t\t\t\t\tseg[1] += x\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tfor (var i = 1; i < seg.length;) {\n\t\t\t\t\t\tseg[i++] += x\n\t\t\t\t\t\tseg[i++] += y\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update cursor state\n\t\tswitch (command) {\n\t\t\tcase 'Z':\n\t\t\t\tx = startX\n\t\t\t\ty = startY\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tx = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\ty = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'M':\n\t\t\t\tx = startX = seg[1]\n\t\t\t\ty = startY = seg[2]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tx = seg[seg.length - 2]\n\t\t\t\ty = seg[seg.length - 1]\n\t\t}\n\n\t\treturn seg\n\t})\n}\n", "var parse = require('parse-svg-path');\r\nvar isarray = require('isarray');\r\nvar abs = require('abs-svg-path');\r\n\r\nmodule.exports = Points;\r\n\r\nfunction Points (path) {\r\n    if (!(this instanceof Points)) return new Points(path);\r\n    this._path = isarray(path) ? path : parse(path);\r\n    this._path = abs(this._path);\r\n    this._path = zvhToL(this._path);\r\n    this._path = longhand(this._path);\r\n}\r\n\r\nPoints.prototype.at = function (pos, opts) {\r\n    return this._walk(pos, opts).pos;\r\n};\r\n\r\nPoints.prototype.length = function () {\r\n    return this._walk(null).length;\r\n};\r\n\r\nPoints.prototype._walk = function (pos, opts) {\r\n    var cur = [ 0, 0 ];\r\n    var prev = [ 0, 0, 0 ];\r\n    var p0 = [ 0, 0 ];\r\n    var len = 0;\r\n\r\n    for (var i = 0; i < this._path.length; i++) {\r\n        var p = this._path[i];\r\n        if (p[0] === 'M') {\r\n            cur[0] = p[1];\r\n            cur[1] = p[2];\r\n            if (pos === 0) {\r\n                return { length: len, pos: cur };\r\n            }\r\n        }\r\n        else if (p[0] === 'C') {\r\n            prev[0] = p0[0] = cur[0];\r\n            prev[1] = p0[1] = cur[1];\r\n            prev[2] = len;\r\n\r\n            var n = 100;\r\n            for (var j = 0; j <= n; j++) {\r\n                var t = j / n;\r\n                var x = xof_C(p, t);\r\n                var y = yof_C(p, t);\r\n                len += dist(cur[0], cur[1], x, y);\r\n\r\n                cur[0] = x;\r\n                cur[1] = y;\r\n\r\n                if (typeof pos === 'number' && len >= pos) {\r\n                    var dv = (len - pos) / (len - prev[2]);\r\n\r\n                    var npos = [\r\n                        cur[0] * (1 - dv) + prev[0] * dv,\r\n                        cur[1] * (1 - dv) + prev[1] * dv\r\n                    ];\r\n                    return { length: len, pos: npos };\r\n                }\r\n                prev[0] = cur[0];\r\n                prev[1] = cur[1];\r\n                prev[2] = len;\r\n            }\r\n        }\r\n        else if (p[0] === 'Q') {\r\n            prev[0] = p0[0] = cur[0];\r\n            prev[1] = p0[1] = cur[1];\r\n            prev[2] = len;\r\n\r\n            var n = 100;\r\n            for (var j = 0; j <= n; j++) {\r\n                var t = j / n;\r\n                var x = xof_Q(p, t);\r\n                var y = yof_Q(p, t);\r\n                len += dist(cur[0], cur[1], x, y);\r\n\r\n                cur[0] = x;\r\n                cur[1] = y;\r\n\r\n                if (typeof pos === 'number' && len >= pos) {\r\n                    var dv = (len - pos) / (len - prev[2]);\r\n\r\n                    var npos = [\r\n                        cur[0] * (1 - dv) + prev[0] * dv,\r\n                        cur[1] * (1 - dv) + prev[1] * dv\r\n                    ];\r\n                    return { length: len, pos: npos };\r\n                }\r\n                prev[0] = cur[0];\r\n                prev[1] = cur[1];\r\n                prev[2] = len;\r\n            }\r\n        }\r\n        else if (p[0] === 'L') {\r\n            prev[0] = cur[0];\r\n            prev[1] = cur[1];\r\n            prev[2] = len;\r\n\r\n            len   += dist(cur[0], cur[1], p[1], p[2]);\r\n            cur[0] = p[1];\r\n            cur[1] = p[2];\r\n\r\n            if (typeof pos === 'number' && len >= pos) {\r\n                var dv = (len - pos) / (len - prev[2]);\r\n                var npos = [\r\n                    cur[0] * (1 - dv) + prev[0] * dv,\r\n                    cur[1] * (1 - dv) + prev[1] * dv\r\n                ];\r\n                return { length: len, pos: npos };\r\n            }\r\n            prev[0] = cur[0];\r\n            prev[1] = cur[1];\r\n            prev[2] = len;\r\n        }\r\n    }\r\n\r\n    return { length: len, pos: cur };\r\n    function xof_C (p, t) {\r\n        return Math.pow((1-t), 3) * p0[0]\r\n            + 3 * Math.pow((1-t), 2) * t * p[1]\r\n            + 3 * (1-t) * Math.pow(t, 2) * p[3]\r\n            + Math.pow(t, 3) * p[5]\r\n        ;\r\n    }\r\n    function yof_C (p, t) {\r\n        return Math.pow((1-t), 3) * p0[1]\r\n            + 3 * Math.pow((1-t), 2) * t * p[2]\r\n            + 3 * (1-t) * Math.pow(t, 2) * p[4]\r\n            + Math.pow(t, 3) * p[6]\r\n        ;\r\n    }\r\n\r\n    function xof_Q (p, t) {\r\n        return Math.pow((1-t), 2) * p0[0]\r\n            + 2 * (1-t) * t * p[1]\r\n            + Math.pow(t, 2) * p[3]\r\n        ;\r\n    }\r\n    function yof_Q (p, t) {\r\n        return Math.pow((1-t), 2) * p0[1]\r\n            + 2 * (1-t) * t * p[2]\r\n            + Math.pow(t, 2) * p[4]\r\n        ;\r\n    }\r\n};\r\n\r\nfunction dist (ax, ay, bx, by) {\r\n    var x = ax - bx;\r\n    var y = ay - by;\r\n    return Math.sqrt(x*x + y*y);\r\n}\r\n\r\n// Expand shorthand curve commands to full versions; mutates the path in place for efficiency\r\n// Requires commands have already been converted to absolute versions\r\nfunction longhand(path){\r\n    var prev,x1=0,y1=0;\r\n    var conversion = { S:{to:'C',x:3}, T:{to:'Q',x:1} };\r\n    for(var i=0, len=path.length; i<len; i++){\r\n        var cmd = path[i];\r\n        var convert = conversion[cmd[0]];\r\n\r\n        if (convert) {\r\n            cmd[0] = convert.to;\r\n            if (prev) {\r\n                if (prev[0] === convert.to) {\r\n                    x1 = 2*prev[convert.x+2]-prev[convert.x  ];\r\n                    y1 = 2*prev[convert.x+3]-prev[convert.x+1];\r\n                } else {\r\n                    x1 = prev[prev.length-2];\r\n                    y1 = prev[prev.length-1];\r\n                }\r\n            }\r\n            cmd.splice(1,0,x1,y1);\r\n        }\r\n        prev=cmd;\r\n    }\r\n    return path;\r\n}\r\n\r\n// Convert 'Z', 'V' and 'H' segments to 'L' segments\r\nfunction zvhToL(path){\r\n    var ret = [];\r\n    var startPoint = ['L',0,0];\r\n    var last_point;\r\n\r\n    for(var i=0, len=path.length; i<len; i++){\r\n        var pt = path[i];\r\n        switch(pt[0]){\r\n            case 'M':\r\n                startPoint = ['L', pt[1], pt[2]];\r\n                ret.push(pt);\r\n                break;\r\n            case 'Z':\r\n                ret.push(startPoint);\r\n                break;\r\n            case 'H':\r\n                last_point = ret[ret.length - 1] || ['L',0,0];\r\n                ret.push( ['L', pt[1], last_point[last_point.length - 1]] );\r\n                break;\r\n            case 'V':\r\n                last_point = ret[ret.length - 1] || ['L',0,0];\r\n                ret.push( ['L', last_point[last_point.length - 2], pt[1]] );\r\n                break;\r\n            default:\r\n                ret.push(pt);\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar point_at_length_1 = tslib_1.__importDefault(require(\"point-at-length\"));\nvar util_1 = require(\"@antv/util\");\nvar d3_geo_1 = require(\"d3-geo\");\nvar data_set_1 = require(\"../data-set\");\nvar geoPathGenerator = d3_geo_1.geoPath();\nfunction GeoJSONConnector(data, _options, dataView) {\n    dataView.dataType = data_set_1.DataSet.CONSTANTS.GEO;\n    var features = util_1.deepMix([], data.features);\n    // pre-process\n    features.forEach(function (feature) {\n        feature.name = feature.properties.name;\n        feature.longitude = [];\n        feature.latitude = [];\n        var pathData = (feature.pathData = geoPathGenerator(feature));\n        var points = point_at_length_1.default(pathData);\n        points._path.forEach(function (point) {\n            feature.longitude.push(point[1]);\n            feature.latitude.push(point[2]);\n        });\n        var centroid = geoPathGenerator.centroid(feature);\n        feature.centroidX = centroid[0];\n        feature.centroidY = centroid[1];\n    });\n    // dataView.origin = features;\n    return features;\n}\ndata_set_1.DataSet.registerConnector('geo', GeoJSONConnector);\ndata_set_1.DataSet.registerConnector('geojson', GeoJSONConnector);\ndata_set_1.DataSet.registerConnector('GeoJSON', GeoJSONConnector);\nexports.default = GeoJSONConnector;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../data-set\");\nvar DEFAULT_OPTIONS = {\n    nodes: function (d) {\n        // optional\n        return d.nodes;\n    },\n    edges: function (d) {\n        // optional\n        return d.edges;\n    },\n};\nfunction connector(data, options, dataView) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    dataView.dataType = data_set_1.DataSet.CONSTANTS.GRAPH;\n    var nodes = options.nodes, edges = options.edges;\n    if (nodes && !util_1.isFunction(nodes)) {\n        throw new TypeError('Invalid nodes: must be a function!');\n    }\n    if (edges && !util_1.isFunction(edges)) {\n        throw new TypeError('Invalid edges: must be a function!');\n    }\n    // @ts-ignore\n    dataView.rows = dataView.graph = {\n        nodes: nodes(data),\n        edges: edges(data),\n    };\n    util_1.assign(dataView, dataView.graph);\n    return dataView.rows;\n}\ndata_set_1.DataSet.registerConnector('graph', connector);\ndata_set_1.DataSet.registerConnector('diagram', connector);\n", "import {min, max} from \"d3-array\";\n\n// Main render method\nexport function renderHexJSON (hexjson, width, height) {\n\t// Get the layout\n\tvar layout = hexjson.layout;\n\n\t// Get the hex objects as an array\n\tvar hexes = [];\n\tvar hexRadius = 0;\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexjson.hexes[key].key = key;\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\tvar qnum = qmax - qmin + 1,\n\t\trnum = rmax - rmin + 1;\n\n\t// Calculate maximum radius the hexagons can have to fit the svg\n\tif (layout === \"odd-r\" || layout === \"even-r\") {\n\t\thexRadius = min([(width) / ((qnum + 0.5) * Math.sqrt(3)),\n\t\t\theight / ((rnum + 1 / 3) * 1.5)]);\n\t} else {\n\t\thexRadius = min([(height) / ((rnum + 0.5) * Math.sqrt(3)),\n\t\t\twidth / ((qnum + 1 / 3) * 1.5)]);\n\t}\n\n\t// Calculate the hexagon width\n\tvar hexWidth = hexRadius * Math.sqrt(3);\n\n\t// Get the vertices and points for this layout\n\tvar vertices = getVertices(layout, hexWidth, hexRadius);\n\tvar points = getPoints(vertices);\n\n\t// Calculate the values needed to render each hex and add to hexes\n\thexes.forEach(function (hex) {\n\t\t// Calculate the absolute co-ordinates of each hex\n\t\thex.qc = hex.q - qmin;\n\t\thex.rc = rmax - hex.r;\n\n\t\t// Calculate the x and y position of each hex for this svg\n\t\thex.x = getX(hex, layout, hexWidth, hexRadius);\n\t\thex.y = getY(hex, layout, hexWidth, hexRadius);\n\n\t\t// Add the vertex positions and points relative to x and y\n\t\thex.vertices = vertices;\n\t\thex.points = points;\n\t});\n\n\treturn hexes;\n}\n\n// Get the x position for a hex\nfunction getX (hex, layout, hexWidth, hexRadius) {\n\tvar x = 0,\n\t\txOffset = 0;\n\n\tswitch (layout) {\n\t\tcase \"odd-r\":\n\t\t\txOffset = (hex.rc % 2 === 1) ? hexWidth : (hexWidth / 2);\n\t\t\tx = (hex.qc * hexWidth) + xOffset;\n\t\t\tbreak;\n\n\t\tcase \"even-r\":\n\t\t\txOffset = (hex.rc % 2 === 0) ? hexWidth : (hexWidth / 2);\n\t\t\tx = (hex.qc * hexWidth) + xOffset;\n\t\t\tbreak;\n\n\t\tcase \"odd-q\":\n\t\tcase \"even-q\":\n\t\t\tx = (hex.qc * hexRadius * 1.5) + hexRadius;\n\t\t\tbreak;\n\t}\n\n\treturn x;\n}\n\n// Get the y position for a hex\nfunction getY (hex, layout, hexWidth, hexRadius) {\n\tvar y = 0,\n\t\tyOffset = 0;\n\n\tswitch (layout) {\n\t\tcase \"odd-r\":\n\t\tcase \"even-r\":\n\t\t\ty = (hex.rc * hexRadius * 1.5) + hexRadius;\n\t\t\tbreak;\n\n\t\tcase \"odd-q\":\n\t\t\tyOffset = (hex.qc % 2 === 1) ? hexWidth : (hexWidth / 2);\n\t\t\ty = (hex.rc * hexWidth) + yOffset;\n\t\t\tbreak;\n\n\t\tcase \"even-q\":\n\t\t\tyOffset = (hex.qc % 2 === 0) ? hexWidth : (hexWidth / 2);\n\t\t\ty = (hex.rc * hexWidth) + yOffset;\n\t\t\tbreak;\n\t}\n\n\treturn y;\n}\n\n// Get the positions of the vertices for the hex:\n// - Row layouts are ordered from the topmost vertex clockwise\n// - Column layouts are ordered from the leftmost vertex clockwise\nfunction getVertices (layout, hexWidth, hexRadius) {\n\tvar vertices = [];\n\n\tswitch (layout) {\n\t\tcase \"odd-r\":\n\t\tcase \"even-r\":\n\n\t\t\tvertices.push({x: 0, y: (0 - hexRadius)});\n\t\t\tvertices.push({x: (0 + hexWidth * 0.5), y: (0 - 0.5 * hexRadius)});\n\t\t\tvertices.push({x: (0 + hexWidth * 0.5), y: (0 + 0.5 * hexRadius)});\n\t\t\tvertices.push({x: 0, y: (0 + hexRadius)});\n\t\t\tvertices.push({x: (0 - hexWidth * 0.5), y: (0 + 0.5 * hexRadius)});\n\t\t\tvertices.push({x: (0 - hexWidth * 0.5), y: (0 - 0.5 * hexRadius)});\n\t\t\tbreak;\n\n\t\tcase \"odd-q\":\n\t\tcase \"even-q\":\n\n\t\t\tvertices.push({x: (0 - hexRadius), y: 0});\n\t\t\tvertices.push({x: (0 - 0.5 * hexRadius), y: (0 - hexWidth * 0.5)});\n\t\t\tvertices.push({x: (0 + 0.5 * hexRadius), y: (0 - hexWidth * 0.5)});\n\t\t\tvertices.push({x: (0 + hexRadius), y: 0});\n\t\t\tvertices.push({x: (0 + 0.5 * hexRadius), y: (0 + hexWidth * 0.5)});\n\t\t\tvertices.push({x: (0 - 0.5 * hexRadius), y: (0 + hexWidth * 0.5)});\n\t\t\tbreak;\n\t}\n\n\treturn vertices;\n}\n\n// Get the points attribute for a polygon with these vertices\nfunction getPoints (vertices) {\n\tvar points = \"\";\n\tvertices.forEach(function (v) { points += v.x + \",\" + v.y + \" \" });\n\treturn points.substring(0, points.length - 1);\n}\n\n// Creates a hexjson grid with the layout and dimensions of the given hexjson\nexport function getGridForHexJSON (hexjson) {\n\t// Create a new HexJSON object for the grid\n\tvar grid = {};\n\tgrid.layout = hexjson.layout;\n\tgrid.hexes = {};\n\n\t// Get the hex objects from the hexjson as an array\n\tvar hexes = [];\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns in the grid\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\t// Create the hexjson grid\n\tvar i, j, fkey;\n\tfor (i = qmin; i <= qmax; i++) {\n\t\tfor (j = rmin; j <= rmax; j++) {\n\t\t\tfkey = \"Q\" + i + \"R\" + j;\n\t\t\tgrid.hexes[fkey] = {q: i, r: j};\n\t\t}\n\t}\n\n\treturn grid;\n}\n\n// Creates a list of dots along the boundaries between\n// hexes which have different values of \"field\"\nexport function getBoundaryDotsForHexJSON (hexjson, width, height, field) {\n\t// Get the hex objects from the hexjson as an array\n\tvar hexes = [];\n\tvar layout = hexjson.layout;\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\tvar qnum = qmax - qmin + 1,\n\t\trnum = rmax - rmin + 1;\n\tvar hexRadius;\n\n\t// Calculate maximum radius the hexagons can have to fit the svg\n\tif (layout === \"odd-r\" || layout === \"even-r\") {\n\t\thexRadius = min([(width) / ((qnum + 0.5) * Math.sqrt(3)),\n\t\t\theight / ((rnum + 1 / 3) * 1.5)]);\n\t} else {\n\t\thexRadius = min([(height) / ((rnum + 0.5) * Math.sqrt(3)),\n\t\t\twidth / ((qnum + 1 / 3) * 1.5)]);\n\t}\n\n\t// Calculate the hexagon width\n\tvar hexWidth = hexRadius * Math.sqrt(3);\n\t// Create an array into which we will put points along the\n\t// boundaries between differing hexes.\n\t// Each edge has five points, equally spaced.\n\n\tvar lines = [];\n\tvar hexRadiusSquared = hexRadius * hexRadius * 4;\n\tvar maxHex = hexes.length;\n\tif (maxHex > 1) {\n\t\thexes.forEach(function (hex) {\n\t\t\thex.qc = hex.q - qmin;\n\t\t\thex.rc = rmax - hex.r;\n\n\t\t\t// Calculate the x and y position of each hex for this svg\n\t\t\thex.x = getX(hex, layout, hexWidth, hexRadius);\n\t\t\thex.y = getY(hex, layout, hexWidth, hexRadius);\n\t\t});\n\t\tfor (var i = 0; i < maxHex - 1; i++) {\n\t\t\tfor (var j = i + 1; j < maxHex; j++) {\n\t\t\t\tvar hex = hexes[i];\n\t\t\t\tvar otherHex = hexes[j];\n\t\t\t\tif (hex[field] !== otherHex[field]) {\n\t\t\t\t\tif (Math.abs(hex.q - otherHex.q) <= 1 &&\n\t\t\t\t\t\tMath.abs(hex.r - otherHex.r) <= 1) {\n\t\t\t\t\t\tif (((hex.x - otherHex.x) * (hex.x - otherHex.x)) +\n\t\t\t\t\t\t\t((hex.y - otherHex.y) * (hex.y - otherHex.y)) < hexRadiusSquared) {\n\t\t\t\t\t\t\t// They're neighbours\n\t\t\t\t\t\t\tvar midpoint = {};\n\t\t\t\t\t\t\tmidpoint.x = otherHex.x + (hex.x - otherHex.x) / 2;\n\t\t\t\t\t\t\tmidpoint.y = otherHex.y + (hex.y - otherHex.y) / 2;\n\t\t\t\t\t\t\tvar perp = {};\n\t\t\t\t\t\t\tvar denom = Math.sqrt(3) * 4;\n\t\t\t\t\t\t\tperp.dx = (hex.y - otherHex.y) / denom;\n\t\t\t\t\t\t\tperp.dy = -(hex.x - otherHex.x) / denom;\n\t\t\t\t\t\t\tlines.push({x: midpoint.x - 2 * perp.dx, y: midpoint.y - 2 * perp.dy});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x - perp.dx, y: midpoint.y - perp.dy});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x, y: midpoint.y});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x + perp.dx, y: midpoint.y + perp.dy});\n\t\t\t\t\t\t\tlines.push({x: midpoint.x + 2 * perp.dx, y: midpoint.y + 2 * perp.dy});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn lines;\n}\n\n// Creates a list of line segments along the boundaries\n// between hexes which have different values of \"field\"\nexport function getBoundarySegmentsForHexJSON (hexjson, width, height, field) {\n\t// Get the hex objects from the hexjson as an array\n\tvar hexes = [];\n\tvar layout = hexjson.layout;\n\n\tObject.keys(hexjson.hexes).forEach(function (key) {\n\t\thexes.push(hexjson.hexes[key]);\n\t});\n\n\t// Calculate the number of rows and columns\n\tvar qmax = max(hexes, function (d) { return +d.q }),\n\t\tqmin = min(hexes, function (d) { return +d.q }),\n\t\trmax = max(hexes, function (d) { return +d.r }),\n\t\trmin = min(hexes, function (d) { return +d.r });\n\n\tvar qnum = qmax - qmin + 1,\n\t\trnum = rmax - rmin + 1;\n\tvar hexRadius;\n\n\t// Calculate maximum radius the hexagons can have to fit the svg\n\tif (layout === \"odd-r\" || layout === \"even-r\") {\n\t\thexRadius = min([(width) / ((qnum + 0.5) * Math.sqrt(3)),\n\t\t\theight / ((rnum + 1 / 3) * 1.5)]);\n\t} else {\n\t\thexRadius = min([(height) / ((rnum + 0.5) * Math.sqrt(3)),\n\t\t\twidth / ((qnum + 1 / 3) * 1.5)]);\n\t}\n\n\t// Calculate the hexagon width\n\tvar hexWidth = hexRadius * Math.sqrt(3);\n\t// Create an array into which we will put points along the\n\t// boundaries between differing hexes.\n\n\t// Each segment will be of the form\n\t// {x: <start point X>, y: <start point Y>, cx: <difference X>, cy: <difference Y> }\n\t// intended to be used with the simple line drawing functionality of d3\n\t//\n\n\tvar segments = [];\n\tvar hexRadiusSquared = hexRadius * hexRadius * 4;\n\tvar maxHex = hexes.length;\n\tif (maxHex > 1) {\n\t\thexes.forEach(function (hex) {\n\t\t\thex.qc = hex.q - qmin;\n\t\t\thex.rc = rmax - hex.r;\n\n\t\t\t// Calculate the x and y position of each hex for this svg\n\t\t\thex.x = getX(hex, layout, hexWidth, hexRadius);\n\t\t\thex.y = getY(hex, layout, hexWidth, hexRadius);\n\t\t});\n\t\tfor (var i = 0; i < maxHex - 1; i++) {\n\t\t\tfor (var j = i + 1; j < maxHex; j++) {\n\t\t\t\tvar hex = hexes[i];\n\t\t\t\tvar otherHex = hexes[j];\n\t\t\t\tif (hex[field] !== otherHex[field]) {\n\t\t\t\t\tif (Math.abs(hex.q - otherHex.q) <= 1 &&\n\t\t\t\t\t\tMath.abs(hex.r - otherHex.r) <= 1) {\n\t\t\t\t\t\tif (((hex.x - otherHex.x) * (hex.x - otherHex.x)) +\n\t\t\t\t\t\t\t((hex.y - otherHex.y) * (hex.y - otherHex.y)) < hexRadiusSquared) {\n\t\t\t\t\t\t\t// They're neighbours\n\t\t\t\t\t\t\tvar midpoint = {};\n\t\t\t\t\t\t\tmidpoint.x = otherHex.x + (hex.x - otherHex.x) / 2;\n\t\t\t\t\t\t\tmidpoint.y = otherHex.y + (hex.y - otherHex.y) / 2;\n\t\t\t\t\t\t\tvar perp = {};\n\t\t\t\t\t\t\tvar direction = +1;\n\t\t\t\t\t\t\tif (hex[field] < otherHex[field]) {\n\t\t\t\t\t\t\t\tdirection = -1;\n\t\t\t\t\t\t\t} // otherwise, direction will be +1\n\t\t\t\t\t\t\tvar denom = Math.sqrt(3) * 2 * direction;\n\t\t\t\t\t\t\tperp.dx = (hex.y - otherHex.y) / denom;\n\t\t\t\t\t\t\tperp.dy = -(hex.x - otherHex.x) / denom;\n\t\t\t\t\t\t\tsegments.push({\n\t\t\t\t\t\t\t\tx1: midpoint.x - perp.dx,\n\t\t\t\t\t\t\t\ty1: midpoint.y - perp.dy,\n\t\t\t\t\t\t\t\tx2: midpoint.x + perp.dx,\n\t\t\t\t\t\t\t\ty2: midpoint.y + perp.dy});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn segments;\n}\n", "export {\n\trenderHexJSON,\n\tgetGridForHexJSON,\n\tgetBoundaryDotsForHexJSON,\n\tgetBoundarySegmentsForHexJSON\n} from \"./src/render\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar d3_hexjson_1 = require(\"d3-hexjson\");\nvar data_set_1 = require(\"../data-set\");\nvar DEFAULT_OPTIONS = {\n    width: 1,\n    height: 1,\n};\nfunction processRow(row) {\n    row.cx = row.x;\n    row.cy = row.y;\n    row.x = [];\n    row.y = [];\n    row.vertices.forEach(function (v) {\n        row.x.push(v.x + row.cx);\n        row.y.push(v.y + row.cy);\n    });\n    return row;\n}\nfunction HexJSONConnector(data, options, dataView) {\n    dataView.dataType = data_set_1.DataSet.CONSTANTS.HEX;\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var width = options.width, height = options.height;\n    var HexJSON = util_1.deepMix([], data);\n    dataView._HexJSON = HexJSON;\n    var grid = (dataView._GridHexJSON = d3_hexjson_1.getGridForHexJSON(HexJSON));\n    var rows = (dataView.rows = d3_hexjson_1.renderHexJSON(HexJSON, width, height).map(processRow));\n    dataView._gridRows = d3_hexjson_1.renderHexJSON(grid, width, height).map(processRow);\n    return rows;\n}\ndata_set_1.DataSet.registerConnector('hex', HexJSONConnector);\ndata_set_1.DataSet.registerConnector('hexjson', HexJSONConnector);\ndata_set_1.DataSet.registerConnector('hex-json', HexJSONConnector);\ndata_set_1.DataSet.registerConnector('HexJSON', HexJSONConnector);\nexports.default = HexJSONConnector;\n", "function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n", "function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n", "export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n", "export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n", "export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n", "export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n", "export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n", "export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n", "export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n", "export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n", "export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n", "export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don\u2019t include the root\u2019s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n", "import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n", "export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n", "import {shuffle, slice} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n", "import enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle\u2026\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // \u201CCloseness\u201D is determined by linear distance along the front-chain.\n    // \u201CAhead\u201D or \u201Cbehind\u201D is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n", "export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n", "export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n", "export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n", "import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n", "import {required} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar keyPrefix = \"$\", // Protect against keys like \u201C__proto__\u201D.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n", "import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-\u2019s ancestor is a sibling of v, returns vi-\u2019s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.\u2019s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n", "import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n", "import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n", "export {default as cluster} from \"./cluster.js\";\nexport {default as hierarchy} from \"./hierarchy/index.js\";\nexport {default as pack} from \"./pack/index.js\";\nexport {default as packSiblings} from \"./pack/siblings.js\";\nexport {default as packEnclose} from \"./pack/enclose.js\";\nexport {default as partition} from \"./partition.js\";\nexport {default as stratify} from \"./stratify.js\";\nexport {default as tree} from \"./tree.js\";\nexport {default as treemap} from \"./treemap/index.js\";\nexport {default as treemapBinary} from \"./treemap/binary.js\";\nexport {default as treemapDice} from \"./treemap/dice.js\";\nexport {default as treemapSlice} from \"./treemap/slice.js\";\nexport {default as treemapSliceDice} from \"./treemap/sliceDice.js\";\nexport {default as treemapSquarify} from \"./treemap/squarify.js\";\nexport {default as treemapResquarify} from \"./treemap/resquarify.js\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar data_set_1 = require(\"../data-set\");\nfunction connector(data, options, dataView) {\n    dataView.dataType = data_set_1.DataSet.CONSTANTS.HIERARCHY;\n    var children = options && options.children ? options.children : null;\n    if (children && !util_1.isFunction(children)) {\n        throw new TypeError('Invalid children: must be a function!');\n    }\n    if (!options.pureData) {\n        // @ts-ignore\n        dataView.rows = dataView.root = d3_hierarchy_1.hierarchy(data, children);\n    }\n    else {\n        dataView.rows = dataView.root = data;\n    }\n    return data;\n}\ndata_set_1.DataSet.registerConnector('hierarchy', connector);\ndata_set_1.DataSet.registerConnector('tree', connector);\n", "export default function(x) {\n  return x;\n}\n", "import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n", "import transform from \"./transform.js\";\n\nexport default function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}\n", "export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n", "import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n", "export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n", "import {object} from \"./feature.js\";\nimport stitch from \"./stitch.js\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n", "import {object} from \"./feature.js\";\nimport stitch from \"./stitch.js\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    }).filter(function(arcs) {\n      return arcs.length > 0;\n    })\n  };\n}\n", "export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n", "import bisect from \"./bisect.js\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n", "import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n", "import bbox from \"./bbox.js\";\nimport untransform from \"./untransform.js\";\n\nexport default function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be \u22652\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n}\n", "export {default as bbox} from \"./bbox.js\";\nexport {default as feature} from \"./feature.js\";\nexport {default as mesh, meshArcs} from \"./mesh.js\";\nexport {default as merge, mergeArcs} from \"./merge.js\";\nexport {default as neighbors} from \"./neighbors.js\";\nexport {default as quantize} from \"./quantize.js\";\nexport {default as transform} from \"./transform.js\";\nexport {default as untransform} from \"./untransform.js\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar topojson_client_1 = require(\"topojson-client\");\nvar geojson_1 = tslib_1.__importDefault(require(\"./geojson\"));\nvar data_set_1 = require(\"../data-set\");\nfunction TopoJSONConnector(data, options, dataView) {\n    var object = options.object;\n    if (!util_1.isString(object)) {\n        throw new TypeError('Invalid object: must be a string!');\n    }\n    var geoData = topojson_client_1.feature(data, data.objects[object]);\n    return geojson_1.default(geoData, undefined, dataView);\n}\ndata_set_1.DataSet.registerConnector('topojson', TopoJSONConnector);\ndata_set_1.DataSet.registerConnector('TopoJSON', TopoJSONConnector);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_set_1 = require(\"../data-set\");\ndata_set_1.DataSet.registerTransform('default', function (dataView) {\n    return dataView;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_set_1 = require(\"../data-set\");\nfunction defaultCallback(row) {\n    return !!row;\n}\ndata_set_1.DataSet.registerTransform('filter', function (dataView, options) {\n    dataView.rows = dataView.rows.filter(options.callback || defaultCallback);\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFields = exports.getField = void 0;\nvar util_1 = require(\"@antv/util\");\nvar INVALID_FIELD_ERR_MSG = 'Invalid field: it must be a string!';\nvar INVALID_FIELDS_ERR_MSG = 'Invalid fields: it must be an array!';\nfunction getField(options, defaultField) {\n    var field = options.field, fields = options.fields;\n    if (util_1.isString(field)) {\n        return field;\n    }\n    if (util_1.isArray(field)) {\n        console.warn(INVALID_FIELD_ERR_MSG);\n        return field[0];\n    }\n    console.warn(INVALID_FIELD_ERR_MSG + \" will try to get fields instead.\");\n    if (util_1.isString(fields)) {\n        return fields;\n    }\n    if (util_1.isArray(fields) && fields.length) {\n        return fields[0];\n    }\n    if (defaultField) {\n        return defaultField;\n    }\n    throw new TypeError(INVALID_FIELD_ERR_MSG);\n}\nexports.getField = getField;\nfunction getFields(options, defaultFields) {\n    var field = options.field, fields = options.fields;\n    if (util_1.isArray(fields)) {\n        return fields;\n    }\n    if (util_1.isString(fields)) {\n        console.warn(INVALID_FIELDS_ERR_MSG);\n        return [fields];\n    }\n    console.warn(INVALID_FIELDS_ERR_MSG + \" will try to get field instead.\");\n    if (util_1.isString(field)) {\n        console.warn(INVALID_FIELDS_ERR_MSG);\n        return [field];\n    }\n    if (util_1.isArray(field) && field.length) {\n        console.warn(INVALID_FIELDS_ERR_MSG);\n        return field;\n    }\n    if (defaultFields) {\n        return defaultFields;\n    }\n    throw new TypeError(INVALID_FIELDS_ERR_MSG);\n}\nexports.getFields = getFields;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    fields: [],\n    key: 'key',\n    retains: [],\n    value: 'value',\n};\ndata_set_1.DataSet.registerTransform('fold', function (dataView, options) {\n    var columns = dataView.getColumnNames();\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    if (fields.length === 0) {\n        console.warn('warning: option fields is not specified, will fold all columns.');\n        fields = columns;\n    }\n    var key = options.key;\n    var value = options.value;\n    var retains = options.retains;\n    if (!retains || retains.length === 0) {\n        retains = util_1.difference(columns, fields);\n    }\n    var resultRows = [];\n    dataView.rows.forEach(function (row) {\n        fields.forEach(function (field) {\n            var resultRow = util_1.pick(row, retains);\n            resultRow[key] = field;\n            resultRow[value] = row[field];\n            resultRows.push(resultRow);\n        });\n    });\n    dataView.rows = resultRows;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_set_1 = require(\"../data-set\");\nfunction defaultCallback(row) {\n    return row;\n}\ndata_set_1.DataSet.registerTransform('map', function (dataView, options) {\n    dataView.rows = dataView.rows.map(options.callback || defaultCallback);\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar DEFAULT_OPTIONS = {\n    groupBy: [],\n    orderBy: [],\n};\ndata_set_1.DataSet.registerTransform('partition', function (dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    // TODO: rows \u662F\u5426\u90FD\u53EA\u80FD\u662F\u6570\u7EC4\n    // @ts-ignore;\n    dataView.rows = partition_1.default(dataView.rows, options.groupBy, options.orderBy);\n});\nfunction group(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    dataView.rows = util_1.values(partition_1.default(dataView.rows, options.groupBy, options.orderBy));\n}\ndata_set_1.DataSet.registerTransform('group', group);\ndata_set_1.DataSet.registerTransform('groups', group);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar simple_statistics_1 = require(\"simple-statistics\");\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    // field: 'y', // required\n    // dimension: 'x', // required\n    groupBy: [],\n    as: '_percent',\n};\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var field = option_parser_1.getField(options);\n    var dimension = options.dimension, groupBy = options.groupBy;\n    var as = options.as;\n    if (!util_1.isString(dimension)) {\n        throw new TypeError('Invalid dimension: must be a string!');\n    }\n    if (util_1.isArray(as)) {\n        console.warn('Invalid as: must be a string, will use the first element of the array specified.');\n        as = as[0];\n    }\n    if (!util_1.isString(as)) {\n        throw new TypeError('Invalid as: must be a string!');\n    }\n    var rows = dataView.rows;\n    var result = [];\n    var groups = partition_1.default(rows, groupBy);\n    util_1.forIn(groups, function (group) {\n        var totalSum = simple_statistics_1.sum(group.map(function (row) { return row[field]; }));\n        var innerGroups = partition_1.default(group, [dimension]);\n        util_1.forIn(innerGroups, function (innerGroup) {\n            var innerSum = simple_statistics_1.sum(innerGroup.map(function (row) { return row[field]; }));\n            // const resultRow = pick(innerGroup[0], union(groupBy, [ dimension ]));\n            var resultRow = innerGroup[0];\n            // FIXME in case dimension and field is the same\n            var dimensionValue = resultRow[dimension];\n            resultRow[field] = innerSum;\n            resultRow[dimension] = dimensionValue;\n            if (totalSum === 0) {\n                resultRow[as] = 0;\n            }\n            else {\n                resultRow[as] = innerSum / totalSum;\n            }\n            result.push(resultRow);\n        });\n    });\n    dataView.rows = result;\n}\ndata_set_1.DataSet.registerTransform('percent', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\ndata_set_1.DataSet.registerTransform('pick', function (dataView, options) {\n    var columns = option_parser_1.getFields(options, dataView.getColumnNames());\n    dataView.rows = dataView.rows.map(function (row) { return util_1.pick(row, columns); });\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    // field: 'y', // required\n    // dimension: 'x', // required\n    groupBy: [],\n    as: '_proportion',\n};\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var field = option_parser_1.getField(options);\n    var dimension = options.dimension;\n    var groupBy = options.groupBy;\n    var as = options.as;\n    if (!util_1.isString(dimension)) {\n        throw new TypeError('Invalid dimension: must be a string!');\n    }\n    if (util_1.isArray(as)) {\n        console.warn('Invalid as: must be a string, will use the first element of the array specified.');\n        as = as[0];\n    }\n    if (!util_1.isString(as)) {\n        throw new TypeError('Invalid as: must be a string!');\n    }\n    var rows = dataView.rows;\n    var result = [];\n    var groups = partition_1.default(rows, groupBy);\n    util_1.forIn(groups, function (group) {\n        var totalCount = group.length;\n        var innerGroups = partition_1.default(group, [dimension]);\n        util_1.forIn(innerGroups, function (innerGroup) {\n            var innerCount = innerGroup.length;\n            // const resultRow = pick(innerGroup[0], union(groupBy, [ dimension ]));\n            var resultRow = innerGroup[0];\n            // FIXME in case dimension and field is the same\n            var dimensionValue = resultRow[dimension];\n            resultRow[field] = innerCount;\n            resultRow[dimension] = dimensionValue;\n            resultRow[as] = innerCount / totalCount;\n            result.push(resultRow);\n        });\n    });\n    dataView.rows = result;\n}\ndata_set_1.DataSet.registerTransform('proportion', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../data-set\");\nfunction transform(dataView, options) {\n    var map = options.map || {};\n    var cleanMap = {};\n    if (util_1.isPlainObject(map)) {\n        util_1.forIn(map, function (value, key) {\n            if (util_1.isString(value) && util_1.isString(key)) {\n                cleanMap[key] = value;\n            }\n        });\n    }\n    dataView.rows.forEach(function (row) {\n        util_1.forIn(cleanMap, function (newKey, key) {\n            var temp = row[key];\n            delete row[key];\n            row[newKey] = temp;\n        });\n    });\n}\ndata_set_1.DataSet.registerTransform('rename', transform);\ndata_set_1.DataSet.registerTransform('rename-fields', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_set_1 = require(\"../data-set\");\ndata_set_1.DataSet.registerTransform('reverse', function (dataView) {\n    dataView.rows.reverse();\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_set_1 = require(\"../data-set\");\ndata_set_1.DataSet.registerTransform('sort', function (dataView, options) {\n    var columnName = dataView.getColumnName(0);\n    dataView.rows.sort(options.callback || (function (a, b) { return a[columnName] - b[columnName]; }));\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\n/*\n * options: {\n *   type: 'sort-by',\n *   fields: [],\n *   order: 'ASC' // 'DESC'\n * }\n */\nvar VALID_ORDERS = ['ASC', 'DESC'];\nfunction transform(dataView, options) {\n    var fields = option_parser_1.getFields(options, [dataView.getColumnName(0)]);\n    if (!util_1.isArray(fields)) {\n        throw new TypeError('Invalid fields: must be an array with strings!');\n    }\n    dataView.rows = util_1.sortBy(dataView.rows, fields);\n    var order = options.order;\n    if (order && VALID_ORDERS.indexOf(order) === -1) {\n        throw new TypeError(\"Invalid order: \" + order + \" must be one of \" + VALID_ORDERS.join(', '));\n    }\n    else if (order === 'DESC') {\n        dataView.rows.reverse();\n    }\n}\ndata_set_1.DataSet.registerTransform('sort-by', transform);\ndata_set_1.DataSet.registerTransform('sortBy', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\ndata_set_1.DataSet.registerTransform('subset', function (dataView, options) {\n    var startIndex = options.startRowIndex || 0;\n    var endIndex = options.endRowIndex || dataView.rows.length - 1;\n    var columns = option_parser_1.getFields(options, dataView.getColumnNames());\n    dataView.rows = dataView.getSubset(startIndex, endIndex, columns);\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar DEFAULT_OPTIONS = {\n    fillBy: 'group',\n    groupBy: [],\n    orderBy: [],\n};\nfunction arrayDifference(arr1, arr2) {\n    // arrayDifference([1, 1, 1, 2], [1, 2]) => [1, 1]\n    var shadow = arr1.map(function (item) { return item; }); // shadow copy\n    arr2.forEach(function (item) {\n        var index = shadow.indexOf(item);\n        if (index > -1) {\n            shadow.splice(index, 1);\n        }\n    });\n    return shadow;\n}\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var rows = dataView.rows;\n    var groupBy = options.groupBy;\n    var orderBy = options.orderBy;\n    var groups = partition_1.default(rows, groupBy, orderBy);\n    var maxLength = 0;\n    var referenceGroup = [];\n    util_1.forIn(groups, function (group) {\n        if (group.length > maxLength) {\n            maxLength = group.length;\n            referenceGroup = group;\n        }\n    });\n    var referenceOrderByKeys = [];\n    var referenceRowByOrderByKey = {};\n    referenceGroup.forEach(function (row) {\n        var key = orderBy.map(function (col) { return row[col]; }).join('-');\n        referenceOrderByKeys.push(key);\n        referenceRowByOrderByKey[key] = row;\n    });\n    if (options.fillBy === 'order') {\n        var first_1 = referenceGroup[0];\n        var allOrderByKeys_1 = [];\n        var rowByOrderByKey_1 = {};\n        rows.forEach(function (row) {\n            var key = orderBy.map(function (col) { return row[col]; }).join('-');\n            if (allOrderByKeys_1.indexOf(key) === -1) {\n                allOrderByKeys_1.push(key);\n                rowByOrderByKey_1[key] = row;\n            }\n        });\n        var _missingOrderByKeys = arrayDifference(allOrderByKeys_1, referenceOrderByKeys);\n        _missingOrderByKeys.forEach(function (key) {\n            var row = {};\n            groupBy.forEach(function (col) {\n                row[col] = first_1[col];\n            });\n            orderBy.forEach(function (col) {\n                row[col] = rowByOrderByKey_1[key][col];\n            });\n            rows.push(row);\n            referenceGroup.push(row);\n            referenceOrderByKeys.push(key);\n            referenceRowByOrderByKey[key] = row;\n        });\n        maxLength = referenceGroup.length;\n    }\n    util_1.forIn(groups, function (group) {\n        if (group !== referenceGroup && group.length < maxLength) {\n            var first_2 = group[0];\n            // missing orderBy keys\n            var orderByKeys_1 = [];\n            group.forEach(function (row) {\n                orderByKeys_1.push(orderBy.map(function (col) { return row[col]; }).join('-'));\n            });\n            var missingOrderByKeys = arrayDifference(referenceOrderByKeys, orderByKeys_1);\n            missingOrderByKeys.some(function (key, i) {\n                if (i >= maxLength - group.length) {\n                    // group length overflow\n                    return true;\n                }\n                var referenceRow = referenceRowByOrderByKey[key];\n                var row = {};\n                groupBy.forEach(function (col) {\n                    row[col] = first_2[col];\n                });\n                orderBy.forEach(function (col) {\n                    row[col] = referenceRow[col];\n                });\n                rows.push(row);\n                return false;\n            });\n        }\n    });\n}\ndata_set_1.DataSet.registerTransform('fill-rows', transform);\ndata_set_1.DataSet.registerTransform('fillRows', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar simpleStatistics = tslib_1.__importStar(require(\"simple-statistics\"));\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    // field: '', // required\n    // method: 'value', // required\n    // value: 10, // required if (method === 'value')\n    groupBy: [],\n};\nfunction notUndefinedValues(values) {\n    return values.filter(function (value) { return !util_1.isUndefined(value); });\n}\nvar STATISTICS_METHODS = ['mean', 'median', 'max', 'min'];\nvar imputations = {};\nSTATISTICS_METHODS.forEach(function (method) {\n    // @ts-ignore\n    imputations[method] = function (row, values) { return simpleStatistics[method](values); };\n});\nimputations.value = function (_row, _values, value) { return value; };\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var field = option_parser_1.getField(options);\n    var method = options.method;\n    if (!method) {\n        throw new TypeError('Invalid method!');\n    }\n    if (method === 'value' && !util_1.has(options, 'value')) {\n        throw new TypeError('Invalid value: it is nil.');\n    }\n    var column = notUndefinedValues(dataView.getColumn(field));\n    var groups = partition_1.default(dataView.rows, options.groupBy);\n    util_1.forIn(groups, function (group) {\n        var fieldValues = notUndefinedValues(group.map(function (row) { return row[field]; }));\n        if (fieldValues.length === 0) {\n            fieldValues = column;\n        }\n        group.forEach(function (row) {\n            if (util_1.isUndefined(row[field])) {\n                if (util_1.isFunction(method)) {\n                    row[field] = method(row, fieldValues, options.value, group);\n                }\n                else if (util_1.isString(method)) {\n                    row[field] = imputations[method](row, fieldValues, options.value);\n                }\n                else {\n                    throw new TypeError(\"Invalid method: must be a function or one of \" + STATISTICS_METHODS.join(', '));\n                }\n            }\n        });\n    });\n}\ndata_set_1.DataSet.registerTransform('impute', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar simpleStatistics = tslib_1.__importStar(require(\"simple-statistics\"));\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar registerTransform = data_set_1.DataSet.registerTransform;\nvar option_parser_1 = require(\"../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    as: [],\n    fields: [],\n    groupBy: [],\n    operations: [],\n};\nvar DEFAULT_OPERATION = 'count';\nvar aggregates = {\n    count: function (data) {\n        return data.length;\n    },\n    distinct: function (data, field) {\n        var values = util_1.uniq(data.map(function (row) { return row[field]; }));\n        return values.length;\n    },\n};\ndata_set_1.DataSet.CONSTANTS.STATISTICS_METHODS.forEach(function (method) {\n    aggregates[method] = function (data, field) {\n        var values = data.map(function (row) { return row[field]; });\n        if (util_1.isArray(values) && util_1.isArray(values[0])) {\n            values = util_1.flattenDeep(values);\n        }\n        // @ts-ignore\n        return simpleStatistics[method](values);\n    };\n});\naggregates.average = aggregates.mean;\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    if (!util_1.isArray(fields)) {\n        throw new TypeError('Invalid fields: it must be an array with one or more strings!');\n    }\n    var outputNames = options.as || [];\n    if (util_1.isString(outputNames)) {\n        outputNames = [outputNames];\n    }\n    var operations = options.operations;\n    if (util_1.isString(operations)) {\n        operations = [operations];\n    }\n    var DEFAULT_OPERATIONS = [DEFAULT_OPERATION];\n    if (!util_1.isArray(operations) || !operations.length) {\n        console.warn('operations is not defined, will use [ \"count\" ] directly.');\n        operations = DEFAULT_OPERATIONS;\n        outputNames = operations;\n    }\n    if (!(operations.length === 1 && operations[0] === DEFAULT_OPERATION)) {\n        if (operations.length !== fields.length) {\n            throw new TypeError(\"Invalid operations: it's length must be the same as fields!\");\n        }\n        if (outputNames.length !== fields.length) {\n            throw new TypeError(\"Invalid as: it's length must be the same as fields!\");\n        }\n    }\n    var groups = partition_1.default(dataView.rows, options.groupBy);\n    var results = [];\n    util_1.forIn(groups, function (group) {\n        var result = group[0];\n        operations.forEach(function (operation, i) {\n            var outputName = outputNames[i];\n            var field = fields[i];\n            result[outputName] = aggregates[operation](group, field);\n        });\n        results.push(result);\n    });\n    dataView.rows = results;\n}\nregisterTransform('aggregate', transform);\nregisterTransform('summary', transform);\nexports.default = {\n    VALID_AGGREGATES: util_1.keys(aggregates),\n};\n", "(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = { order: 2, precision: 2, period: null };\n\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n\n    return 1 - sse / ssyy;\n  }\n\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n\n        var c = [];\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n          c.push(b);\n          b = 0;\n        }\n        rhs.push(c);\n      }\n      rhs.push(lhs);\n\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n\n      var string = 'y = ';\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nexports.default = (function (extent, bw) {\n    var bandwidth = bw || 1;\n    var _a = tslib_1.__read(extent, 2), min = _a[0], max = _a[1];\n    var values = [];\n    var tmp = min;\n    while (tmp < max) {\n        values.push(tmp);\n        tmp += bandwidth;\n    }\n    values.push(max);\n    return values;\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.nrd = exports.silverman = void 0;\nvar simple_statistics_1 = require(\"simple-statistics\");\nfunction silverman(arr) {\n    var stdev = simple_statistics_1.standardDeviation(arr);\n    var num = 4 * Math.pow(stdev, 5);\n    var denom = 3 * arr.length;\n    return Math.pow(num / denom, 0.2);\n}\nexports.silverman = silverman;\nfunction nrd(arr) {\n    var s = simple_statistics_1.standardDeviation(arr);\n    var iqr = simple_statistics_1.interquartileRange(arr);\n    if (typeof iqr === 'number') {\n        s = Math.min(s, iqr / 1.34);\n    }\n    return 1.06 * s * Math.pow(arr.length, -0.2);\n}\nexports.nrd = nrd;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar regression_1 = tslib_1.__importDefault(require(\"regression\"));\nvar util_1 = require(\"@antv/util\");\nvar get_series_values_1 = tslib_1.__importDefault(require(\"../util/get-series-values\"));\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\nvar bandwidth_1 = require(\"../util/bandwidth\");\nvar DEFAULT_OPTIONS = {\n    as: ['x', 'y'],\n    // fields: [ 'x', 'y' ], // required two fields\n    method: 'linear',\n    // extent: [], // extent to execute regression function, default: [ min(x), max(x) ]\n    // bandwidth: 1, // bandWidth to execute regression function\n    order: 2,\n    precision: 2,\n};\nvar REGRESSION_METHODS = ['linear', 'exponential', 'logarithmic', 'power', 'polynomial'];\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    if (!util_1.isArray(fields) || fields.length !== 2) {\n        throw new TypeError('invalid fields: must be an array of 2 strings.');\n    }\n    var _a = tslib_1.__read(fields, 2), xField = _a[0], yField = _a[1];\n    var method = options.method;\n    if (REGRESSION_METHODS.indexOf(method) === -1) {\n        throw new TypeError(\"invalid method: \" + method + \". Must be one of \" + REGRESSION_METHODS.join(', '));\n    }\n    var points = dataView.rows.map(function (row) { return [row[xField], row[yField]]; });\n    var regressionResult = regression_1.default[method](points, options);\n    var extent = options.extent;\n    if (!util_1.isArray(extent) || extent.length !== 2) {\n        extent = dataView.range(xField);\n    }\n    var bandwidth = options.bandwidth;\n    if (!util_1.isNumber(bandwidth) || bandwidth <= 0) {\n        bandwidth = bandwidth_1.silverman(dataView.getColumn(xField));\n    }\n    var valuesToPredict = get_series_values_1.default(extent, bandwidth);\n    var result = [];\n    var _b = tslib_1.__read(options.as, 2), asX = _b[0], asY = _b[1];\n    valuesToPredict.forEach(function (value) {\n        var row = {};\n        var _a = tslib_1.__read(regressionResult.predict(value), 2), x = _a[0], y = _a[1];\n        row[asX] = x;\n        row[asY] = y;\n        if (isFinite(y)) {\n            result.push(row);\n        }\n    });\n    dataView.rows = result;\n}\ndata_set_1.DataSet.registerTransform('regression', transform);\nexports.default = {\n    REGRESSION_METHODS: REGRESSION_METHODS,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * @reference: https://github.com/jasondavies/science.js/blob/master/src/stats/kernel.js\n * @reference: https://github.com/Planeshifter/kernel-smooth/blob/master/lib/index.js#L16\n */\nfunction uniform(u) {\n    return Math.abs(u) <= 1 ? 0.5 : 0;\n}\nfunction tricubed(u) {\n    var abs = 1 - Math.pow(Math.abs(u), 3);\n    return Math.pow(abs, 3);\n}\nexports.default = {\n    boxcar: uniform,\n    cosine: function (u) {\n        if (Math.abs(u) <= 1) {\n            return (Math.PI / 4) * Math.cos((Math.PI / 2) * u);\n        }\n        return 0;\n    },\n    epanechnikov: function (u) {\n        return Math.abs(u) < 1 ? 0.75 * (1 - u * u) : 0;\n    },\n    gaussian: function (u) {\n        // return 1 / Math.sqrt(2 * Math.PI) * Math.exp(-0.5 * u * u);\n        return 0.3989422804 * Math.exp(-0.5 * u * u);\n    },\n    quartic: function (u) {\n        if (Math.abs(u) < 1) {\n            var tmp = 1 - u * u;\n            return (15 / 16) * tmp * tmp;\n        }\n        return 0;\n    },\n    triangular: function (u) {\n        var abs = Math.abs(u);\n        return abs < 1 ? 1 - abs : 0;\n    },\n    tricube: function (u) {\n        return Math.abs(u) < 1 ? (70 / 81) * tricubed(u) : 0;\n    },\n    triweight: function (u) {\n        if (Math.abs(u) < 1) {\n            var tmp = 1 - u * u;\n            return (35 / 32) * tmp * tmp * tmp;\n        }\n        return 0;\n    },\n    uniform: uniform,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/*\n * kernel density estimation\n */\nvar util_1 = require(\"@antv/util\");\nvar get_series_values_1 = tslib_1.__importDefault(require(\"../util/get-series-values\"));\nvar kernel_1 = tslib_1.__importDefault(require(\"../util/kernel\"));\nvar bandwidth = tslib_1.__importStar(require(\"../util/bandwidth\"));\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\nvar simple_statistics_1 = require(\"simple-statistics\");\nvar DEFAULT_OPTIONS = {\n    minSize: 0.01,\n    as: ['key', 'y', 'size'],\n    // fields: [ 'y1', 'y2' ], // required, one or more fields\n    extent: [],\n    method: 'gaussian',\n    bandwidth: 'nrd',\n    step: 0,\n    groupBy: [],\n};\nvar KERNEL_METHODS = util_1.keys(kernel_1.default);\nvar BANDWIDTH_METHODS = util_1.keys(bandwidth);\nfunction transform(dv, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    if (!util_1.isArray(fields) || fields.length < 1) {\n        throw new TypeError('invalid fields: must be an array of at least 1 strings!');\n    }\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 3) {\n        throw new TypeError('invalid as: must be an array of 3 strings!');\n    }\n    var method = options.method;\n    if (util_1.isString(method)) {\n        if (KERNEL_METHODS.indexOf(method) === -1) {\n            throw new TypeError(\"invalid method: \" + method + \". Must be one of \" + KERNEL_METHODS.join(', '));\n        }\n        method = kernel_1.default[method];\n    }\n    if (!util_1.isFunction(method)) {\n        throw new TypeError('invalid method: kernel method must be a function!');\n    }\n    var extent = options.extent;\n    if (!util_1.isArray(extent) || extent.length === 0) {\n        var rangeArr_1 = [];\n        util_1.each(fields, function (field) {\n            var range = dv.range(field);\n            rangeArr_1 = rangeArr_1.concat(range);\n        });\n        extent = [Math.min.apply(Math, tslib_1.__spread(rangeArr_1)), Math.max.apply(Math, tslib_1.__spread(rangeArr_1))];\n    }\n    var bw = options.bandwidth;\n    if (util_1.isString(bw) && bandwidth[bw]) {\n        bw = bandwidth[bw](dv.getColumn(fields[0]));\n    }\n    else if (util_1.isFunction(bw)) {\n        bw = bw(dv.getColumn(fields[0]));\n    }\n    else if (!util_1.isNumber(bw) || bw <= 0) {\n        bw = bandwidth.nrd(dv.getColumn(fields[0]));\n    }\n    var seriesValues = get_series_values_1.default(extent, options.step ? options.step : bw);\n    var result = [];\n    var groupBy = options.groupBy;\n    var groups = partition_1.default(dv.rows, groupBy);\n    util_1.forIn(groups, function (group) {\n        var probalityDensityFunctionByField = {};\n        util_1.each(fields, function (field) {\n            var row = util_1.pick(group[0], groupBy);\n            probalityDensityFunctionByField[field] = simple_statistics_1.kernelDensityEstimation(group.map(function (item) { return item[field]; }), method, bw);\n            var _a = tslib_1.__read(as, 3), key = _a[0], y = _a[1], size = _a[2];\n            row[key] = field;\n            row[y] = [];\n            row[size] = [];\n            util_1.each(seriesValues, function (yValue) {\n                var sizeValue = probalityDensityFunctionByField[field](yValue);\n                if (sizeValue >= options.minSize) {\n                    row[y].push(yValue);\n                    row[size].push(sizeValue);\n                }\n            });\n            result.push(row);\n        });\n    });\n    dv.rows = result;\n}\ndata_set_1.DataSet.registerTransform('kernel-density-estimation', transform);\ndata_set_1.DataSet.registerTransform('kde', transform);\ndata_set_1.DataSet.registerTransform('KDE', transform);\nexports.default = {\n    KERNEL_METHODS: KERNEL_METHODS,\n    BANDWIDTH_METHODS: BANDWIDTH_METHODS,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    as: ['x', 'y', 'count'],\n    bins: [30, 30],\n    offset: [0, 0],\n    sizeByCount: false,\n};\nvar SQRT3 = Math.sqrt(3);\nvar THIRD_PI = Math.PI / 3;\nvar ANGLES = [0, THIRD_PI, 2 * THIRD_PI, 3 * THIRD_PI, 4 * THIRD_PI, 5 * THIRD_PI];\nfunction distance(x0, y0, x1, y1) {\n    return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\n}\nfunction nearestBinsCenters(value, scale, offset) {\n    var temp = value - offset;\n    scale = scale / 2;\n    var div = Math.floor(temp / scale);\n    var rounded = scale * (div + (Math.abs(div % 2) === 1 ? 1 : 0));\n    var roundedScaled = scale * (div + (Math.abs(div % 2) === 1 ? 0 : 1));\n    return [rounded + offset, roundedScaled + offset];\n}\nfunction generateBins(points, binWidth, offset) {\n    if (binWidth === void 0) { binWidth = [1, 1]; }\n    if (offset === void 0) { offset = [0, 0]; }\n    // processing aligned data\n    var bins = {};\n    var _a = tslib_1.__read(binWidth, 2), binWidthX = _a[0], binWidthY = _a[1];\n    var _b = tslib_1.__read(offset, 2), offsetX = _b[0], offsetY = _b[1];\n    points.forEach(function (point) {\n        var _a, _b;\n        var _c = tslib_1.__read(point, 2), x = _c[0], y = _c[1];\n        // step3.1: nearest two centers\n        var _d = tslib_1.__read(nearestBinsCenters(x, binWidthX, offsetX), 2), xRounded = _d[0], xRoundedScaled = _d[1];\n        var _e = tslib_1.__read(nearestBinsCenters(y, binWidthY, offsetY), 2), yRounded = _e[0], yRoundedScaled = _e[1];\n        // step3.2: compare distances\n        var d1 = distance(x, y, xRounded, yRounded);\n        var d2 = distance(x, y, xRoundedScaled, yRoundedScaled);\n        var binKey;\n        var binX;\n        var binY;\n        if (d1 < d2) {\n            binKey = \"x\" + xRounded + \"y\" + yRounded;\n            _a = tslib_1.__read([xRounded, yRounded], 2), binX = _a[0], binY = _a[1];\n        }\n        else {\n            binKey = \"x\" + xRoundedScaled + \"y\" + yRoundedScaled;\n            _b = tslib_1.__read([xRoundedScaled, yRoundedScaled], 2), binX = _b[0], binY = _b[1];\n        }\n        bins[binKey] = bins[binKey] || {\n            x: binX,\n            y: binY,\n            count: 0,\n        };\n        bins[binKey].count++;\n    });\n    return bins;\n}\nfunction transform(dataView, options) {\n    // step1: get binWidth, etc.\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    if (!util_1.isArray(fields) || fields.length !== 2) {\n        throw new TypeError('Invalid fields: it must be an array with 2 strings!');\n    }\n    var _a = tslib_1.__read(fields, 2), fieldX = _a[0], fieldY = _a[1];\n    var rangeFieldX = dataView.range(fieldX);\n    var rangeFieldY = dataView.range(fieldY);\n    var widthX = rangeFieldX[1] - rangeFieldX[0];\n    var widthY = rangeFieldY[1] - rangeFieldY[0];\n    var binWidth = options.binWidth || [];\n    if (binWidth.length !== 2) {\n        var _b = tslib_1.__read(options.bins, 2), binsX = _b[0], binsY = _b[1];\n        if (binsX <= 0 || binsY <= 0) {\n            throw new TypeError('Invalid bins: must be an array with two positive numbers (e.g. [ 30, 30 ])!');\n        }\n        binWidth = [widthX / binsX, widthY / binsY];\n    }\n    // step2: align scale (squash Y)\n    /*\n     * binWidthX / binWidthY should be Math.sqrt3 / 1.5\n     * -: binWidthX |: binWidthY\n     *           3\n     *           |\n     *   4       |        2\n     *           |\n     *           |\n     *   5----------------1\n     *\n     *           0\n     */\n    var _c = tslib_1.__read(options.offset, 2), offsetX = _c[0], offsetY = _c[1];\n    var yScale = (3 * binWidth[0]) / (SQRT3 * binWidth[1]);\n    // const yScale = binWidth[0] / (SQRT3 * binWidth[1]);\n    var points = dataView.rows.map(function (row) { return [row[fieldX], yScale * row[fieldY]]; });\n    // step3: binning\n    var bins = generateBins(points, [binWidth[0], yScale * binWidth[1]], [offsetX, yScale * offsetY]);\n    // step4: restore scale (for Y)\n    var _d = tslib_1.__read(options.as, 3), asX = _d[0], asY = _d[1], asCount = _d[2];\n    if (!asX || !asY || !asCount) {\n        throw new TypeError('Invalid as: it must be an array with three elements (e.g. [ \"x\", \"y\", \"count\" ])!');\n    }\n    var radius = binWidth[0] / SQRT3;\n    var hexagonPoints = ANGLES.map(function (angle) { return [Math.sin(angle) * radius, -Math.cos(angle) * radius]; });\n    var result = [];\n    var maxCount = 0;\n    if (options.sizeByCount) {\n        util_1.forIn(bins, function (bin) {\n            if (bin.count > maxCount) {\n                maxCount = bin.count;\n            }\n        });\n    }\n    util_1.forIn(bins, function (bin) {\n        var x = bin.x, y = bin.y, count = bin.count;\n        var row = {};\n        row[asCount] = count;\n        if (options.sizeByCount) {\n            row[asX] = hexagonPoints.map(function (p) { return x + (bin.count / maxCount) * p[0]; });\n            row[asY] = hexagonPoints.map(function (p) { return (y + (bin.count / maxCount) * p[1]) / yScale; });\n        }\n        else {\n            row[asX] = hexagonPoints.map(function (p) { return x + p[0]; });\n            row[asY] = hexagonPoints.map(function (p) { return (y + p[1]) / yScale; });\n        }\n        result.push(row);\n    });\n    dataView.rows = result;\n}\ndata_set_1.DataSet.registerTransform('bin.hexagon', transform);\ndata_set_1.DataSet.registerTransform('bin.hex', transform);\ndata_set_1.DataSet.registerTransform('hexbin', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar partition_1 = tslib_1.__importDefault(require(\"../../util/partition\"));\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    as: ['x', 'count'],\n    bins: undefined,\n    offset: 0,\n    groupBy: [],\n};\nfunction nearestBin(value, scale, offset) {\n    var temp = value - offset;\n    var div = Math.floor(temp / scale);\n    return [div * scale + offset, (div + 1) * scale + offset];\n}\n/** Sturges formula */\nfunction sturges(dataLength) {\n    return Math.ceil(Math.log(dataLength) / Math.LN2) + 1;\n}\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var field = option_parser_1.getField(options);\n    if (dataView.rows.length === 0) {\n        return;\n    }\n    var range = dataView.range(field);\n    var width = range[1] - range[0];\n    var binWidth = options.binWidth;\n    var bins = options.bins;\n    if (!binWidth && bins) {\n        if (bins <= 0) {\n            throw new TypeError('Invalid bins: it must be a positive number!');\n        }\n        binWidth = width / bins;\n    }\n    if (!binWidth && !bins) {\n        var binNumber = sturges(dataView.rows.length);\n        binWidth = width / binNumber;\n    }\n    var offset = options.offset % binWidth;\n    // grouping\n    var rows = [];\n    var groupBy = options.groupBy;\n    var groups = partition_1.default(dataView.rows, groupBy);\n    util_1.forIn(groups, function (group) {\n        var bins = {};\n        var column = group.map(function (row) { return row[field]; });\n        column.forEach(function (value) {\n            var _a = tslib_1.__read(nearestBin(value, binWidth, offset), 2), x0 = _a[0], x1 = _a[1];\n            var binKey = x0 + \"-\" + x1;\n            bins[binKey] = bins[binKey] || {\n                x0: x0,\n                x1: x1,\n                count: 0,\n            };\n            bins[binKey].count++;\n        });\n        var _a = tslib_1.__read(options.as, 2), asX = _a[0], asCount = _a[1];\n        if (!asX || !asCount) {\n            throw new TypeError('Invalid as: it must be an array with 2 elements (e.g. [ \"x\", \"count\" ])!');\n        }\n        var meta = util_1.pick(group[0], groupBy);\n        util_1.forIn(bins, function (bin) {\n            var row = util_1.assign({}, meta);\n            row[asX] = [bin.x0, bin.x1];\n            row[asCount] = bin.count;\n            rows.push(row);\n        });\n    });\n    dataView.rows = rows;\n}\ndata_set_1.DataSet.registerTransform('bin.histogram', transform);\ndata_set_1.DataSet.registerTransform('bin.dot', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar simple_statistics_1 = require(\"simple-statistics\");\nvar partition_1 = tslib_1.__importDefault(require(\"../../util/partition\"));\nvar p_by_fraction_1 = tslib_1.__importDefault(require(\"../../util/p-by-fraction\"));\nvar data_set_1 = require(\"../../data-set\");\nvar registerTransform = data_set_1.DataSet.registerTransform;\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    as: '_bin',\n    groupBy: [],\n    fraction: 4,\n};\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var field = option_parser_1.getField(options);\n    var as = options.as;\n    if (!util_1.isString(as)) {\n        throw new TypeError('Invalid as: it must be a string (e.g. \"_bin\")!');\n    }\n    var pArray = options.p;\n    var fraction = options.fraction;\n    if (!util_1.isArray(pArray) || pArray.length === 0) {\n        pArray = p_by_fraction_1.default(fraction);\n    }\n    var rows = dataView.rows;\n    var groupBy = options.groupBy;\n    var groups = partition_1.default(rows, groupBy);\n    var result = [];\n    util_1.forIn(groups, function (group) {\n        // const resultRow = pick(group[0], groupBy);\n        var resultRow = group[0];\n        var binningColumn = group.map(function (row) { return row[field]; });\n        var quantiles = pArray.map(function (p) { return simple_statistics_1.quantile(binningColumn, p); });\n        resultRow[as] = quantiles;\n        result.push(resultRow);\n    });\n    dataView.rows = result;\n}\nregisterTransform('bin.quantile', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar registerTransform = data_set_1.DataSet.registerTransform;\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    as: ['x', 'y', 'count'],\n    bins: [30, 30],\n    offset: [0, 0],\n    sizeByCount: false,\n};\nfunction nearestBin(value, scale, offset) {\n    var temp = value - offset;\n    var div = Math.floor(temp / scale);\n    return [div * scale + offset, (div + 1) * scale + offset];\n}\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var _a = tslib_1.__read(option_parser_1.getFields(options), 2), fieldX = _a[0], fieldY = _a[1];\n    if (!fieldX || !fieldY) {\n        throw new TypeError('Invalid fields: must be an array with 2 strings!');\n    }\n    var rangeFieldX = dataView.range(fieldX);\n    var rangeFieldY = dataView.range(fieldY);\n    var widthX = rangeFieldX[1] - rangeFieldX[0];\n    var widthY = rangeFieldY[1] - rangeFieldY[0];\n    var binWidth = options.binWidth || [];\n    if (binWidth.length !== 2) {\n        var _b = tslib_1.__read(options.bins, 2), binsX = _b[0], binsY = _b[1];\n        if (binsX <= 0 || binsY <= 0) {\n            throw new TypeError('Invalid bins: must be an array with 2 positive numbers (e.g. [ 30, 30 ])!');\n        }\n        binWidth = [widthX / binsX, widthY / binsY];\n    }\n    var points = dataView.rows.map(function (row) { return [row[fieldX], row[fieldY]]; });\n    var bins = {};\n    var _c = tslib_1.__read(options.offset, 2), offsetX = _c[0], offsetY = _c[1];\n    points.forEach(function (point) {\n        var _a = tslib_1.__read(nearestBin(point[0], binWidth[0], offsetX), 2), x0 = _a[0], x1 = _a[1];\n        var _b = tslib_1.__read(nearestBin(point[1], binWidth[1], offsetY), 2), y0 = _b[0], y1 = _b[1];\n        var binKey = x0 + \"-\" + x1 + \"-\" + y0 + \"-\" + y1;\n        bins[binKey] = bins[binKey] || {\n            x0: x0,\n            x1: x1,\n            y0: y0,\n            y1: y1,\n            count: 0,\n        };\n        bins[binKey].count++;\n    });\n    var rows = [];\n    var _d = tslib_1.__read(options.as, 3), asX = _d[0], asY = _d[1], asCount = _d[2];\n    if (!asX || !asY || !asCount) {\n        throw new TypeError('Invalid as: it must be an array with 3 strings (e.g. [ \"x\", \"y\", \"count\" ])!');\n    }\n    /* points\n     * 3---2\n     * |   |\n     * 0---1\n     */\n    if (!options.sizeByCount) {\n        util_1.forIn(bins, function (bin) {\n            var row = {};\n            row[asX] = [bin.x0, bin.x1, bin.x1, bin.x0];\n            row[asY] = [bin.y0, bin.y0, bin.y1, bin.y1];\n            row[asCount] = bin.count;\n            rows.push(row);\n        });\n    }\n    else {\n        var maxCount_1 = 0;\n        util_1.forIn(bins, function (bin) {\n            if (bin.count > maxCount_1) {\n                maxCount_1 = bin.count;\n            }\n        });\n        util_1.forIn(bins, function (bin) {\n            var x0 = bin.x0, x1 = bin.x1, y0 = bin.y0, y1 = bin.y1, count = bin.count;\n            var scale = count / maxCount_1;\n            var _a = tslib_1.__read([(x0 + x1) / 2, (y0 + y1) / 2], 2), cx = _a[0], cy = _a[1];\n            var rx = ((x1 - x0) * scale) / 2;\n            var ry = ((y1 - y0) * scale) / 2;\n            var x01 = cx - rx;\n            var x11 = cx + rx;\n            var y01 = cy - ry;\n            var y11 = cy + ry;\n            var row = {};\n            row[asX] = [x01, x11, x11, x01];\n            row[asY] = [y01, y01, y11, y11];\n            row[asCount] = count;\n            rows.push(row);\n        });\n    }\n    dataView.rows = rows;\n}\nregisterTransform('bin.rectangle', transform);\nregisterTransform('bin.rect', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar registerTransform = data_set_1.DataSet.registerTransform;\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    // field: 'name', // required\n    // geoView: view, // required\n    // geoDataView: view, // alias\n    as: ['_centroid_x', '_centroid_y'],\n};\nfunction transform(view, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var field = option_parser_1.getField(options);\n    // @ts-ignore\n    var geoView = options.geoView || options.geoDataView; // alias\n    if (util_1.isString(geoView) && view.dataSet) {\n        geoView = view.dataSet.getView(geoView);\n    }\n    if (!geoView || geoView.dataType !== 'geo') {\n        throw new TypeError('Invalid geoView: must be a DataView of GEO dataType!');\n    }\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 2) {\n        throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ \"cX\", \"cY\" ])!');\n    }\n    var centroidX = as[0];\n    var centroidY = as[1];\n    view.rows.forEach(function (row) {\n        var feature = geoView.geoFeatureByName(row[field]);\n        if (feature) {\n            if (geoView._projectedAs) {\n                row[centroidX] = feature[geoView._projectedAs[2]];\n                row[centroidY] = feature[geoView._projectedAs[3]];\n            }\n            else {\n                row[centroidX] = feature.centroidX;\n                row[centroidY] = feature.centroidY;\n            }\n        }\n    });\n}\nregisterTransform('geo.centroid', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar d3_geo_1 = require(\"d3-geo\");\nvar point_at_length_1 = tslib_1.__importDefault(require(\"point-at-length\"));\nvar data_set_1 = require(\"../../data-set\");\nvar registerTransform = data_set_1.DataSet.registerTransform;\nvar get_geo_projection_1 = tslib_1.__importDefault(require(\"../../util/get-geo-projection\"));\nvar DEFAULT_OPTIONS = {\n    // projection: '', // default to null\n    as: ['_x', '_y', '_centroid_x', '_centroid_y'],\n};\nfunction transform(dataView, options) {\n    if (dataView.dataType !== 'geo' && dataView.dataType !== 'geo-graticule') {\n        throw new TypeError('Invalid dataView: this transform is for Geo data only!');\n    }\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var projection = options.projection;\n    if (!projection) {\n        throw new TypeError('Invalid projection!');\n    }\n    projection = get_geo_projection_1.default(projection);\n    // @ts-ignore;\n    var geoPathGenerator = d3_geo_1.geoPath(projection);\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 4) {\n        throw new TypeError('Invalid as: it must be an array with 4 strings (e.g. [ \"x\", \"y\", \"cX\", \"cY\" ])!');\n    }\n    dataView._projectedAs = as;\n    var _a = tslib_1.__read(as, 4), lonField = _a[0], latField = _a[1], centroidX = _a[2], centroidY = _a[3];\n    dataView.rows.forEach(function (row) {\n        row[lonField] = [];\n        row[latField] = [];\n        var pathData = geoPathGenerator(row);\n        if (pathData) {\n            // TODO projection returns null\n            var points = point_at_length_1.default(pathData);\n            points._path.forEach(function (point) {\n                row[lonField].push(point[1]);\n                row[latField].push(point[2]);\n            });\n            var centroid = geoPathGenerator.centroid(row);\n            row[centroidX] = centroid[0];\n            row[centroidY] = centroid[1];\n        }\n    });\n    dataView.rows = dataView.rows.filter(function (row) { return row[lonField].length !== 0; });\n}\nregisterTransform('geo.projection', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar registerTransform = data_set_1.DataSet.registerTransform;\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    // field: 'name', // required\n    // geoView: view, // required\n    // geoDataView: view, // alias\n    as: ['_x', '_y'],\n};\nfunction transform(view, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var field = option_parser_1.getField(options);\n    // @ts-ignore\n    var geoView = options.geoView || options.geoDataView; // alias\n    if (util_1.isString(geoView)) {\n        geoView = view.dataSet.getView(geoView);\n    }\n    if (!geoView || geoView.dataType !== 'geo') {\n        throw new TypeError('Invalid geoView: must be a DataView of GEO dataType!');\n    }\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 2) {\n        throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ \"x\", \"y\" ])!');\n    }\n    var lonField = as[0];\n    var latField = as[1];\n    view.rows.forEach(function (row) {\n        var feature = geoView.geoFeatureByName(row[field]);\n        if (feature) {\n            if (geoView._projectedAs) {\n                row[lonField] = feature[geoView._projectedAs[0]];\n                row[latField] = feature[geoView._projectedAs[1]];\n            }\n            else {\n                row[lonField] = feature.longitude;\n                row[latField] = feature.latitude;\n            }\n        }\n    });\n}\nregisterTransform('geo.region', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * for Arc Diagram (edges without weight) / Chord Diagram (edges with source and target weight)\n * graph data required (nodes, edges)\n */\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar DEFAULT_OPTIONS = {\n    y: 0,\n    thickness: 0.05,\n    weight: false,\n    marginRatio: 0.1,\n    id: function (node) { return node.id; },\n    source: function (edge) { return edge.source; },\n    target: function (edge) { return edge.target; },\n    sourceWeight: function (edge) { return edge.value || 1; },\n    targetWeight: function (edge) { return edge.value || 1; },\n    sortBy: null,\n};\nfunction _nodesFromEdges(edges, options, map) {\n    if (map === void 0) { map = {}; }\n    edges.forEach(function (edge) {\n        var sId = options.edgeSource(edge);\n        var tId = options.edgeTarget(edge);\n        if (!map[sId]) {\n            map[sId] = {\n                id: sId,\n            };\n        }\n        if (!map[tId]) {\n            map[tId] = {\n                id: tId,\n            };\n        }\n    });\n    return util_1.values(map);\n}\nfunction _processGraph(nodeById, edges, options) {\n    util_1.forIn(nodeById, function (node, id) {\n        // in edges, out edges\n        node.inEdges = edges.filter(function (edge) { return \"\" + options.target(edge) === \"\" + id; });\n        node.outEdges = edges.filter(function (edge) { return \"\" + options.source(edge) === \"\" + id; });\n        // frequency\n        node.edges = node.outEdges.concat(node.inEdges);\n        node.frequency = node.edges.length;\n        // weight\n        node.value = 0;\n        node.inEdges.forEach(function (edge) {\n            node.value += options.targetWeight(edge);\n        });\n        node.outEdges.forEach(function (edge) {\n            node.value += options.sourceWeight(edge);\n        });\n    });\n}\nfunction _sortNodes(nodes, options) {\n    var sortMethods = {\n        weight: function (a, b) { return b.value - a.value; },\n        frequency: function (a, b) { return b.frequency - a.frequency; },\n        id: function (a, b) { return (\"\" + options.id(a)).localeCompare(\"\" + options.id(b)); },\n    };\n    var method = sortMethods[options.sortBy];\n    if (!method && util_1.isFunction(options.sortBy)) {\n        method = options.sortBy;\n    }\n    if (method) {\n        nodes.sort(method);\n    }\n}\nfunction _layoutNodes(nodes, options) {\n    var len = nodes.length;\n    if (!len) {\n        throw new TypeError(\"Invalid nodes: it's empty!\");\n    }\n    if (options.weight) {\n        var marginRatio_1 = options.marginRatio;\n        if (marginRatio_1 < 0 || marginRatio_1 >= 1) {\n            throw new TypeError('Invalid marginRatio: it must be in range [0, 1)!');\n        }\n        var margin_1 = marginRatio_1 / (2 * len);\n        var thickness_1 = options.thickness;\n        if (thickness_1 <= 0 || thickness_1 >= 1) {\n            throw new TypeError('Invalid thickness: it must be in range (0, 1)!');\n        }\n        var totalValue_1 = 0;\n        nodes.forEach(function (node) {\n            totalValue_1 += node.value;\n        });\n        nodes.forEach(function (node) {\n            node.weight = node.value / totalValue_1;\n            node.width = node.weight * (1 - marginRatio_1);\n            node.height = thickness_1;\n        });\n        nodes.forEach(function (node, index) {\n            // x\n            var deltaX = 0;\n            for (var i = index - 1; i >= 0; i--) {\n                deltaX += nodes[i].width + 2 * margin_1;\n            }\n            var minX = (node.minX = margin_1 + deltaX);\n            var maxX = (node.maxX = node.minX + node.width);\n            var minY = (node.minY = options.y - thickness_1 / 2);\n            var maxY = (node.maxY = minY + thickness_1);\n            node.x = [minX, maxX, maxX, minX];\n            node.y = [minY, minY, maxY, maxY];\n            /* points\n             * 3---2\n             * |   |\n             * 0---1\n             */\n            // node.x = minX + 0.5 * node.width;\n            // node.y = options.y;\n        });\n    }\n    else {\n        var deltaX_1 = 1 / len;\n        nodes.forEach(function (node, index) {\n            node.x = (index + 0.5) * deltaX_1;\n            node.y = options.y;\n        });\n    }\n}\nfunction _locatingEdges(nodeById, edges, options) {\n    if (options.weight) {\n        var valueById_1 = {};\n        util_1.forIn(nodeById, function (node, id) {\n            valueById_1[id] = node.value;\n        });\n        edges.forEach(function (edge) {\n            var sId = options.source(edge);\n            var tId = options.target(edge);\n            var sNode = nodeById[sId];\n            var tNode = nodeById[tId];\n            if (sNode && tNode) {\n                var sValue = valueById_1[sId];\n                var currentSValue = options.sourceWeight(edge);\n                var sStart = sNode.minX + ((sNode.value - sValue) / sNode.value) * sNode.width;\n                var sEnd = sStart + (currentSValue / sNode.value) * sNode.width;\n                valueById_1[sId] -= currentSValue;\n                var tValue = valueById_1[tId];\n                var currentTValue = options.targetWeight(edge);\n                var tStart = tNode.minX + ((tNode.value - tValue) / tNode.value) * tNode.width;\n                var tEnd = tStart + (currentTValue / tNode.value) * tNode.width;\n                valueById_1[tId] -= currentTValue;\n                var y = options.y;\n                edge.x = [sStart, sEnd, tStart, tEnd];\n                edge.y = [y, y, y, y];\n            }\n        });\n    }\n    else {\n        edges.forEach(function (edge) {\n            var sNode = nodeById[options.source(edge)];\n            var tNode = nodeById[options.target(edge)];\n            if (sNode && tNode) {\n                edge.x = [sNode.x, tNode.x];\n                edge.y = [sNode.y, tNode.y];\n            }\n        });\n    }\n}\nfunction transform(dv, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var nodeById = {};\n    var nodes = dv.nodes;\n    var edges = dv.edges;\n    if (!util_1.isArray(nodes) || nodes.length === 0) {\n        nodes = _nodesFromEdges(edges, options, nodeById);\n    }\n    nodes.forEach(function (node) {\n        var id = options.id(node);\n        nodeById[id] = node;\n    });\n    _processGraph(nodeById, edges, options);\n    _sortNodes(nodes, options);\n    _layoutNodes(nodes, options);\n    _locatingEdges(nodeById, edges, options);\n    dv.nodes = nodes;\n    dv.edges = edges;\n}\ndata_set_1.DataSet.registerTransform('diagram.arc', transform);\ndata_set_1.DataSet.registerTransform('arc', transform);\n", "var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n", "var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n", "module.exports = require('./forEach');\n", "var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n", "var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n", "var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n", "/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;\n", "/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n", "/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;\n", "var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;\n", "var baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n", "var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n", "var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    stringSize = require('./_stringSize');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nmodule.exports = size;\n", "var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n", "var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n", "var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n", "var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n", "/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = {\n      clone: require(\"lodash/clone\"),\n      constant: require(\"lodash/constant\"),\n      each: require(\"lodash/each\"),\n      filter: require(\"lodash/filter\"),\n      has:  require(\"lodash/has\"),\n      isArray: require(\"lodash/isArray\"),\n      isEmpty: require(\"lodash/isEmpty\"),\n      isFunction: require(\"lodash/isFunction\"),\n      isUndefined: require(\"lodash/isUndefined\"),\n      keys: require(\"lodash/keys\"),\n      map: require(\"lodash/map\"),\n      reduce: require(\"lodash/reduce\"),\n      size: require(\"lodash/size\"),\n      transform: require(\"lodash/transform\"),\n      union: require(\"lodash/union\"),\n      values: require(\"lodash/values\")\n    };\n  } catch (e) {\n    // continue regardless of error\n  }\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n", "\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\";\nvar GRAPH_NODE = \"\\x00\";\nvar EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._in[v]);\n  });\n};\n\nGraph.prototype.sinks = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._out[v]);\n  });\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  var self = this;\n  _.each(vs, function(v) {\n    if (args.length > 1) {\n      self.setNode(v, value);\n    } else {\n      self.setNode(v);\n    }\n  });\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), function(child) {\n        self.setParent(child);\n      });\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n      !_.isUndefined(ancestor);\n      ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.isLeaf = function (v) {\n  var neighbors;\n  if (this.isDirected()) {\n    neighbors = this.successors(v);\n  } else {\n    neighbors = this.neighbors(v);\n  }\n  return neighbors.length === 0;\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  var self = this;\n  _.each(this._nodes, function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  });\n\n  _.each(this._edgeObjs, function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, self.edge(e));\n    }\n  });\n\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this;\n  var args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value;\n  var valueSpecified = false;\n  var arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n    ? edgeObjToId(this._isDirected, arguments[0])\n    : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n    ? edgeObjToId(this._isDirected, arguments[0])\n    : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n    ? edgeObjToId(this._isDirected, arguments[0])\n    : edgeArgsToId(this._isDirected, v, w, name));\n  var edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n", "module.exports = '2.1.8';\n", "// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: require(\"./graph\"),\n  version: require(\"./version\")\n};\n", "var _ = require(\"./lodash\");\nvar Graph = require(\"./graph\");\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {};\n  var cmpts = [];\n  var cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _.each(g.successors(v), dfs);\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function(v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = PriorityQueue;\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function() {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function() {\n  return this._arr.map(function(x) { return x.key; });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function(key) {\n  return _.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function(key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function() {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function(key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({key: key, priority: priority});\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function() {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function(key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" +\n        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function(i) {\n  var arr = this._arr;\n  var l = 2 * i;\n  var r = l + 1;\n  var largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function(index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function(i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n", "var _ = require(\"../lodash\");\nvar PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new PriorityQueue();\n  var v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n", "var dijkstra = require(\"./dijkstra\");\nvar _ = require(\"../lodash\");\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function(acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0;\n  var stack = [];\n  var visited = {}; // node id -> { onStack, lowlink, index }\n  var results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [];\n      var w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n", "var _ = require(\"../lodash\");\nvar tarjan = require(\"./tarjan\");\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function(cmpt) {\n    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n  });\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n    weightFn || DEFAULT_WEIGHT_FUNC,\n    edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing", "var topsort = require(\"./topsort\");\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = dfs;\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function(v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) { acc.push(v); }\n    _.each(navigation(v), function(w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) { acc.push(v); }\n  }\n}\n", "var dfs = require(\"./dfs\");\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}\n", "var dfs = require(\"./dfs\");\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}\n", "var _ = require(\"../lodash\");\nvar Graph = require(\"../graph\");\nvar PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph();\n  var parents = {};\n  var pq = new PriorityQueue();\n  var v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v;\n    var pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n", "module.exports = {\n  components: require(\"./components\"),\n  dijkstra: require(\"./dijkstra\"),\n  dijkstraAll: require(\"./dijkstra-all\"),\n  findCycles: require(\"./find-cycles\"),\n  floydWarshall: require(\"./floyd-warshall\"),\n  isAcyclic: require(\"./is-acyclic\"),\n  postorder: require(\"./postorder\"),\n  preorder: require(\"./preorder\"),\n  prim: require(\"./prim\"),\n  tarjan: require(\"./tarjan\"),\n  topsort: require(\"./topsort\")\n};\n", "/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar lib = require(\"./lib\");\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: require(\"./lib/json\"),\n  alg: require(\"./lib/alg\"),\n  version: lib.version\n};\n", "/* global window */\n\nvar graphlib;\n\nif (typeof require === \"function\") {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {\n    // continue regardless of error\n  }\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n", "var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n", "var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n", "var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n", "var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n", "var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n", "var baseFor = require('./_baseFor'),\n    castFunction = require('./_castFunction'),\n    keysIn = require('./keysIn');\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nmodule.exports = forIn;\n", "var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n", "var isSymbol = require('./isSymbol');\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseExtremum;\n", "/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;\n", "var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n", "/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;\n", "var baseExtremum = require('./_baseExtremum'),\n    baseLt = require('./_baseLt'),\n    identity = require('./identity');\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nmodule.exports = min;\n", "var baseExtremum = require('./_baseExtremum'),\n    baseIteratee = require('./_baseIteratee'),\n    baseLt = require('./_baseLt');\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nmodule.exports = minBy;\n", "var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n", "var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n", "var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n", "var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n", "var createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n", "/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n", "var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n", "var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n", "var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n", "var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n", "var toString = require('./toString');\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;\n", "/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nmodule.exports = baseZipObject;\n", "var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n", "/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = {\n      cloneDeep: require(\"lodash/cloneDeep\"),\n      constant: require(\"lodash/constant\"),\n      defaults: require(\"lodash/defaults\"),\n      each: require(\"lodash/each\"),\n      filter: require(\"lodash/filter\"),\n      find: require(\"lodash/find\"),\n      flatten: require(\"lodash/flatten\"),\n      forEach: require(\"lodash/forEach\"),\n      forIn: require(\"lodash/forIn\"),\n      has:  require(\"lodash/has\"),\n      isUndefined: require(\"lodash/isUndefined\"),\n      last: require(\"lodash/last\"),\n      map: require(\"lodash/map\"),\n      mapValues: require(\"lodash/mapValues\"),\n      max: require(\"lodash/max\"),\n      merge: require(\"lodash/merge\"),\n      min: require(\"lodash/min\"),\n      minBy: require(\"lodash/minBy\"),\n      now: require(\"lodash/now\"),\n      pick: require(\"lodash/pick\"),\n      range: require(\"lodash/range\"),\n      reduce: require(\"lodash/reduce\"),\n      sortBy: require(\"lodash/sortBy\"),\n      uniqueId: require(\"lodash/uniqueId\"),\n      values: require(\"lodash/values\"),\n      zipObject: require(\"lodash/zipObject\"),\n    };\n  } catch (e) {\n    // continue regardless of error\n  }\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n", "/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n", "var _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\nvar List = require(\"./data/list\");\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = greedyFAS;\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(_.map(results, function(e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\n    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function(edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function(edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _.forEach(g.nodes(), function(v) {\n    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function(e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function(v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}\n", "\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = (g.graph().acyclicer === \"greedy\"\n    ? greedyFAS(g, weightFn(g))\n    : dfsFAS(g));\n  _.forEach(fas, function(e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function(e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function(e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function(e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n", "/* eslint \"no-console\": off */\n\n\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.forEach(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n", "\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(_.map(g.outEdges(v), function(e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n        rank === undefined || // return value of _.map([]) for Lodash 4\n        rank === null) { // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar Graph = require(\"../graphlib\").Graph;\nvar slack = require(\"./util\").slack;\n\nmodule.exports = feasibleTree;\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function(e) {\n      var edgeV = e.v,\n        w = (v === edgeV) ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function(e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function(v) {\n    g.node(v).rank += delta;\n  });\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar feasibleTree = require(\"./feasible-tree\");\nvar slack = require(\"./util\").slack;\nvar initRank = require(\"./util\").longestPath;\nvar preorder = require(\"../graphlib\").alg.preorder;\nvar postorder = require(\"../graphlib\").alg.postorder;\nvar simplify = require(\"../util\").simplify;\n\nmodule.exports = networkSimplex;\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  initRank(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function(v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function(e) {\n    var isOutEdge = e.v === child,\n      other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n        otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function(w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function(e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function(edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n           flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _.minBy(candidates, function(edge) { return slack(g, edge); });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; });\n  var vs = preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function(v) {\n    var parent = t.node(v).parent,\n      edge = g.edge(v, parent),\n      flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n", "\"use strict\";\n\nvar rankUtil = require(\"./util\");\nvar longestPath = rankUtil.longestPath;\nvar feasibleTree = require(\"./feasible-tree\");\nvar networkSimplex = require(\"./network-simplex\");\n\nmodule.exports = rank;\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch(g.graph().ranker) {\n  case \"network-simplex\": networkSimplexRanker(g); break;\n  case \"tight-tree\": tightTreeRanker(g); break;\n  case \"longest-path\": longestPathRanker(g); break;\n  default: networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n", "var _ = require(\"./lodash\");\n\nmodule.exports = parentDummyChains;\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca &&\n               g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 &&\n               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent &&\n           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n", "var _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  cleanup: cleanup\n};\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, \"root\", {}, \"_root\");\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, \"_bt\");\n  var bottom = util.addBorderNode(g, \"_bb\");\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function(child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function(v) { dfs(v, 1); });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(g.edges(), function(acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n", "var _ = require(\"./lodash\");\nvar util = require(\"./util\");\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n        rank < maxRank;\n        ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n", "\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = {\n  adjust: adjust,\n  undo: undo\n};\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"bt\" || rankDir === \"rl\") {\n    reverseY(g);\n  }\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });\n  _.forEach(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function(v) { reverseYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, \"y\")) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function(v) { swapXYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, \"x\")) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = initOrder;\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _.filter(g.nodes(), function(v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; }));\n  var layers = _.map(_.range(maxRank + 1), function() { return []; });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = crossCount;\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(southLayer,\n    _.map(southLayer, function (v, i) { return i; }));\n  var southEntries = _.flatten(_.map(northLayer, function(v) {\n    return _.sortBy(_.map(g.outEdges(v), function(e) {\n      return { pos: southPos[e.w], weight: g.edge(e).weight };\n    }), \"pos\");\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function() { return 0; });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(southEntries.forEach(function(entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = (index - 1) >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function(v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(inV, function(acc, e) {\n        var edge = g.edge(e),\n          nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + (edge.weight * nodeU.order),\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry[\"in\"].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(_.filter(entries, function(entry) { return !entry.merged; }),\n    function(entry) {\n      return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n    });\n\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n", "var _ = require(\"../lodash\");\nvar util = require(\"../util\");\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function(entry) {\n    return _.has(entry, \"barycenter\");\n  });\n  var sortable = parts.lhs,\n    unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),\n    vs = [],\n    sum = 0,\n    weight = 0,\n    vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function(entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n", "var _ = require(\"../lodash\");\nvar barycenter = require(\"./barycenter\");\nvar resolveConflicts = require(\"./resolve-conflicts\");\nvar sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight: undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n        brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n", "var _ = require(\"../lodash\");\nvar Graph = require(\"../graphlib\").Graph;\n\nmodule.exports = buildLayerGraph;\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n    result = new Graph({ compound: true }).setGraph({ root: root })\n      .setDefaultNodeLabel(function(v) { return g.node(v); });\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v),\n      parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function(e) {\n        var u = e.v === v ? e.w : e.v,\n          edge = result.edge(u, v),\n          weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, \"minRank\")) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId(\"_root\"))));\n  return v;\n}\n", "var _ = require(\"../lodash\");\n\nmodule.exports = addSubgraphConstraints;\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n    rootPrev;\n\n  _.forEach(vs, function(v) {\n    var child = g.parent(v),\n      parent,\n      prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar initOrder = require(\"./init-order\");\nvar crossCount = require(\"./cross-count\");\nvar sortSubgraph = require(\"./sort-subgraph\");\nvar buildLayerGraph = require(\"./build-layer-graph\");\nvar addSubgraphConstraints = require(\"./add-subgraph-constraints\");\nvar Graph = require(\"../graphlib\").Graph;\nvar util = require(\"../util\");\n\nmodule.exports = order;\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n    downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n    upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n    best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function(rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function(lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function(v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar Graph = require(\"../graphlib\").Graph;\nvar util = require(\"../util\");\n\n/*\n * This module provides coordinate assignment based on Brandes and K\u00F6pf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nmodule.exports = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var\n      // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function(v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n        k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i +1), function(scanNode) {\n          _.forEach(g.predecessors(scanNode), function(u) {\n            var uLabel = g.node(u),\n              uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) &&\n                !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function(i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function(u) {\n          var uNode = g.node(u);\n          if (uNode.dummy &&\n              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n      nextNorthPos,\n      southPos = 0;\n\n    _.forEach(south, function(v, southLookahead) {\n      if (g.node(v).dummy === \"border\") {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function(u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n    align = {},\n    pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function(layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function(v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function(w) { return pos[w]; });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v &&\n              prevIdx < pos[w] &&\n              !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n    blockG = buildBlockGraph(g, layering, root, reverseSep),\n    borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function(acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function(acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function(v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n    graphLabel = g.graph(),\n    sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function(layer) {\n    var u;\n    _.forEach(layer, function(v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n          prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n    alignToMin = _.min(alignToVals),\n    alignToMax = _.max(alignToVals);\n\n  _.forEach([\"u\", \"d\"], function(vert) {\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      var alignment = vert + horiz,\n        xs = xss[alignment],\n        delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === \"l\" ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function(ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g);\n  var conflicts = _.merge(\n    findType1Conflicts(g, layering),\n    findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _.forEach([\"u\", \"d\"], function(vert) {\n    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = _.map(adjustedLayering, function(inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === \"u\" ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering,\n        align.root, align.align, horiz === \"r\");\n      if (horiz === \"r\") {\n        xs = _.mapValues(xs, function(x) { return -x; });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function(g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, \"labelpos\")) {\n      switch (vLabel.labelpos.toLowerCase()) {\n      case \"l\": delta = -vLabel.width / 2; break;\n      case \"r\": delta = vLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, \"labelpos\")) {\n      switch (wLabel.labelpos.toLowerCase()) {\n      case \"l\": delta = wLabel.width / 2; break;\n      case \"r\": delta = -wLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n", "\"use strict\";\n\nvar _ = require(\"../lodash\");\nvar util = require(\"../util\");\nvar positionX = require(\"./bk\").positionX;\n\nmodule.exports = position;\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forEach(positionX(g), function(x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _.forEach(layering, function(layer) {\n    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));\n    _.forEach(layer, function(v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\n", "\"use strict\";\n\nvar _ = require(\"./lodash\");\nvar acyclic = require(\"./acyclic\");\nvar normalize = require(\"./normalize\");\nvar rank = require(\"./rank\");\nvar normalizeRanks = require(\"./util\").normalizeRanks;\nvar parentDummyChains = require(\"./parent-dummy-chains\");\nvar removeEmptyRanks = require(\"./util\").removeEmptyRanks;\nvar nestingGraph = require(\"./nesting-graph\");\nvar addBorderSegments = require(\"./add-border-segments\");\nvar coordinateSystem = require(\"./coordinate-system\");\nvar order = require(\"./order\");\nvar position = require(\"./position\");\nvar util = require(\"./util\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function() {\n    var layoutGraph = \n      time(\"  buildLayoutGraph\", function() { return buildLayoutGraph(g); });\n    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n  time(\"    acyclic\",                function() { acyclic.run(g); });\n  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n  time(\"    normalize.run\",          function() { normalize.run(g); });\n  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n  time(\"    order\",                  function() { order(g); });\n  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n  time(\"    position\",               function() { position(g); });\n  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n  time(\"    translateGraph\",         function() { translateGraph(g); });\n  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function(v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" };\nvar graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"];\nvar nodeNumAttrs = [\"width\", \"height\"];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"];\nvar edgeDefaults = {\n  minlen: 1, weight: 1, width: 0, height: 0,\n  labeloffset: 10, labelpos: \"r\"\n};\nvar edgeAttrs = [\"labelpos\"];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_.merge({},\n    graphDefaults,\n    selectNumberAttrs(graph, graphNumAttrs),\n    _.pick(graph, graphAttrs)));\n\n  _.forEach(inputGraph.nodes(), function(v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({},\n      edgeDefaults,\n      selectNumberAttrs(edge, edgeNumAttrs),\n      _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function(v) { getExtremes(g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function(p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, \"x\")) { edge.x -= minX; }\n    if (_.has(edge, \"y\")) { edge.y -= minY; }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n      case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n      case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function(v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_.last(node.borderLeft));\n      var r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function(v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function(layer) {\n    var orderShift = 0;\n    _.forEach(layer, function(v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function(selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + (++orderShift),\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + 2 * dx / 3, y: y - dy },\n        { x: x + 5 * dx / 6, y: y - dy },\n        { x: x +     dx    , y: y },\n        { x: x + 5 * dx / 6, y: y + dy },\n        { x: x + 2 * dx / 3, y: y + dy }\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function(v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n", "var _ = require(\"./lodash\");\nvar util = require(\"./util\");\nvar Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  debugOrdering: debugOrdering\n};\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = util.buildLayerMatrix(g);\n\n  var h = new Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _.forEach(g.nodes(), function(v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, \"layer\" + g.node(v).rank);\n  });\n\n  _.forEach(g.edges(), function(e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _.forEach(layerMatrix, function(layer, i) {\n    var layerV = \"layer\" + i;\n    h.setNode(layerV, { rank: \"same\" });\n    _.reduce(layer, function(u, v) {\n      h.setEdge(u, v, { style: \"invis\" });\n      return v;\n    });\n  });\n\n  return h;\n}\n", "module.exports = \"0.8.5\";\n", "/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nmodule.exports = {\n  graphlib: require(\"./lib/graphlib\"),\n\n  layout: require(\"./lib/layout\"),\n  debug: require(\"./lib/debug\"),\n  util: {\n    time: require(\"./lib/util\").time,\n    notime: require(\"./lib/util\").notime\n  },\n  version: require(\"./lib/version\")\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/*\n * for DAG\n * graph data required (nodes, edges)\n */\nvar util_1 = require(\"@antv/util\");\nvar dagre_1 = tslib_1.__importDefault(require(\"dagre\"));\nvar data_set_1 = require(\"../../data-set\");\nvar DEFAULT_OPTIONS = {\n    // nodeId: node => node.index,\n    rankdir: 'TB',\n    align: 'TB',\n    nodesep: 50,\n    edgesep: 10,\n    ranksep: 50,\n    source: function (edge) { return edge.source; },\n    target: function (edge) { return edge.target; },\n};\nfunction transform(dv, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var g = new dagre_1.default.graphlib.Graph();\n    // Set an object for the graph label\n    g.setGraph({});\n    // Default to assigning a new object as a label for each new edge.\n    g.setDefaultEdgeLabel(function () {\n        return {};\n    });\n    dv.nodes.forEach(function (node) {\n        var nodeId = options.nodeId ? options.nodeId(node) : node.id;\n        if (!node.height && !node.width) {\n            node.height = node.width = options.edgesep;\n        }\n        g.setNode(nodeId, node);\n    });\n    dv.edges.forEach(function (edge) {\n        g.setEdge(options.source(edge), options.target(edge));\n    });\n    dagre_1.default.layout(g);\n    var nodes = [];\n    var edges = [];\n    g.nodes().forEach(function (node) {\n        var n = g.node(node);\n        var x = n.x, y = n.y, height = n.height, width = n.width;\n        /* points\n         * 3---2\n         * |   |\n         * 0---1\n         */\n        // @ts-ignore\n        n.x = [x - width / 2, x + width / 2, x + width / 2, x - width / 2];\n        // @ts-ignore\n        n.y = [y + height / 2, y + height / 2, y - height / 2, y - height / 2];\n        nodes.push(n);\n    });\n    g.edges().forEach(function (edge) {\n        var points = g.edge(edge).points;\n        var e = {};\n        e.x = points.map(function (p) { return p.x; });\n        e.y = points.map(function (p) { return p.y; });\n        edges.push(e);\n    });\n    dv.nodes = nodes;\n    dv.edges = edges;\n}\ndata_set_1.DataSet.registerTransform('diagram.dagre', transform);\ndata_set_1.DataSet.registerTransform('dagre', transform);\n", "export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n", "import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n", "import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it\u2019s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n", "export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n", "export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n", "export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n", "export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n", "import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n", "export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n", "import {ascending, min, sum} from \"d3-array\";\nimport {map, nest} from \"d3-collection\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  var node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nexport default function Sankey() {\n  var x0 = 0, y0 = 0, x1 = 1, y1 = 1, // extent\n      dx = 24, // nodeWidth\n      py = 8, // nodePadding\n      id = defaultId,\n      align = justify,\n      sort,\n      nodes = defaultNodes,\n      links = defaultLinks,\n      iterations = 6;\n\n  function sankey() {\n    var graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (py = +_, sankey) : py;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  // Populate the sourceLinks and targetLinks for each node.\n  // Also, if the source and target are not objects, assume they are indices.\n  function computeNodeLinks(graph) {\n    graph.nodes.forEach(function(node, i) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    });\n    var nodeById = map(graph.nodes, id);\n    graph.links.forEach(function(link, i) {\n      link.index = i;\n      var source = link.source, target = link.target;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    });\n  }\n\n  // Compute the value (size) of each node by summing the associated links.\n  function computeNodeValues(graph) {\n    graph.nodes.forEach(function(node) {\n      node.value = Math.max(\n        sum(node.sourceLinks, value),\n        sum(node.targetLinks, value)\n      );\n    });\n  }\n\n  // Iteratively assign the depth (x-position) for each node.\n  // Nodes are assigned the maximum depth of incoming neighbors plus one;\n  // nodes with no incoming links are assigned depth zero, while\n  // nodes with no outgoing links are assigned the maximum depth.\n  function computeNodeDepths(graph) {\n    var nodes, next, x, n = graph.nodes.length;\n\n    for (nodes = graph.nodes, next = [], x = 0; nodes.length; ++x, nodes = next, next = []) {\n      if (x > n) throw new Error(\"circular link\");\n      nodes.forEach(function(node) {\n        node.depth = x;\n        node.sourceLinks.forEach(function(link) {\n          if (next.indexOf(link.target) < 0) {\n            next.push(link.target);\n          }\n        });\n      });\n    }\n\n    for (nodes = graph.nodes, next = [], x = 0; nodes.length; ++x, nodes = next, next = []) {\n      if (x > n) throw new Error(\"circular link\");\n      nodes.forEach(function(node) {\n        node.height = x;\n        node.targetLinks.forEach(function(link) {\n          if (next.indexOf(link.source) < 0) {\n            next.push(link.source);\n          }\n        });\n      });\n    }\n\n    var kx = (x1 - x0 - dx) / (x - 1);\n    graph.nodes.forEach(function(node) {\n      node.x1 = (node.x0 = x0 + Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x)))) * kx) + dx;\n    });\n  }\n\n  function computeNodeBreadths(graph) {\n    var columns = nest()\n        .key(function(d) { return d.x0; })\n        .sortKeys(ascending)\n        .entries(graph.nodes)\n        .map(function(d) { return d.values; });\n\n    //\n    initializeNodeBreadth();\n    resolveCollisions();\n    for (var alpha = 0.9, n = iterations; n > 0; --n, alpha *= 0.9) {\n      relaxRightToLeft(alpha);\n      resolveCollisions();\n      relaxLeftToRight(alpha);\n      resolveCollisions();\n    }\n\n    function initializeNodeBreadth() {\n      var ky = min(columns, function(nodes) {\n        return (y1 - y0 - (nodes.length - 1) * py) / sum(nodes, value);\n      });\n\n      columns.forEach(function(nodes) {\n        if (sort != null) nodes.sort(sort);\n        nodes.forEach(function(node, i) {\n          node.y1 = (node.y0 = i) + node.value * ky;\n        });\n      });\n\n      graph.links.forEach(function(link) {\n        link.width = link.value * ky;\n      });\n    }\n\n    function relaxLeftToRight(alpha) {\n      columns.forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          let y = node.y0;\n          for (const {target, width, value} of node.sourceLinks.sort(ascendingTargetBreadth)) {\n            if (value > 0) {\n              let dy = 0;\n              for (const {source, width} of target.targetLinks) {\n                if (source === node) break;\n                dy += width + py / 2;\n              }\n              dy = (y - dy - target.y0) * alpha * (value / Math.min(node.value, target.value));\n              target.y0 += dy;\n              target.y1 += dy;\n            }\n            y += width + py / 2;\n          }\n        });\n      });\n    }\n\n    function relaxRightToLeft(alpha) {\n      columns.slice().reverse().forEach(function(nodes) {\n        nodes.forEach(function(node) {\n          let y = node.y0;\n          for (const {source, width, value} of node.targetLinks.sort(ascendingSourceBreadth)) {\n            if (value > 0) {\n              let dy = 0;\n              for (const {target, width} of source.sourceLinks) {\n                if (target === node) break;\n                dy += width + py / 2;\n              }\n              dy = (y - dy - source.y0) * alpha * (value / Math.min(node.value, source.value));\n              source.y0 += dy;\n              source.y1 += dy;\n            }\n            y += width + py / 2;\n          }\n        });\n      });\n    }\n\n    function resolveCollisions() {\n      columns.forEach(function(nodes) {\n        var node,\n            dy,\n            y = y0,\n            n = nodes.length,\n            i;\n\n        // Push any overlapping nodes down.\n        if (sort === undefined) nodes.sort(ascendingBreadth);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dy = y - node.y0;\n          if (dy > 0) node.y0 += dy, node.y1 += dy;\n          y = node.y1 + py;\n        }\n\n        // If the bottommost node goes outside the bounds, push it back up.\n        dy = y - py - y1;\n        if (dy > 0) {\n          y = (node.y0 -= dy), node.y1 -= dy;\n\n          // Push any overlapping nodes back up.\n          for (i = n - 2; i >= 0; --i) {\n            node = nodes[i];\n            dy = node.y1 + py - y;\n            if (dy > 0) node.y0 -= dy, node.y1 -= dy;\n            y = node.y0;\n          }\n        }\n      });\n    }\n  }\n\n  function computeLinkBreadths(graph) {\n    graph.nodes.forEach(function(node) {\n      node.sourceLinks.sort(ascendingTargetBreadth);\n      node.targetLinks.sort(ascendingSourceBreadth);\n    });\n    graph.nodes.forEach(function(node) {\n      var y0 = node.y0, y1 = y0;\n      node.sourceLinks.forEach(function(link) {\n        link.y0 = y0 + link.width / 2, y0 += link.width;\n      });\n      node.targetLinks.forEach(function(link) {\n        link.y1 = y1 + link.width / 2, y1 += link.width;\n      });\n    });\n  }\n\n  return sankey;\n}\n", "var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We\u2019re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n", "export {default as path} from \"./path.js\";\n", "export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n", "export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n", "import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 \u2265 r0, da1 \u2265 da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector\u2019s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it\u2019s a circular sector?\n      // Or perhaps it\u2019s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector\u2019s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n", "function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n", "export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n", "import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n", "import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n", "export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n", "export default function(d) {\n  return d;\n}\n", "import constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n", "import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n", "import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport line from \"./line.js\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n", "import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport area from \"./area.js\";\nimport {lineRadial} from \"./lineRadial.js\";\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n", "export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n", "export var slice = Array.prototype.slice;\n", "import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n", "import {pi, tau} from \"../math.js\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n", "export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n", "var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n", "import {pi, tau} from \"../math.js\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n", "export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n", "var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n", "var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n", "import {path} from \"d3-path\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport star from \"./symbol/star.js\";\nimport square from \"./symbol/square.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport wye from \"./symbol/wye.js\";\nimport constant from \"./constant.js\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n", "export default function() {}\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n", "import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n", "import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n", "import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n", "export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n", "import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n", "import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n", "function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic B\u00E9zier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n", "function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n", "function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n", "export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n", "export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n", "import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n", "import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n", "export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n", "import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n", "import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n", "import none from \"./none.js\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n", "import none from \"./none.js\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n", "import appearance from \"./appearance.js\";\nimport {sum} from \"./ascending.js\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n", "import none from \"./none.js\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n", "export {default as arc} from \"./arc.js\";\nexport {default as area} from \"./area.js\";\nexport {default as line} from \"./line.js\";\nexport {default as pie} from \"./pie.js\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial.js\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial.js\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial.js\";\nexport {linkHorizontal, linkVertical, linkRadial} from \"./link/index.js\";\n\nexport {default as symbol, symbols} from \"./symbol.js\";\nexport {default as symbolCircle} from \"./symbol/circle.js\";\nexport {default as symbolCross} from \"./symbol/cross.js\";\nexport {default as symbolDiamond} from \"./symbol/diamond.js\";\nexport {default as symbolSquare} from \"./symbol/square.js\";\nexport {default as symbolStar} from \"./symbol/star.js\";\nexport {default as symbolTriangle} from \"./symbol/triangle.js\";\nexport {default as symbolWye} from \"./symbol/wye.js\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed.js\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen.js\";\nexport {default as curveBasis} from \"./curve/basis.js\";\nexport {default as curveBundle} from \"./curve/bundle.js\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed.js\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen.js\";\nexport {default as curveCardinal} from \"./curve/cardinal.js\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed.js\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen.js\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom.js\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed.js\";\nexport {default as curveLinear} from \"./curve/linear.js\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone.js\";\nexport {default as curveNatural} from \"./curve/natural.js\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step.js\";\n\nexport {default as stack} from \"./stack.js\";\nexport {default as stackOffsetExpand} from \"./offset/expand.js\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging.js\";\nexport {default as stackOffsetNone} from \"./offset/none.js\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette.js\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle.js\";\nexport {default as stackOrderAppearance} from \"./order/appearance.js\";\nexport {default as stackOrderAscending} from \"./order/ascending.js\";\nexport {default as stackOrderDescending} from \"./order/descending.js\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut.js\";\nexport {default as stackOrderNone} from \"./order/none.js\";\nexport {default as stackOrderReverse} from \"./order/reverse.js\";\n", "import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n", "export {default as sankey} from \"./sankey.js\";\nexport {center as sankeyCenter, left as sankeyLeft, right as sankeyRight, justify as sankeyJustify} from \"./align.js\";\nexport {default as sankeyLinkHorizontal} from \"./sankeyLinkHorizontal.js\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * for Sankey Diagram\n * graph data required (nodes, edges)\n */\nvar util_1 = require(\"@antv/util\");\nvar d3_sankey_1 = require(\"d3-sankey\");\nvar data_set_1 = require(\"../../data-set\");\nvar ALIGN_METHOD = {\n    sankeyLeft: d3_sankey_1.sankeyLeft,\n    sankeyRight: d3_sankey_1.sankeyRight,\n    sankeyCenter: d3_sankey_1.sankeyCenter,\n    sankeyJustify: d3_sankey_1.sankeyJustify,\n};\nvar DEFAULT_OPTIONS = {\n    // nodeId: node => node.index,\n    value: function (node) { return node.value; },\n    source: function (edge) { return edge.source; },\n    target: function (edge) { return edge.target; },\n    nodeAlign: 'sankeyJustify',\n    nodeWidth: 0.02,\n    nodePadding: 0.02,\n    sort: undefined,\n};\nfunction transform(dv, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var nodeAlign = null;\n    if (util_1.isString(options.nodeAlign)) {\n        nodeAlign = ALIGN_METHOD[options.nodeAlign];\n    }\n    else if (util_1.isFunction(options.nodeAlign)) {\n        nodeAlign = options.nodeAlign;\n    }\n    var sankeyProcessor = d3_sankey_1.sankey()\n        .nodeSort(options.sort)\n        .links(function (d) { return d.edges; })\n        .nodeWidth(options.nodeWidth)\n        .nodePadding(options.nodePadding)\n        .extent([\n        [0, 0],\n        [1, 1],\n    ]);\n    if (util_1.isFunction(options.nodeId)) {\n        sankeyProcessor.nodeId(options.nodeId);\n    }\n    if (nodeAlign) {\n        sankeyProcessor.nodeAlign(nodeAlign);\n    }\n    // TODO:\n    // @ts-ignore\n    sankeyProcessor(dv);\n    // post process (x, y), etc.\n    dv.nodes.forEach(function (node) {\n        var x0 = node.x0, x1 = node.x1, y0 = node.y0, y1 = node.y1;\n        /* points\n         * 3---2\n         * |   |\n         * 0---1\n         */\n        node.x = [x0, x1, x1, x0];\n        node.y = [y0, y0, y1, y1];\n    });\n    dv.edges.forEach(function (edge) {\n        var source = edge.source, target = edge.target;\n        var sx = source.x1;\n        var tx = target.x0;\n        edge.x = [sx, sx, tx, tx];\n        var offset = edge.width / 2;\n        edge.y = [edge.y0 + offset, edge.y0 - offset, edge.y1 + offset, edge.y1 - offset];\n    });\n}\ndata_set_1.DataSet.registerTransform('diagram.sankey', transform);\ndata_set_1.DataSet.registerTransform('sankey', transform);\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n", "function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n", "import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang\u2013Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n", "import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren\u2019t any edges, have the closest site cover the extent.\n  // It doesn\u2019t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n", "import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n", "import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n", "import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n", "import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n", "export {default as voronoi} from \"./voronoi\";\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar d3Voronoi = tslib_1.__importStar(require(\"d3-voronoi\"));\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar registerTransform = data_set_1.DataSet.registerTransform;\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    // fields: [ 'x', 'y' ] // field x and field y, required\n    // extend: [[x0, y0], [x1, y1]], // optional\n    // size: [width, height], // optional\n    as: ['_x', '_y'],\n};\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 2) {\n        throw new TypeError('Invalid as: must be an array with two strings!');\n    }\n    var xField = as[0];\n    var yField = as[1];\n    var fields = option_parser_1.getFields(options);\n    if (!util_1.isArray(fields) || fields.length !== 2) {\n        throw new TypeError('Invalid fields: must be an array with two strings!');\n    }\n    var x = fields[0];\n    var y = fields[1];\n    var rows = dataView.rows;\n    var data = rows.map(function (row) { return [row[x], row[y]]; });\n    var voronoi = d3Voronoi.voronoi();\n    if (options.extend) {\n        voronoi.extent(options.extend);\n    }\n    if (options.size) {\n        voronoi.size(options.size);\n    }\n    var polygons = voronoi(data).polygons();\n    rows.forEach(function (row, i) {\n        var polygon = polygons[i].filter(function (point) { return !!point; }); // some points are null\n        row[xField] = polygon.map(function (point) { return point[0]; });\n        row[yField] = polygon.map(function (point) { return point[1]; });\n    });\n}\nregisterTransform('diagram.voronoi', transform);\nregisterTransform('voronoi', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar d3Hierarchy = tslib_1.__importStar(require(\"d3-hierarchy\"));\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    field: 'value',\n    size: [1, 1],\n    nodeSize: null,\n    separation: null,\n    as: ['x', 'y'],\n};\nfunction transform(dataView, options) {\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY || !dataView.root) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    var root = dataView.root;\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 2) {\n        throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ \"x\", \"y\" ])!');\n    }\n    var field = undefined;\n    try {\n        field = option_parser_1.getField(options);\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    if (field) {\n        root.sum(function (d) { return d[field]; });\n    }\n    var clusterLayout = d3Hierarchy.cluster();\n    clusterLayout.size(options.size);\n    if (options.nodeSize) {\n        clusterLayout.nodeSize(options.nodeSize);\n    }\n    if (options.separation) {\n        clusterLayout.separation(options.separation);\n    }\n    clusterLayout(root);\n    var x = as[0];\n    var y = as[1];\n    root.each(function (node) {\n        node[x] = node.x;\n        node[y] = node.y;\n    });\n}\ndata_set_1.DataSet.registerTransform('hierarchy.cluster', transform);\ndata_set_1.DataSet.registerTransform('dendrogram', transform);\n", "var _require = require('@antv/util'),\n    mix = _require.mix;\n\nmodule.exports = {\n  assign: mix\n};", "/* eslint-disable no-cond-assign */\nvar util = require('../util');\n\nvar PEM = 18;\nvar DEFAULT_HEIGHT = PEM * 2;\nvar DEFAULT_GAP = PEM;\nvar DEFAULT_OPTIONS = {\n  getId: function getId(d) {\n    return d.id || d.name;\n  },\n  getPreH: function getPreH(d) {\n    return d.preH || 0;\n  },\n  getPreV: function getPreV(d) {\n    return d.preV || 0;\n  },\n  getHGap: function getHGap(d) {\n    return d.hgap || DEFAULT_GAP;\n  },\n  getVGap: function getVGap(d) {\n    return d.vgap || DEFAULT_GAP;\n  },\n  getChildren: function getChildren(d) {\n    return d.children;\n  },\n  getHeight: function getHeight(d) {\n    return d.height || DEFAULT_HEIGHT;\n  },\n  getWidth: function getWidth(d) {\n    var label = d.label || ' ';\n    return d.width || label.split('').length * PEM; // FIXME DO NOT get width like this\n  }\n};\n\nfunction Node(data, options) {\n  var me = this;\n  me.vgap = me.hgap = 0;\n  if (data instanceof Node) return data;\n  me.data = data;\n  /*\n   * Gaps: filling space between nodes\n   * (x, y) ----------------------\n   * |            vgap            |\n   * |    --------------------    h\n   * | h |                    |   e\n   * | g |                    |   i\n   * | a |                    |   g\n   * | p |                    |   h\n   * |   ---------------------    t\n   * |                            |\n   *  -----------width------------\n   */\n\n  var hgap = options.getHGap(data);\n  var vgap = options.getVGap(data);\n  me.preH = options.getPreH(data);\n  me.preV = options.getPreV(data);\n  me.width = options.getWidth(data);\n  me.height = options.getHeight(data);\n  me.width += me.preH;\n  me.height += me.preV;\n  me.id = options.getId(data);\n  me.x = me.y = 0;\n  me.depth = 0;\n\n  if (!me.children) {\n    me.children = [];\n  }\n\n  me.addGap(hgap, vgap);\n  return me;\n}\n\nutil.assign(Node.prototype, {\n  isRoot: function isRoot() {\n    return this.depth === 0;\n  },\n  isLeaf: function isLeaf() {\n    return this.children.length === 0;\n  },\n  addGap: function addGap(hgap, vgap) {\n    var me = this;\n    me.hgap += hgap;\n    me.vgap += vgap;\n    me.width += 2 * hgap;\n    me.height += 2 * vgap;\n  },\n  eachNode: function eachNode(callback) {\n    // Depth First traverse\n    var me = this;\n    var nodes = [me];\n    var current;\n\n    while (current = nodes.shift()) {\n      callback(current);\n      nodes = current.children.concat(nodes);\n    }\n  },\n  DFTraverse: function DFTraverse(callback) {\n    // Depth First traverse\n    this.eachNode(callback);\n  },\n  BFTraverse: function BFTraverse(callback) {\n    // Breadth First traverse\n    var me = this;\n    var nodes = [me];\n    var current;\n\n    while (current = nodes.shift()) {\n      callback(current);\n      nodes = nodes.concat(current.children);\n    }\n  },\n  getBoundingBox: function getBoundingBox() {\n    // BBox for just one tree node\n    var bb = {\n      left: Number.MAX_VALUE,\n      top: Number.MAX_VALUE,\n      width: 0,\n      height: 0\n    };\n    this.eachNode(function (node) {\n      bb.left = Math.min(bb.left, node.x);\n      bb.top = Math.min(bb.top, node.y);\n      bb.width = Math.max(bb.width, node.x + node.width);\n      bb.height = Math.max(bb.height, node.y + node.height);\n    });\n    return bb;\n  },\n  // translate\n  translate: function translate(tx, ty) {\n    if (tx === void 0) {\n      tx = 0;\n    }\n\n    if (ty === void 0) {\n      ty = 0;\n    }\n\n    this.eachNode(function (node) {\n      node.x += tx;\n      node.y += ty;\n      node.x += node.preH;\n      node.y += node.preV;\n    });\n  },\n  right2left: function right2left() {\n    var me = this;\n    var bb = me.getBoundingBox();\n    me.eachNode(function (node) {\n      node.x = node.x - (node.x - bb.left) * 2 - node.width; // node.x = - node.x;\n    });\n    me.translate(bb.width, 0);\n  },\n  bottom2top: function bottom2top() {\n    var me = this;\n    var bb = me.getBoundingBox();\n    me.eachNode(function (node) {\n      node.y = node.y - (node.y - bb.top) * 2 - node.height; // node.y = - node.y;\n    });\n    me.translate(0, bb.height);\n  }\n});\n\nfunction hierarchy(data, options, isolated) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  var root = new Node(data, options);\n  var nodes = [root];\n  var node;\n\n  if (!isolated && !data.collapsed) {\n    while (node = nodes.shift()) {\n      if (!node.data.collapsed) {\n        var children = options.getChildren(node.data);\n        var length = children ? children.length : 0;\n        node.children = new Array(length);\n\n        if (children && length) {\n          for (var i = 0; i < length; i++) {\n            var child = new Node(children[i], options);\n            node.children[i] = child;\n            nodes.push(child);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n        }\n      }\n    }\n  }\n\n  return root;\n}\n\nmodule.exports = hierarchy;", "var hierarchy = require('./hierarchy');\n\nvar Layout = /*#__PURE__*/function () {\n  function Layout(root, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var me = this;\n    me.options = options;\n    me.rootNode = hierarchy(root, options);\n  }\n\n  var _proto = Layout.prototype;\n\n  _proto.execute = function execute() {\n    throw new Error('please override this method');\n  };\n\n  return Layout;\n}();\n\nmodule.exports = Layout;", "// wrap tree node\nfunction WrappedTree(w, h, y, c) {\n  if (c === void 0) {\n    c = [];\n  }\n\n  var me = this; // size\n\n  me.w = w || 0;\n  me.h = h || 0; // position\n\n  me.y = y || 0;\n  me.x = 0; // children\n\n  me.c = c || [];\n  me.cs = c.length; // modified\n\n  me.prelim = 0;\n  me.mod = 0;\n  me.shift = 0;\n  me.change = 0; // left/right tree\n\n  me.tl = null;\n  me.tr = null; // extreme left/right tree\n\n  me.el = null;\n  me.er = null; // modified left/right tree\n\n  me.msel = 0;\n  me.mser = 0;\n}\n\nWrappedTree.fromNode = function (root, isHorizontal) {\n  if (!root) return null;\n  var children = [];\n  root.children.forEach(function (child) {\n    children.push(WrappedTree.fromNode(child, isHorizontal));\n  });\n  if (isHorizontal) return new WrappedTree(root.height, root.width, root.x, children);\n  return new WrappedTree(root.width, root.height, root.y, children);\n}; // node utils\n\n\nfunction moveRight(node, move, isHorizontal) {\n  if (isHorizontal) {\n    node.y += move;\n  } else {\n    node.x += move;\n  }\n\n  node.children.forEach(function (child) {\n    moveRight(child, move, isHorizontal);\n  });\n}\n\nfunction getMin(node, isHorizontal) {\n  var res = isHorizontal ? node.y : node.x;\n  node.children.forEach(function (child) {\n    res = Math.min(getMin(child, isHorizontal), res);\n  });\n  return res;\n}\n\nfunction normalize(node, isHorizontal) {\n  var min = getMin(node, isHorizontal);\n  moveRight(node, -min, isHorizontal);\n}\n\nfunction convertBack(converted\n/* WrappedTree */\n, root\n/* TreeNode */\n, isHorizontal) {\n  if (isHorizontal) {\n    root.y = converted.x;\n  } else {\n    root.x = converted.x;\n  }\n\n  converted.c.forEach(function (child, i) {\n    convertBack(child, root.children[i], isHorizontal);\n  });\n}\n\nfunction layer(node, isHorizontal, d) {\n  if (d === void 0) {\n    d = 0;\n  }\n\n  if (isHorizontal) {\n    node.x = d;\n    d += node.width;\n  } else {\n    node.y = d;\n    d += node.height;\n  }\n\n  node.children.forEach(function (child) {\n    layer(child, isHorizontal, d);\n  });\n}\n\nmodule.exports = function (root, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var isHorizontal = options.isHorizontal;\n\n  function firstWalk(t) {\n    if (t.cs === 0) {\n      setExtremes(t);\n      return;\n    }\n\n    firstWalk(t.c[0]);\n    var ih = updateIYL(bottom(t.c[0].el), 0, null);\n\n    for (var i = 1; i < t.cs; ++i) {\n      firstWalk(t.c[i]);\n      var min = bottom(t.c[i].er);\n      separate(t, i, ih);\n      ih = updateIYL(min, i, ih);\n    }\n\n    positionRoot(t);\n    setExtremes(t);\n  }\n\n  function setExtremes(t) {\n    if (t.cs === 0) {\n      t.el = t;\n      t.er = t;\n      t.msel = t.mser = 0;\n    } else {\n      t.el = t.c[0].el;\n      t.msel = t.c[0].msel;\n      t.er = t.c[t.cs - 1].er;\n      t.mser = t.c[t.cs - 1].mser;\n    }\n  }\n\n  function separate(t, i, ih) {\n    var sr = t.c[i - 1];\n    var mssr = sr.mod;\n    var cl = t.c[i];\n    var mscl = cl.mod;\n\n    while (sr !== null && cl !== null) {\n      if (bottom(sr) > ih.low) ih = ih.nxt;\n      var dist = mssr + sr.prelim + sr.w - (mscl + cl.prelim);\n\n      if (dist > 0) {\n        mscl += dist;\n        moveSubtree(t, i, ih.index, dist);\n      }\n\n      var sy = bottom(sr);\n      var cy = bottom(cl);\n\n      if (sy <= cy) {\n        sr = nextRightContour(sr);\n        if (sr !== null) mssr += sr.mod;\n      }\n\n      if (sy >= cy) {\n        cl = nextLeftContour(cl);\n        if (cl !== null) mscl += cl.mod;\n      }\n    }\n\n    if (!sr && !!cl) {\n      setLeftThread(t, i, cl, mscl);\n    } else if (!!sr && !cl) {\n      setRightThread(t, i, sr, mssr);\n    }\n  }\n\n  function moveSubtree(t, i, si, dist) {\n    t.c[i].mod += dist;\n    t.c[i].msel += dist;\n    t.c[i].mser += dist;\n    distributeExtra(t, i, si, dist);\n  }\n\n  function nextLeftContour(t) {\n    return t.cs === 0 ? t.tl : t.c[0];\n  }\n\n  function nextRightContour(t) {\n    return t.cs === 0 ? t.tr : t.c[t.cs - 1];\n  }\n\n  function bottom(t) {\n    return t.y + t.h;\n  }\n\n  function setLeftThread(t, i, cl, modsumcl) {\n    var li = t.c[0].el;\n    li.tl = cl;\n    var diff = modsumcl - cl.mod - t.c[0].msel;\n    li.mod += diff;\n    li.prelim -= diff;\n    t.c[0].el = t.c[i].el;\n    t.c[0].msel = t.c[i].msel;\n  }\n\n  function setRightThread(t, i, sr, modsumsr) {\n    var ri = t.c[i].er;\n    ri.tr = sr;\n    var diff = modsumsr - sr.mod - t.c[i].mser;\n    ri.mod += diff;\n    ri.prelim -= diff;\n    t.c[i].er = t.c[i - 1].er;\n    t.c[i].mser = t.c[i - 1].mser;\n  }\n\n  function positionRoot(t) {\n    t.prelim = (t.c[0].prelim + t.c[0].mod + t.c[t.cs - 1].mod + t.c[t.cs - 1].prelim + t.c[t.cs - 1].w) / 2 - t.w / 2;\n  }\n\n  function secondWalk(t, modsum) {\n    modsum += t.mod;\n    t.x = t.prelim + modsum;\n    addChildSpacing(t);\n\n    for (var i = 0; i < t.cs; i++) {\n      secondWalk(t.c[i], modsum);\n    }\n  }\n\n  function distributeExtra(t, i, si, dist) {\n    if (si !== i - 1) {\n      var nr = i - si;\n      t.c[si + 1].shift += dist / nr;\n      t.c[i].shift -= dist / nr;\n      t.c[i].change -= dist - dist / nr;\n    }\n  }\n\n  function addChildSpacing(t) {\n    var d = 0;\n    var modsumdelta = 0;\n\n    for (var i = 0; i < t.cs; i++) {\n      d += t.c[i].shift;\n      modsumdelta += d + t.c[i].change;\n      t.c[i].mod += modsumdelta;\n    }\n  }\n\n  function updateIYL(low, index, ih) {\n    while (ih !== null && low >= ih.low) {\n      ih = ih.nxt;\n    }\n\n    return {\n      low: low,\n      index: index,\n      nxt: ih\n    };\n  } // do layout\n\n\n  layer(root, isHorizontal);\n  var wt = WrappedTree.fromNode(root, isHorizontal);\n  firstWalk(wt);\n  secondWalk(wt, 0);\n  convertBack(wt, root, isHorizontal);\n  normalize(root, isHorizontal);\n  return root;\n};", "var hierarchy = require('./hierarchy');\n\nmodule.exports = function (root, options) {\n  // separate into left and right trees\n  var left = hierarchy(root.data, options, true); // root only\n\n  var right = hierarchy(root.data, options, true); // root only\n  // automatically\n\n  var treeSize = root.children.length;\n  var rightTreeSize = Math.round(treeSize / 2); // separate left and right tree by meta data\n\n  var getSide = options.getSide || function (child, index) {\n    if (index < rightTreeSize) {\n      return 'right';\n    }\n\n    return 'left';\n  };\n\n  for (var i = 0; i < treeSize; i++) {\n    var child = root.children[i];\n    var side = getSide(child, i);\n\n    if (side === 'right') {\n      right.children.push(child);\n    } else {\n      left.children.push(child);\n    }\n  }\n\n  left.eachNode(function (node) {\n    if (!node.isRoot()) {\n      node.side = 'left';\n    }\n  });\n  right.eachNode(function (node) {\n    if (!node.isRoot()) {\n      node.side = 'right';\n    }\n  });\n  return {\n    left: left,\n    right: right\n  };\n};", "var separateTree = require('./separate-root');\n\nvar VALID_DIRECTIONS = ['LR', // left to right\n'RL', // right to left\n'TB', // top to bottom\n'BT', // bottom to top\n'H', // horizontal\n'V' // vertical\n];\nvar HORIZONTAL_DIRECTIONS = ['LR', 'RL', 'H'];\n\nvar isHorizontal = function isHorizontal(direction) {\n  return HORIZONTAL_DIRECTIONS.indexOf(direction) > -1;\n};\n\nvar DEFAULT_DIRECTION = VALID_DIRECTIONS[0];\n\nmodule.exports = function (root, options, layoutAlgrithm) {\n  var direction = options.direction || DEFAULT_DIRECTION;\n  options.isHorizontal = isHorizontal(direction);\n\n  if (direction && VALID_DIRECTIONS.indexOf(direction) === -1) {\n    throw new TypeError(\"Invalid direction: \" + direction);\n  }\n\n  if (direction === VALID_DIRECTIONS[0]) {\n    // LR\n    layoutAlgrithm(root, options);\n  } else if (direction === VALID_DIRECTIONS[1]) {\n    // RL\n    layoutAlgrithm(root, options);\n    root.right2left();\n  } else if (direction === VALID_DIRECTIONS[2]) {\n    // TB\n    layoutAlgrithm(root, options);\n  } else if (direction === VALID_DIRECTIONS[3]) {\n    // BT\n    layoutAlgrithm(root, options);\n    root.bottom2top();\n  } else if (direction === VALID_DIRECTIONS[4] || direction === VALID_DIRECTIONS[5]) {\n    // H or V\n    // separate into left and right trees\n    var _separateTree = separateTree(root, options),\n        left = _separateTree.left,\n        right = _separateTree.right; // do layout for left and right trees\n\n\n    layoutAlgrithm(left, options);\n    layoutAlgrithm(right, options);\n    options.isHorizontal ? left.right2left() : left.bottom2top(); // combine left and right trees\n\n    right.translate(left.x - right.x, left.y - right.y); // translate root\n\n    root.x = left.x;\n    root.y = right.y;\n    var bb = root.getBoundingBox();\n\n    if (options.isHorizontal) {\n      if (bb.top < 0) {\n        root.translate(0, -bb.top);\n      }\n    } else {\n      if (bb.left < 0) {\n        root.translate(-bb.left, 0);\n      }\n    }\n  } // fixed root position, default value is true\n\n\n  var fixedRoot = options.fixedRoot;\n  if (fixedRoot === undefined) fixedRoot = true;\n\n  if (fixedRoot) {\n    root.translate(-(root.x + root.width / 2 + root.hgap), -(root.y + root.height / 2 + root.vgap));\n  }\n\n  return root;\n};", "function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TreeLayout = require('./layout/base');\n\nvar nonLayeredTidyTree = require('./layout/non-layered-tidy');\n\nvar doTreeLayout = require('./layout/do-layout');\n\nvar util = require('./util');\n\nvar CompactBoxTreeLayout = /*#__PURE__*/function (_TreeLayout) {\n  _inheritsLoose(CompactBoxTreeLayout, _TreeLayout);\n\n  function CompactBoxTreeLayout() {\n    return _TreeLayout.apply(this, arguments) || this;\n  }\n\n  var _proto = CompactBoxTreeLayout.prototype;\n\n  _proto.execute = function execute() {\n    var me = this;\n    return doTreeLayout(me.rootNode, me.options, nonLayeredTidyTree);\n  };\n\n  return CompactBoxTreeLayout;\n}(TreeLayout);\n\nvar DEFAULT_OPTIONS = {};\n\nfunction compactBoxLayout(root, options) {\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  return new CompactBoxTreeLayout(root, options).execute();\n}\n\nmodule.exports = compactBoxLayout;", "// wrap tree node\n// TODO considering size\nvar util = require('../util');\n\nfunction WrappedTree(height, children) {\n  if (height === void 0) {\n    height = 0;\n  }\n\n  if (children === void 0) {\n    children = [];\n  }\n\n  var me = this;\n  me.x = me.y = 0;\n  me.leftChild = me.rightChild = null;\n  me.height = 0;\n  me.children = children;\n}\n\nvar DEFAULT_OPTIONS = {\n  isHorizontal: true,\n  nodeSep: 20,\n  nodeSize: 20,\n  rankSep: 200,\n  subTreeSep: 10\n};\n\nfunction convertBack(converted\n/* WrappedTree */\n, root\n/* TreeNode */\n, isHorizontal) {\n  if (isHorizontal) {\n    root.x = converted.x;\n    root.y = converted.y;\n  } else {\n    root.x = converted.y;\n    root.y = converted.x;\n  }\n\n  converted.children.forEach(function (child, i) {\n    convertBack(child, root.children[i], isHorizontal);\n  });\n}\n\nmodule.exports = function (root, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  var maxDepth = 0;\n\n  function wrappedTreeFromNode(n) {\n    if (!n) return null;\n    n.width = 0;\n\n    if (n.depth && n.depth > maxDepth) {\n      maxDepth = n.depth; // get the max depth\n    }\n\n    var children = n.children;\n    var childrenCount = children.length;\n    var t = new WrappedTree(n.height, []);\n    children.forEach(function (child, i) {\n      var childWT = wrappedTreeFromNode(child);\n      t.children.push(childWT);\n\n      if (i === 0) {\n        // t.leftChild = childWT.leftChild ? childWT.leftChild : childWT\n        t.leftChild = childWT;\n      }\n\n      if (i === childrenCount - 1) {\n        // t.rightChild = childWT.rightChild ? childWT.rightChild : childWT\n        t.rightChild = childWT;\n      }\n    });\n    t.originNode = n;\n    t.isLeaf = n.isLeaf();\n    return t;\n  }\n\n  function getDrawingDepth(t) {\n    if (t.isLeaf || t.children.length === 0) {\n      t.drawingDepth = maxDepth;\n    } else {\n      var depths = t.children.map(function (child) {\n        return getDrawingDepth(child);\n      });\n      var minChildDepth = Math.min.apply(null, depths);\n      t.drawingDepth = minChildDepth - 1;\n    }\n\n    return t.drawingDepth;\n  }\n\n  var prevLeaf;\n\n  function position(t) {\n    t.x = t.drawingDepth * options.rankSep;\n\n    if (t.isLeaf) {\n      t.y = 0;\n\n      if (prevLeaf) {\n        t.y = prevLeaf.y + prevLeaf.height + options.nodeSep;\n\n        if (t.originNode.parent !== prevLeaf.originNode.parent) {\n          t.y += options.subTreeSep;\n        }\n      }\n\n      prevLeaf = t;\n    } else {\n      t.children.forEach(function (child) {\n        position(child);\n      });\n      t.y = (t.leftChild.y + t.rightChild.y) / 2;\n    }\n  } // wrap node\n\n\n  var wt = wrappedTreeFromNode(root); // get depth for drawing\n\n  getDrawingDepth(wt); // get position\n\n  position(wt); // get x, y\n\n  convertBack(wt, root, options.isHorizontal);\n  return root;\n};", "function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TreeLayout = require('./layout/base');\n\nvar dendrogram = require('./layout/dendrogram');\n\nvar doTreeLayout = require('./layout/do-layout');\n\nvar util = require('./util');\n\nvar DendrogramLayout = /*#__PURE__*/function (_TreeLayout) {\n  _inheritsLoose(DendrogramLayout, _TreeLayout);\n\n  function DendrogramLayout() {\n    return _TreeLayout.apply(this, arguments) || this;\n  }\n\n  var _proto = DendrogramLayout.prototype;\n\n  _proto.execute = function execute() {\n    var me = this;\n    me.rootNode.width = 0;\n    return doTreeLayout(me.rootNode, me.options, dendrogram);\n  };\n\n  return DendrogramLayout;\n}(TreeLayout);\n\nvar DEFAULT_OPTIONS = {};\n\nfunction dendrogramLayout(root, options) {\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  return new DendrogramLayout(root, options).execute();\n}\n\nmodule.exports = dendrogramLayout;", "function positionNode(node, previousNode, indent, dropCap) {\n  //  caculate the node's horizontal offset DX, dx's type might be number or function\n  var displacementX = typeof indent === 'function' ? indent(node) : indent * node.depth;\n\n  if (!dropCap) {\n    try {\n      if (node.id === node.parent.children[0].id) {\n        node.x += displacementX;\n        node.y = previousNode ? previousNode.y : 0;\n        return;\n      }\n    } catch (e) {// skip to normal when a node has no parent\n    }\n  }\n\n  node.x += displacementX;\n  node.y = previousNode ? previousNode.y + previousNode.height : 0;\n  return;\n}\n\nmodule.exports = function (root, indent, dropCap) {\n  var previousNode = null;\n  root.eachNode(function (node) {\n    positionNode(node, previousNode, indent, dropCap);\n    previousNode = node;\n  });\n};", "function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TreeLayout = require('./layout/base');\n\nvar indentedTree = require('./layout/indented');\n\nvar separateTree = require('./layout/separate-root');\n\nvar util = require('./util');\n\nvar VALID_DIRECTIONS = ['LR', // left to right\n'RL', // right to left\n'H' // horizontal\n];\nvar DEFAULT_DIRECTION = VALID_DIRECTIONS[0];\n\nvar IndentedLayout = /*#__PURE__*/function (_TreeLayout) {\n  _inheritsLoose(IndentedLayout, _TreeLayout);\n\n  function IndentedLayout() {\n    return _TreeLayout.apply(this, arguments) || this;\n  }\n\n  var _proto = IndentedLayout.prototype;\n\n  _proto.execute = function execute() {\n    var me = this;\n    var options = me.options;\n    var root = me.rootNode;\n    options.isHorizontal = true; // default indent 20 and sink first children;\n\n    var _options$indent = options.indent,\n        indent = _options$indent === void 0 ? 20 : _options$indent,\n        _options$dropCap = options.dropCap,\n        dropCap = _options$dropCap === void 0 ? true : _options$dropCap;\n    var direction = options.direction || DEFAULT_DIRECTION;\n\n    if (direction && VALID_DIRECTIONS.indexOf(direction) === -1) {\n      throw new TypeError(\"Invalid direction: \" + direction);\n    }\n\n    if (direction === VALID_DIRECTIONS[0]) {\n      // LR\n      indentedTree(root, indent, dropCap);\n    } else if (direction === VALID_DIRECTIONS[1]) {\n      // RL\n      indentedTree(root, indent, dropCap);\n      root.right2left();\n    } else if (direction === VALID_DIRECTIONS[2]) {\n      // H\n      // separate into left and right trees\n      var _separateTree = separateTree(root, options),\n          left = _separateTree.left,\n          right = _separateTree.right;\n\n      indentedTree(left, indent, dropCap);\n      left.right2left();\n      indentedTree(right, indent, dropCap);\n      var bbox = left.getBoundingBox();\n      right.translate(bbox.width, 0);\n      root.x = right.x - root.width / 2;\n    }\n\n    return root;\n  };\n\n  return IndentedLayout;\n}(TreeLayout);\n\nvar DEFAULT_OPTIONS = {};\n\nfunction indentedLayout(root, options) {\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  return new IndentedLayout(root, options).execute();\n}\n\nmodule.exports = indentedLayout;", "var util = require('../util');\n\nfunction secondWalk(node, options) {\n  var totalHeight = 0;\n\n  if (!node.children.length) {\n    totalHeight = node.height;\n  } else {\n    node.children.forEach(function (c) {\n      totalHeight += secondWalk(c, options);\n    });\n  }\n\n  node._subTreeSep = options.getSubTreeSep(node.data);\n  node.totalHeight = Math.max(node.height, totalHeight) + 2 * node._subTreeSep;\n  return node.totalHeight;\n}\n\nfunction thirdWalk(node) {\n  var children = node.children;\n  var len = children.length;\n\n  if (len) {\n    children.forEach(function (c) {\n      thirdWalk(c);\n    });\n    var first = children[0];\n    var last = children[len - 1];\n    var childrenHeight = last.y - first.y + last.height;\n    var childrenTotalHeight = 0;\n    children.forEach(function (child) {\n      childrenTotalHeight += child.totalHeight;\n    });\n\n    if (childrenHeight > node.height) {\n      // \u5F53\u5B50\u8282\u70B9\u603B\u9AD8\u5EA6\u5927\u4E8E\u7236\u8282\u70B9\u9AD8\u5EA6\n      node.y = first.y + childrenHeight / 2 - node.height / 2;\n    } else if (children.length !== 1 || node.height > childrenTotalHeight) {\n      // \u591A\u4E8E\u4E00\u4E2A\u5B50\u8282\u70B9\u6216\u8005\u7236\u8282\u70B9\u5927\u4E8E\u6240\u6709\u5B50\u8282\u70B9\u7684\u603B\u9AD8\u5EA6\n      var offset = node.y + (node.height - childrenHeight) / 2 - first.y;\n      children.forEach(function (c) {\n        c.translate(0, offset);\n      });\n    } else {\n      // \u53EA\u6709\u4E00\u4E2A\u5B50\u8282\u70B9\n      node.y = (first.y + first.height / 2 + last.y + last.height / 2) / 2 - node.height / 2;\n    }\n  }\n}\n\nvar DEFAULT_OPTIONS = {\n  getSubTreeSep: function getSubTreeSep() {\n    return 0;\n  }\n};\n\nmodule.exports = function (root, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  root.parent = {\n    x: 0,\n    width: 0,\n    height: 0,\n    y: 0\n  }; // first walk\n\n  root.BFTraverse(function (node) {\n    node.x = node.parent.x + node.parent.width; // simply get x\n  });\n  root.parent = null; // second walk\n\n  secondWalk(root, options); // assign sub tree totalHeight\n  // adjusting\n  // separating nodes\n\n  root.startY = 0;\n  root.y = root.totalHeight / 2 - root.height / 2;\n  root.eachNode(function (node) {\n    var children = node.children;\n    var len = children.length;\n\n    if (len) {\n      var first = children[0];\n      first.startY = node.startY + node._subTreeSep;\n\n      if (len === 1) {\n        first.y = node.y + node.height / 2 - first.height / 2;\n      } else {\n        first.y = first.startY + first.totalHeight / 2 - first.height / 2;\n\n        for (var i = 1; i < len; i++) {\n          var c = children[i];\n          c.startY = children[i - 1].startY + children[i - 1].totalHeight;\n          c.y = c.startY + c.totalHeight / 2 - c.height / 2;\n        }\n      }\n    }\n  }); // third walk\n\n  thirdWalk(root);\n};", "function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar TreeLayout = require('./layout/base');\n\nvar mindmap = require('./layout/mindmap');\n\nvar doTreeLayout = require('./layout/do-layout');\n\nvar util = require('./util');\n\nvar MindmapLayout = /*#__PURE__*/function (_TreeLayout) {\n  _inheritsLoose(MindmapLayout, _TreeLayout);\n\n  function MindmapLayout() {\n    return _TreeLayout.apply(this, arguments) || this;\n  }\n\n  var _proto = MindmapLayout.prototype;\n\n  _proto.execute = function execute() {\n    var me = this;\n    return doTreeLayout(me.rootNode, me.options, mindmap);\n  };\n\n  return MindmapLayout;\n}(TreeLayout);\n\nvar DEFAULT_OPTIONS = {};\n\nfunction mindmapLayout(root, options) {\n  options = util.assign({}, DEFAULT_OPTIONS, options);\n  return new MindmapLayout(root, options).execute();\n}\n\nmodule.exports = mindmapLayout;", "var hierarchy = {\n  compactBox: require('./compact-box'),\n  dendrogram: require('./dendrogram'),\n  indented: require('./indented'),\n  mindmap: require('./mindmap')\n};\nmodule.exports = hierarchy;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hierarchy_1 = tslib_1.__importDefault(require(\"@antv/hierarchy\"));\nvar data_set_1 = require(\"../../data-set\");\nvar DEFAULT_OPTIONS = {};\nfunction transform(dataView, options) {\n    var root = dataView.root;\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    dataView.root = hierarchy_1.default.compactBox(root, options);\n}\ndata_set_1.DataSet.registerTransform('hierarchy.compact-box', transform);\ndata_set_1.DataSet.registerTransform('compact-box-tree', transform);\ndata_set_1.DataSet.registerTransform('non-layered-tidy-tree', transform);\ndata_set_1.DataSet.registerTransform('mindmap-logical', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hierarchy_1 = tslib_1.__importDefault(require(\"@antv/hierarchy\"));\nvar data_set_1 = require(\"../../data-set\");\nvar DEFAULT_OPTIONS = {};\nfunction transform(dataView, options) {\n    var root = dataView.root;\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    dataView.root = hierarchy_1.default.dendrogram(root, options);\n}\ndata_set_1.DataSet.registerTransform('hierarchy.dendrogram', transform);\ndata_set_1.DataSet.registerTransform('dendrogram', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar hierarchy_1 = tslib_1.__importDefault(require(\"@antv/hierarchy\"));\nvar data_set_1 = require(\"../../data-set\");\nvar DEFAULT_OPTIONS = {};\nfunction transform(dataView, options) {\n    var root = dataView.root;\n    options = Object.assign({}, DEFAULT_OPTIONS, options);\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    dataView.root = hierarchy_1.default.indented(root, options);\n}\ndata_set_1.DataSet.registerTransform('hierarchy.indented', transform);\ndata_set_1.DataSet.registerTransform('indented-tree', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar d3Hierarchy = tslib_1.__importStar(require(\"d3-hierarchy\"));\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    field: 'value',\n    size: [1, 1],\n    padding: 0,\n    as: ['x', 'y', 'r'],\n};\nfunction transform(dataView, options) {\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    var root = dataView.root;\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 3) {\n        throw new TypeError('Invalid as: it must be an array with 3 strings (e.g. [ \"x\", \"y\", \"r\" ])!');\n    }\n    var field;\n    try {\n        field = option_parser_1.getField(options);\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    if (field) {\n        root.sum(function (d) { return d[field]; }).sort(function (a, b) { return b[field] - a[field]; });\n    }\n    var packLayout = d3Hierarchy.pack();\n    packLayout.size(options.size);\n    if (options.padding) {\n        packLayout.padding(options.padding);\n    }\n    packLayout(root);\n    var x = as[0];\n    var y = as[1];\n    var r = as[2];\n    root.each(function (node) {\n        node[x] = node.x;\n        node[y] = node.y;\n        node[r] = node.r;\n    });\n}\ndata_set_1.DataSet.registerTransform('hierarchy.pack', transform);\ndata_set_1.DataSet.registerTransform('hierarchy.circle-packing', transform);\ndata_set_1.DataSet.registerTransform('circle-packing', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar d3Hierarchy = tslib_1.__importStar(require(\"d3-hierarchy\"));\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    field: 'value',\n    size: [1, 1],\n    round: false,\n    // ratio: 1.618033988749895, // golden ratio\n    padding: 0,\n    sort: true,\n    as: ['x', 'y'],\n};\nfunction transform(dataView, options) {\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    var root = dataView.root;\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 2) {\n        throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ \"x\", \"y\" ])!');\n    }\n    var field;\n    try {\n        field = option_parser_1.getField(options);\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    if (field) {\n        root.sum(function (d) { return d[field]; });\n    }\n    var partitionLayout = d3Hierarchy.partition();\n    partitionLayout\n        .size(options.size)\n        .round(options.round)\n        .padding(options.padding);\n    partitionLayout(root);\n    /*\n     * points:\n     *   3  2\n     *   0  1\n     */\n    var x = as[0];\n    var y = as[1];\n    root.each(function (node) {\n        node[x] = [node.x0, node.x1, node.x1, node.x0];\n        node[y] = [node.y1, node.y1, node.y0, node.y0];\n        ['x0', 'x1', 'y0', 'y1'].forEach(function (prop) {\n            if (as.indexOf(prop) === -1) {\n                delete node[prop];\n            }\n        });\n    });\n}\ndata_set_1.DataSet.registerTransform('hierarchy.partition', transform);\ndata_set_1.DataSet.registerTransform('adjacency', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar d3Hierarchy = tslib_1.__importStar(require(\"d3-hierarchy\"));\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    field: 'value',\n    size: [1, 1],\n    nodeSize: null,\n    separation: null,\n    as: ['x', 'y'],\n};\nfunction transform(dataView, options) {\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    var root = dataView.root;\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 2) {\n        throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ \"x\", \"y\" ])!');\n    }\n    var field;\n    try {\n        field = option_parser_1.getField(options);\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    if (field) {\n        root.sum(function (d) { return d[field]; });\n    }\n    var treeLayout = d3Hierarchy.tree();\n    treeLayout.size(options.size);\n    if (options.nodeSize) {\n        treeLayout.nodeSize(options.nodeSize);\n    }\n    if (options.separation) {\n        treeLayout.separation(options.separation);\n    }\n    treeLayout(root);\n    var x = as[0];\n    var y = as[1];\n    root.each(function (node) {\n        node[x] = node.x;\n        node[y] = node.y;\n    });\n}\ndata_set_1.DataSet.registerTransform('hierarchy.tree', transform);\ndata_set_1.DataSet.registerTransform('tree', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar d3Hierarchy = tslib_1.__importStar(require(\"d3-hierarchy\"));\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    field: 'value',\n    tile: 'treemapSquarify',\n    size: [1, 1],\n    round: false,\n    // ratio: 1.618033988749895, // golden ratio\n    padding: 0,\n    paddingInner: 0,\n    paddingOuter: 0,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    as: ['x', 'y'],\n};\nfunction transform(dataView, options) {\n    if (dataView.dataType !== data_set_1.DataSet.CONSTANTS.HIERARCHY) {\n        throw new TypeError('Invalid DataView: This transform is for Hierarchy data only!');\n    }\n    var root = dataView.root;\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var as = options.as;\n    if (!util_1.isArray(as) || as.length !== 2) {\n        throw new TypeError('Invalid as: it must be an array with 2 strings (e.g. [ \"x\", \"y\" ])!');\n    }\n    var field;\n    try {\n        field = option_parser_1.getField(options);\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    if (field) {\n        root.sum(function (d) { return d[field]; });\n    }\n    var treemapLayout = d3Hierarchy.treemap();\n    treemapLayout\n        .tile(d3Hierarchy[options.tile])\n        .size(options.size)\n        .round(options.round)\n        .padding(options.padding)\n        .paddingInner(options.paddingInner)\n        .paddingOuter(options.paddingOuter)\n        .paddingTop(options.paddingTop)\n        .paddingRight(options.paddingRight)\n        .paddingBottom(options.paddingBottom)\n        .paddingLeft(options.paddingLeft);\n    treemapLayout(root);\n    /*\n     * points:\n     *   3  2\n     *   0  1\n     */\n    var x = as[0];\n    var y = as[1];\n    root.each(function (node) {\n        node[x] = [node.x0, node.x1, node.x1, node.x0];\n        node[y] = [node.y1, node.y1, node.y0, node.y0];\n        ['x0', 'x1', 'y0', 'y1'].forEach(function (prop) {\n            if (as.indexOf(prop) === -1) {\n                delete node[prop];\n            }\n        });\n    });\n}\ndata_set_1.DataSet.registerTransform('hierarchy.treemap', transform);\ndata_set_1.DataSet.registerTransform('treemap', transform);\n", "\"use strict\";\n/*\n * Synchronous version of d3-cloud\n */\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n/* eslint-disable no-return-assign, no-cond-assign */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar cloudRadians = Math.PI / 180, cw = (1 << 11) >> 5, ch = 1 << 11;\nfunction cloudText(d) {\n    return d.text;\n}\nfunction cloudFont() {\n    return 'serif';\n}\nfunction cloudFontNormal() {\n    return 'normal';\n}\nfunction cloudFontSize(d) {\n    return d.value;\n}\nfunction cloudRotate() {\n    return ~~(Math.random() * 2) * 90;\n}\nfunction cloudPadding() {\n    return 1;\n}\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n    if (d.sprite)\n        return;\n    var c = contextAndRatio.context, ratio = contextAndRatio.ratio;\n    c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n    var x = 0, y = 0, maxh = 0;\n    var n = data.length;\n    --di;\n    while (++di < n) {\n        d = data[di];\n        c.save();\n        c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\n        var w = c.measureText(d.text + 'm').width * ratio, h = d.size << 1;\n        if (d.rotate) {\n            var sr = Math.sin(d.rotate * cloudRadians), cr = Math.cos(d.rotate * cloudRadians), wcr = w * cr, wsr = w * sr, hcr = h * cr, hsr = h * sr;\n            w = ((Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5) << 5;\n            h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n        }\n        else {\n            w = ((w + 0x1f) >> 5) << 5;\n        }\n        if (h > maxh)\n            maxh = h;\n        if (x + w >= cw << 5) {\n            x = 0;\n            y += maxh;\n            maxh = 0;\n        }\n        if (y + h >= ch)\n            break;\n        c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n        if (d.rotate)\n            c.rotate(d.rotate * cloudRadians);\n        c.fillText(d.text, 0, 0);\n        if (d.padding) {\n            c.lineWidth = 2 * d.padding;\n            c.strokeText(d.text, 0, 0);\n        }\n        c.restore();\n        d.width = w;\n        d.height = h;\n        d.xoff = x;\n        d.yoff = y;\n        d.x1 = w >> 1;\n        d.y1 = h >> 1;\n        d.x0 = -d.x1;\n        d.y0 = -d.y1;\n        d.hasText = true;\n        x += w;\n    }\n    var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data, sprite = [];\n    while (--di >= 0) {\n        d = data[di];\n        if (!d.hasText)\n            continue;\n        var w = d.width, w32 = w >> 5;\n        var h = d.y1 - d.y0;\n        // Zero the buffer\n        for (var i = 0; i < h * w32; i++)\n            sprite[i] = 0;\n        x = d.xoff;\n        if (x == null)\n            return;\n        y = d.yoff;\n        var seen = 0, seenRow = -1;\n        for (var j = 0; j < h; j++) {\n            for (var i = 0; i < w; i++) {\n                var k = w32 * j + (i >> 5), m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n                sprite[k] |= m;\n                seen |= m;\n            }\n            if (seen)\n                seenRow = j;\n            else {\n                d.y0++;\n                h--;\n                j--;\n                y++;\n            }\n        }\n        d.y1 = d.y0 + seenRow;\n        d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n    }\n}\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n    sw >>= 5;\n    var sprite = tag.sprite, w = tag.width >> 5, lx = tag.x - (w << 4), sx = lx & 0x7f, msx = 32 - sx, h = tag.y1 - tag.y0;\n    var x = (tag.y + tag.y0) * sw + (lx >> 5), last;\n    for (var j = 0; j < h; j++) {\n        last = 0;\n        for (var i = 0; i <= w; i++) {\n            if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i])\n                return true;\n        }\n        x += sw;\n    }\n    return false;\n}\nfunction cloudBounds(bounds, d) {\n    var b0 = bounds[0], b1 = bounds[1];\n    if (d.x + d.x0 < b0.x)\n        b0.x = d.x + d.x0;\n    if (d.y + d.y0 < b0.y)\n        b0.y = d.y + d.y0;\n    if (d.x + d.x1 > b1.x)\n        b1.x = d.x + d.x1;\n    if (d.y + d.y1 > b1.y)\n        b1.y = d.y + d.y1;\n}\nfunction collideRects(a, b) {\n    return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\nfunction archimedeanSpiral(size) {\n    var e = size[0] / size[1];\n    return function (t) {\n        return [e * (t *= 0.1) * Math.cos(t), t * Math.sin(t)];\n    };\n}\nfunction rectangularSpiral(size) {\n    var dy = 4, dx = (dy * size[0]) / size[1];\n    var x = 0, y = 0;\n    return function (t) {\n        var sign = t < 0 ? -1 : 1;\n        // See triangular numbers: T_n = n * (n + 1) / 2.\n        switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n            case 0:\n                x += dx;\n                break;\n            case 1:\n                y += dy;\n                break;\n            case 2:\n                x -= dx;\n                break;\n            default:\n                y -= dy;\n                break;\n        }\n        return [x, y];\n    };\n}\n// TODO reuse arrays?\nfunction zeroArray(n) {\n    var a = [];\n    var i = -1;\n    while (++i < n)\n        a[i] = 0;\n    return a;\n}\nfunction cloudCanvas() {\n    return document.createElement('canvas');\n}\nfunction functor(d) {\n    return typeof d === 'function'\n        ? d\n        : function () {\n            return d;\n        };\n}\nvar spirals = {\n    archimedean: archimedeanSpiral,\n    rectangular: rectangularSpiral,\n};\nfunction default_1() {\n    var size = [256, 256], text = cloudText, font = cloudFont, fontSize = cloudFontSize, fontStyle = cloudFontNormal, fontWeight = cloudFontNormal, rotate = cloudRotate, padding = cloudPadding, spiral = archimedeanSpiral, words = [], timeInterval = Infinity, random = Math.random, canvas = cloudCanvas;\n    var cloud = {};\n    cloud.canvas = function (_) {\n        return arguments.length ? ((canvas = functor(_)), cloud) : canvas;\n    };\n    cloud.start = function () {\n        var _a = tslib_1.__read(size, 2), width = _a[0], height = _a[1];\n        var contextAndRatio = getContext(canvas()), board = cloud.board ? cloud.board : zeroArray((size[0] >> 5) * size[1]), n = words.length, tags = [], data = words\n            .map(function (d, i) {\n            d.text = text.call(this, d, i);\n            d.font = font.call(this, d, i);\n            d.style = fontStyle.call(this, d, i);\n            d.weight = fontWeight.call(this, d, i);\n            d.rotate = rotate.call(this, d, i);\n            d.size = ~~fontSize.call(this, d, i);\n            d.padding = padding.call(this, d, i);\n            return d;\n        })\n            .sort(function (a, b) {\n            return b.size - a.size;\n        });\n        var i = -1, bounds = !cloud.board\n            ? null\n            : [\n                {\n                    x: 0,\n                    y: 0,\n                },\n                {\n                    x: width,\n                    y: height,\n                },\n            ];\n        step();\n        function step() {\n            var start = Date.now();\n            while (Date.now() - start < timeInterval && ++i < n) {\n                var d = data[i];\n                d.x = (width * (random() + 0.5)) >> 1;\n                d.y = (height * (random() + 0.5)) >> 1;\n                cloudSprite(contextAndRatio, d, data, i);\n                if (d.hasText && place(board, d, bounds)) {\n                    tags.push(d);\n                    if (bounds) {\n                        if (!cloud.hasImage) {\n                            // update bounds if image mask not set\n                            cloudBounds(bounds, d);\n                        }\n                    }\n                    else {\n                        bounds = [\n                            { x: d.x + d.x0, y: d.y + d.y0 },\n                            { x: d.x + d.x1, y: d.y + d.y1 },\n                        ];\n                    }\n                    // Temporary hack\n                    d.x -= size[0] >> 1;\n                    d.y -= size[1] >> 1;\n                }\n            }\n            cloud._tags = tags;\n            cloud._bounds = bounds;\n        }\n        return cloud;\n    };\n    function getContext(canvas) {\n        canvas.width = canvas.height = 1;\n        var ratio = Math.sqrt(canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2);\n        canvas.width = (cw << 5) / ratio;\n        canvas.height = ch / ratio;\n        var context = canvas.getContext('2d');\n        context.fillStyle = context.strokeStyle = 'red';\n        context.textAlign = 'center';\n        return { context: context, ratio: ratio };\n    }\n    function place(board, tag, bounds) {\n        // const perimeter = [{ x: 0, y: 0 }, { x: size[0], y: size[1] }],\n        var startX = tag.x, startY = tag.y, maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]), s = spiral(size), dt = random() < 0.5 ? 1 : -1;\n        var dxdy, t = -dt, dx, dy;\n        while ((dxdy = s((t += dt)))) {\n            dx = ~~dxdy[0];\n            dy = ~~dxdy[1];\n            if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta)\n                break;\n            tag.x = startX + dx;\n            tag.y = startY + dy;\n            if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1])\n                continue;\n            // TODO only check for collisions within current bounds.\n            if (!bounds || !cloudCollide(tag, board, size[0])) {\n                if (!bounds || collideRects(tag, bounds)) {\n                    var sprite = tag.sprite, w = tag.width >> 5, sw = size[0] >> 5, lx = tag.x - (w << 4), sx = lx & 0x7f, msx = 32 - sx, h = tag.y1 - tag.y0;\n                    var last = void 0, x = (tag.y + tag.y0) * sw + (lx >> 5);\n                    for (var j = 0; j < h; j++) {\n                        last = 0;\n                        for (var i = 0; i <= w; i++) {\n                            board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n                        }\n                        x += sw;\n                    }\n                    delete tag.sprite;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    cloud.createMask = function (img) {\n        var can = document.createElement('canvas');\n        var _a = tslib_1.__read(size, 2), width = _a[0], height = _a[1];\n        // \u5F53 width \u6216 height \u4E3A 0 \u65F6\uFF0C\u8C03\u7528 cxt.getImageData \u4F1A\u62A5\u9519\n        if (!width || !height) {\n            return;\n        }\n        var w32 = width >> 5;\n        var board = zeroArray((width >> 5) * height);\n        can.width = width;\n        can.height = height;\n        var cxt = can.getContext('2d');\n        cxt.drawImage(img, 0, 0, img.width, img.height, 0, 0, width, height);\n        var imageData = cxt.getImageData(0, 0, width, height).data;\n        for (var j = 0; j < height; j++) {\n            for (var i = 0; i < width; i++) {\n                var k = w32 * j + (i >> 5);\n                var tmp = (j * width + i) << 2;\n                var flag = imageData[tmp] >= 250 && imageData[tmp + 1] >= 250 && imageData[tmp + 2] >= 250;\n                var m = flag ? 1 << (31 - (i % 32)) : 0;\n                board[k] |= m;\n            }\n        }\n        cloud.board = board;\n        cloud.hasImage = true;\n    };\n    cloud.timeInterval = function (_) {\n        return arguments.length ? ((timeInterval = _ == null ? Infinity : _), cloud) : timeInterval;\n    };\n    cloud.words = function (_) {\n        return arguments.length ? ((words = _), cloud) : words;\n    };\n    cloud.size = function (_) {\n        return arguments.length ? ((size = [+_[0], +_[1]]), cloud) : size;\n    };\n    cloud.font = function (_) {\n        return arguments.length ? ((font = functor(_)), cloud) : font;\n    };\n    cloud.fontStyle = function (_) {\n        return arguments.length ? ((fontStyle = functor(_)), cloud) : fontStyle;\n    };\n    cloud.fontWeight = function (_) {\n        return arguments.length ? ((fontWeight = functor(_)), cloud) : fontWeight;\n    };\n    cloud.rotate = function (_) {\n        return arguments.length ? ((rotate = functor(_)), cloud) : rotate;\n    };\n    cloud.text = function (_) {\n        return arguments.length ? ((text = functor(_)), cloud) : text;\n    };\n    cloud.spiral = function (_) {\n        return arguments.length ? ((spiral = spirals[_] || _), cloud) : spiral;\n    };\n    cloud.fontSize = function (_) {\n        return arguments.length ? ((fontSize = functor(_)), cloud) : fontSize;\n    };\n    cloud.padding = function (_) {\n        return arguments.length ? ((padding = functor(_)), cloud) : padding;\n    };\n    cloud.random = function (_) {\n        return arguments.length ? ((random = _), cloud) : random;\n    };\n    return cloud;\n}\nexports.default = default_1;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar data_set_1 = require(\"../data-set\");\nvar tag_cloud_1 = tslib_1.__importDefault(require(\"../util/tag-cloud\"));\nvar option_parser_1 = require(\"../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    fields: ['text', 'value'],\n    font: function () { return 'serif'; },\n    padding: 1,\n    size: [500, 500],\n    spiral: 'archimedean',\n    // timeInterval: Infinity // max execute time\n    timeInterval: 500,\n};\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var layout = tag_cloud_1.default();\n    // \u5F53\u5BBD\u6216\u8005\u9AD8\u4E3A 0 \u65F6\uFF0C\u5BB9\u4E0D\u4E0B\u4EFB\u4F55\u4E00\u4E2A\u8BCD\u8BED,\n    // \u6240\u4EE5\u6700\u540E\u7684\u6570\u636E\u5E94\u8BE5\u662F\u4E00\u4E2A\u7A7A\u6570\u7EC4\u3002\n    if (!options.size[0] || !options.size[1]) {\n        dataView.rows = [];\n        dataView._tagCloud = layout;\n        return;\n    }\n    ['font', 'fontSize', 'fontWeight', 'padding', 'rotate', 'size', 'spiral', 'timeInterval'].forEach(function (key) {\n        // @ts-ignore\n        if (options[key]) {\n            // @ts-ignore\n            layout[key](options[key]);\n        }\n    });\n    var fields = option_parser_1.getFields(options);\n    var _a = tslib_1.__read(fields, 2), text = _a[0], value = _a[1];\n    if (!util_1.isString(text) || !util_1.isString(value)) {\n        throw new TypeError('Invalid fields: must be an array with 2 strings (e.g. [ \"text\", \"value\" ])!');\n    }\n    var words = dataView.rows.map(function (row) {\n        row.text = row[text];\n        row.value = row[value];\n        return row;\n    });\n    layout.words(words);\n    if (options.imageMask) {\n        layout.createMask(options.imageMask);\n    }\n    // \u8FD9\u91CC\u7684 result \u548C layout \u6307\u5411\u540C\u4E00\u4E2A\u5BF9\u8C61\n    var result = layout.start();\n    var tags = result._tags;\n    var bounds = result._bounds || [\n        { x: 0, y: 0 },\n        { x: options.size[0], y: options.size[1] },\n    ];\n    tags.forEach(function (tag) {\n        tag.x += options.size[0] / 2;\n        tag.y += options.size[1] / 2;\n    });\n    var _b = tslib_1.__read(options.size, 2), w = _b[0], h = _b[1];\n    var hasImage = result.hasImage;\n    tags.push({\n        text: '',\n        value: 0,\n        x: hasImage ? 0 : bounds[0].x,\n        y: hasImage ? 0 : bounds[0].y,\n        opacity: 0,\n    });\n    tags.push({\n        text: '',\n        value: 0,\n        x: hasImage ? w : bounds[1].x,\n        y: hasImage ? h : bounds[1].y,\n        opacity: 0,\n    });\n    dataView.rows = tags;\n    dataView._tagCloud = result;\n}\ndata_set_1.DataSet.registerTransform('tag-cloud', transform);\ndata_set_1.DataSet.registerTransform('word-cloud', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar util_1 = require(\"@antv/util\");\nvar simple_statistics_1 = require(\"simple-statistics\");\nvar partition_1 = tslib_1.__importDefault(require(\"../util/partition\"));\nvar data_set_1 = require(\"../data-set\");\nvar option_parser_1 = require(\"../util/option-parser\");\nvar DEFAULT_OPTIONS = {\n    fields: ['name', 'value'],\n    rows: 5,\n    size: [1, 1],\n    scale: 1,\n    groupBy: [],\n    maxCount: 1000,\n    gapRatio: 0.1,\n    as: ['x', 'y'],\n};\nfunction transform(dataView, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    var _a = tslib_1.__read(fields, 2), nameField = _a[0], valueField = _a[1];\n    var _b = tslib_1.__read(options.as, 2), asX = _b[0], asY = _b[1];\n    var groupBy = options.groupBy;\n    var groups = partition_1.default(dataView.rows, groupBy);\n    var groupKeys = util_1.keys(groups);\n    var _c = tslib_1.__read(options.size, 2), width = _c[0], height = _c[1];\n    var maxCount = options.maxCount;\n    var groupCount = groupKeys.length;\n    var partHeight = height / groupCount;\n    var rows = options.rows;\n    var gapRatio = options.gapRatio;\n    var result = [];\n    var scale = options.scale;\n    var currentGroupIndex = 0;\n    var wStep = 0;\n    // getting suitable scale and width step\n    util_1.forIn(groups, function (group) {\n        var totalValue = simple_statistics_1.sum(util_1.map(group, function (row) { return row[valueField]; }));\n        var cols = Math.ceil((totalValue * scale) / rows);\n        if (totalValue * scale > maxCount) {\n            scale = maxCount / totalValue;\n            cols = Math.ceil((totalValue * scale) / rows);\n        }\n        wStep = width / cols;\n    });\n    // distributing values into grid\n    util_1.forIn(groups, function (group) {\n        var heightRange = [currentGroupIndex * partHeight, (currentGroupIndex + 1) * partHeight];\n        var h = heightRange[1] - heightRange[0];\n        var hStep = (h * (1 - gapRatio)) / rows;\n        var currentCol = 0;\n        var currentRow = 0;\n        util_1.each(group, function (row) {\n            var value = row[valueField];\n            var count = Math.round(value * scale);\n            for (var i = 0; i < count; i++) {\n                if (currentRow === rows) {\n                    currentRow = 0;\n                    currentCol++;\n                }\n                var resultRow = util_1.pick(row, [nameField, valueField].concat(groupBy));\n                resultRow[asX] = currentCol * wStep + wStep / 2;\n                resultRow[asY] = currentRow * hStep + hStep / 2 + heightRange[0];\n                resultRow._wStep = wStep;\n                resultRow._hStep = hStep;\n                currentRow++;\n                result.push(resultRow);\n            }\n        });\n        currentGroupIndex += 1;\n    });\n    dataView.rows = result;\n}\ndata_set_1.DataSet.registerTransform('waffle', transform);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/*\n * @reference: https://github.com/Planeshifter/kernel-smooth/blob/master/lib/index.js\n */\nvar util_1 = require(\"@antv/util\");\nvar get_series_values_1 = tslib_1.__importDefault(require(\"../../util/get-series-values\"));\nvar kernel_1 = tslib_1.__importDefault(require(\"../../util/kernel\"));\nvar data_set_1 = require(\"../../data-set\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar bandwidth_1 = require(\"../../util/bandwidth\");\nvar DEFAULT_OPTIONS = {\n    as: ['x', 'y', 'z'],\n    // fields: [ 'x', 'y' ], // required, one or two fields\n    method: 'gaussian',\n};\nvar KERNEL_METHODS = util_1.keys(kernel_1.default);\nfunction transform(dv, options) {\n    var _a, _b;\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    if (!util_1.isArray(fields) || fields.length !== 2) {\n        throw new TypeError('invalid fields: must be an array of 2 strings!');\n    }\n    var _c = tslib_1.__read(options.as, 3), asX = _c[0], asY = _c[1], asZ = _c[2];\n    if (!util_1.isString(asX) || !util_1.isString(asY) || !util_1.isString(asZ)) {\n        throw new TypeError('invalid as: must be an array of 3 strings!');\n    }\n    var method;\n    if (util_1.isString(options.method)) {\n        if (KERNEL_METHODS.indexOf(options.method) === -1) {\n            throw new TypeError(\"invalid method: \" + options.method + \". Must be one of \" + KERNEL_METHODS.join(', '));\n        }\n        method = kernel_1.default[options.method];\n    }\n    var _d = tslib_1.__read(fields, 2), xField = _d[0], yField = _d[1];\n    var extent = options.extent, bandwidth = options.bandwidth;\n    var extentX;\n    var extentY;\n    if (extent && Array.isArray(extent) && Array.isArray(extent[0]) && Array.isArray(extent[1])) {\n        _a = tslib_1.__read(extent, 2), extentX = _a[0], extentY = _a[1];\n    }\n    else {\n        extentX = dv.range(xField);\n        extentY = dv.range(yField);\n    }\n    var bwX, bwY;\n    if (bandwidth &&\n        Array.isArray(bandwidth) &&\n        bandwidth.slice(0, 2).every(util_1.isNumber) &&\n        bandwidth.slice(0, 2).every(function (item) { return item > 0; })) {\n        _b = tslib_1.__read(bandwidth, 2), bwX = _b[0], bwY = _b[1];\n    }\n    else {\n        bwX = bandwidth_1.silverman(dv.getColumn(xField));\n        bwY = bandwidth_1.silverman(dv.getColumn(yField));\n    }\n    var seriesValuesX = get_series_values_1.default(extentX, bwX);\n    var seriesValuesY = get_series_values_1.default(extentY, bwY);\n    var count = dv.rows.length;\n    var result = [];\n    for (var i = 0; i < seriesValuesX.length; i++) {\n        for (var j = 0; j < seriesValuesY.length; j++) {\n            var sum = 0;\n            var x = seriesValuesX[i];\n            var y = seriesValuesY[j];\n            for (var k = 0; k < count; k++) {\n                sum += method((x - dv.rows[k][xField]) / bwX) * method((y - dv.rows[k][yField]) / bwY);\n            }\n            var z = (1 / (count * bwX * bwY)) * sum;\n            var row = {};\n            row[asX] = x;\n            row[asY] = y;\n            row[asZ] = z;\n            result.push(row);\n        }\n    }\n    dv.rows = result;\n}\ndata_set_1.DataSet.registerTransform('kernel-smooth.density', transform);\ndata_set_1.DataSet.registerTransform('kernel.density', transform);\nexports.default = {\n    KERNEL_METHODS: KERNEL_METHODS,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\n/*\n * @reference: https://github.com/Planeshifter/kernel-smooth/blob/master/lib/index.js\n */\nvar util_1 = require(\"@antv/util\");\nvar get_series_values_1 = tslib_1.__importDefault(require(\"../../util/get-series-values\"));\nvar kernel_1 = tslib_1.__importDefault(require(\"../../util/kernel\"));\nvar data_set_1 = require(\"../../data-set\");\nvar simple_statistics_1 = require(\"simple-statistics\");\nvar option_parser_1 = require(\"../../util/option-parser\");\nvar bandwidth_1 = require(\"../../util/bandwidth\");\nvar DEFAULT_OPTIONS = {\n    as: ['x', 'y'],\n    // fields: [ 'x', 'y' ], // required, one or two fields\n    method: 'gaussian',\n};\nvar KERNEL_METHODS = util_1.keys(kernel_1.default);\n// calculates weight for i-th obs\nfunction weight(kernel, bandwidth, x_0, x_i) {\n    var arg = (x_i - x_0) / bandwidth;\n    return kernel(arg);\n}\n// calculates weight for i-th obs when p > 1\n// function weight_vectors(kernel, bandwidth, x_0, x_i) {\n//   const arg = enclideanDistance(x_i, x_0) / bandwidth;\n//   return kernel(arg);\n// }\nfunction vectorize(fun) {\n    return function (x) {\n        if (!util_1.isArray(x)) {\n            return fun(x);\n        }\n        return x.map(function (x) {\n            return fun(x);\n        });\n    };\n}\nfunction transform(dv, options) {\n    options = util_1.assign({}, DEFAULT_OPTIONS, options);\n    var fields = option_parser_1.getFields(options);\n    if (!util_1.isArray(fields) || !(fields.length === 1 || fields.length === 2)) {\n        throw new TypeError('invalid fields: must be an array of 1 or 2 strings!');\n    }\n    var _a = tslib_1.__read(options.as, 2), asX = _a[0], asY = _a[1];\n    if (!util_1.isString(asX) || !util_1.isString(asY)) {\n        throw new TypeError('invalid as: must be an array of 2 strings!');\n    }\n    var func;\n    var method = options.method;\n    if (util_1.isString(method)) {\n        if (KERNEL_METHODS.indexOf(method) === -1) {\n            throw new TypeError(\"invalid method: \" + method + \". Must be one of \" + KERNEL_METHODS.join(', '));\n        }\n        func = kernel_1.default[method];\n    }\n    var _b = tslib_1.__read(fields, 2), xField = _b[0], yField = _b[1];\n    var xs = dv.getColumn(xField);\n    var extent = options.extent;\n    if (extent || !util_1.isArray(extent)) {\n        extent = dv.range(xField);\n    }\n    var bandwidth = options.bandwidth;\n    if (!bandwidth || !util_1.isNumber(bandwidth) || bandwidth <= 0) {\n        bandwidth = bandwidth_1.silverman(xs);\n    }\n    var seriesValues = get_series_values_1.default(extent, bandwidth);\n    var xCount = xs.length;\n    var weightFunc = weight.bind(null, func, bandwidth);\n    var kernelSmoother;\n    if (util_1.isNil(yField)) {\n        // KDE\n        kernelSmoother = vectorize(function (x) {\n            var weights = xs.map(function (x_i) { return weightFunc(x, x_i); });\n            var num = simple_statistics_1.sum(weights);\n            var denom = xCount * bandwidth;\n            if (!num || !denom)\n                return 0;\n            return num / denom;\n        });\n    }\n    else {\n        // kernel regression smoothing\n        var ys_1 = dv.getColumn(yField);\n        kernelSmoother = vectorize(function (x) {\n            var weights = xs.map(function (x_i) { return weightFunc(x, x_i); });\n            var num = simple_statistics_1.sum(weights.map(function (w, i) { return w * ys_1[i]; }));\n            var denom = simple_statistics_1.sum(weights);\n            if (!num || !denom)\n                return 0;\n            return num / denom;\n        });\n    }\n    var result = seriesValues.map(function (x) {\n        var row = {};\n        row[asX] = x;\n        row[asY] = kernelSmoother(x);\n        return row;\n    });\n    dv.rows = result;\n}\ndata_set_1.DataSet.registerTransform('kernel-smooth.regression', transform);\ndata_set_1.DataSet.registerTransform('kernel.regression', transform);\nexports.default = {\n    KERNEL_METHODS: KERNEL_METHODS,\n};\n", "\"use strict\";\n// extra APIs\nrequire(\"./api/geo\");\nrequire(\"./api/hierarchy\");\nrequire(\"./api/partition\");\nrequire(\"./api/statistics\");\n// connectors\nrequire(\"./connector/default\");\nrequire(\"./connector/dsv\");\nrequire(\"./connector/geo-graticule\");\nrequire(\"./connector/geojson\");\nrequire(\"./connector/graph\");\nrequire(\"./connector/hexjson\");\nrequire(\"./connector/hierarchy\");\nrequire(\"./connector/topojson\");\n// transforms\n// static\nrequire(\"./transform/default\");\nrequire(\"./transform/filter\");\nrequire(\"./transform/fold\");\nrequire(\"./transform/map\");\nrequire(\"./transform/partition\");\nrequire(\"./transform/percent\");\nrequire(\"./transform/pick\");\nrequire(\"./transform/proportion\");\nrequire(\"./transform/rename\");\nrequire(\"./transform/reverse\");\nrequire(\"./transform/sort\");\nrequire(\"./transform/sort-by\");\nrequire(\"./transform/subset\");\n// imputation\nrequire(\"./transform/fill-rows\");\nrequire(\"./transform/impute\");\n// statistics\nrequire(\"./transform/aggregate\");\n// regression\nrequire(\"./transform/regression\");\n// KDE\nrequire(\"./transform/kde\");\n// binning\nrequire(\"./transform/bin/hexagon\");\nrequire(\"./transform/bin/histogram\");\nrequire(\"./transform/bin/quantile\");\nrequire(\"./transform/bin/rectangle\");\n// geo\nrequire(\"./transform/geo/centroid\");\nrequire(\"./transform/geo/projection\");\nrequire(\"./transform/geo/region\");\n// diagram\nrequire(\"./transform/diagram/arc\");\nrequire(\"./transform/diagram/dagre\");\nrequire(\"./transform/diagram/sankey\");\nrequire(\"./transform/diagram/voronoi\");\n// hierarchy\nrequire(\"./transform/hierarchy/cluster\");\nrequire(\"./transform/hierarchy/compact-box\");\nrequire(\"./transform/hierarchy/dendrogram\");\nrequire(\"./transform/hierarchy/indented\");\nrequire(\"./transform/hierarchy/pack\");\nrequire(\"./transform/hierarchy/partition\");\nrequire(\"./transform/hierarchy/tree\");\nrequire(\"./transform/hierarchy/treemap\");\n// tag cloud\nrequire(\"./transform/tag-cloud\");\n// waffle\nrequire(\"./transform/waffle\");\n// kernel smoothing\nrequire(\"./transform/kernel-smooth/density\");\nrequire(\"./transform/kernel-smooth/regression\");\nvar data_set_1 = require(\"./data-set\");\nmodule.exports = data_set_1.DataSet;\n", "export default require(\"./node_modules/@antv/data-set/lib/index.js\");"],
  "mappings": "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AI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,QAAM,IAAG,EAAC,OAAK,MAAK,MAAI,MAAK,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,MAAK,MAAI,OAAM,OAAK,MAAK,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,MAAK,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,MAAK,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,KAAG,MAAK,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,MAAK,SAAO,IAAG,EAAC,OAAK,OAAM,MAAI,OAAM,OAAK,OAAM,MAAI,OAAM,KAAG,OAAM,KAAG,OAAM,KAAG,OAAM,MA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",
  "names": []
}
